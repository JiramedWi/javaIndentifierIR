Class AsyncAppenderTestCase@@ [Set, Up] [Tear, Down] [Log, Manager] [.] [Shutdown] [(] [)] [;] [Close, Test] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Vector, Appender] [Vector, Appender] [=] [New] [Vector, Appender] [(] [)] [;] [Async, Appender] [Async, Appender] [=] [New] [Async, Appender] [(] [)] [;] [Async, Appender] [.] [Set, Name] [(] ["async-, Close, Test"] [)] [;] [Async, Appender] [.] [Add, Appender] [(] [Vector, Appender] [)] [;] [Root] [.] [Add, Appender] [(] [Async, Appender] [)] [;] [Root] [.] [Debug] [(] ["m1"] [)] [;] [Async, Appender] [.] [Close] [(] [)] [;] [Root] [.] [Debug] [(] ["m2"] [)] [;] [Vector] [V] [=] [Vector, Appender] [.] [Get, Vector] [(] [)] [;] [Assert, Equals] [(] [V] [.] [Size] [(] [)] [,] [1] [)] [;] [Test2] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Vector, Appender] [Vector, Appender] [=] [New] [Vector, Appender] [(] [)] [;] [Async, Appender] [Async, Appender] [=] [New] [Async, Appender] [(] [)] [;] [Async, Appender] [.] [Set, Name] [(] ["async-test2"] [)] [;] [Async, Appender] [.] [Add, Appender] [(] [Vector, Appender] [)] [;] [Root] [.] [Add, Appender] [(] [Async, Appender] [)] [;] [Root] [.] [Debug] [(] ["m1"] [)] [;] [Async, Appender] [.] [Close] [(] [)] [;] [Root] [.] [Debug] [(] ["m2"] [)] [;] [Vector] [V] [=] [Vector, Appender] [.] [Get, Vector] [(] [)] [;] [Assert, Equals] [(] [V] [.] [Size] [(] [)] [,] [1] [)] [;] [Assert, True] [(] [Vector, Appender] [.] [Is, Closed] [(] [)] [)] [;] [Test3] [Int] [Len] [=] [200] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Vector, Appender] [Vector, Appender] [=] [New] [Vector, Appender] [(] [)] [;] [Async, Appender] [Async, Appender] [=] [New] [Async, Appender] [(] [)] [;] [Async, Appender] [.] [Set, Name] [(] ["async-test3"] [)] [;] [Async, Appender] [.] [Add, Appender] [(] [Vector, Appender] [)] [;] [Root] [.] [Add, Appender] [(] [Async, Appender] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Len] [;] [I] [++] [)] [{] [Root] [.] [Debug] [(] ["message"] [+] [I] [)] [;] [}] [Root] [.] [Debug] [(] ["message"] [+] [I] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Done loop."] [)] [;] [System] [.] [Out] [.] [Flush] [(] [)] [;] [Async, Appender] [.] [Close] [(] [)] [;] [Root] [.] [Debug] [(] ["m2"] [)] [;] [Vector] [V] [=] [Vector, Appender] [.] [Get, Vector] [(] [)] [;] [Assert, Equals] [(] [V] [.] [Size] [(] [)] [,] [Len] [)] [;] [Assert, True] [(] [Vector, Appender] [.] [Is, Closed] [(] [)] [)] [;]
Class NullPointerAppender@@ [Append] [Throw] [New] [Null, Pointer, Exception] [(] [)] [;] [Close] [Requires, Layout] [Return] [False] [;] [Test, Bad, Appender] [Appender] [Null, Pointer, Appender] [=] [New] [Null, Pointer, Appender] [(] [)] [;] [Async, Appender] [Async, Appender] [=] [New] [Async, Appender] [(] [)] [;] [Async, Appender] [.] [Add, Appender] [(] [Null, Pointer, Appender] [)] [;] [Async, Appender] [.] [Set, Buffer, Size] [(] [5] [)] [;] [Async, Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Null, Pointer, Appender] [)] [;] [Try] [{] [Root] [.] [Info] [(] [", Message"] [)] [;] [Thread] [.] [Sleep] [(] [10] [)] [;] [Root] [.] [Info] [(] [", Message"] [)] [;] [Fail] [(] [", Should have thrown exception"] [)] [;] [}] [Catch] [(] [Null, Pointer, Exception] [Ex] [)] [{] [}] [Root] [.] [Info] [(] [", Message"] [)] [;] [Thread] [.] [Sleep] [(] [10] [)] [;] [Root] [.] [Info] [(] [", Message"] [)] [;] [Fail] [(] [", Should have thrown exception"] [)] [;] [Test, Location, Info, True] [Blockable, Vector, Appender] [Blockable, Appender] [=] [New] [Blockable, Vector, Appender] [(] [)] [;] [Async, Appender] [Async] [=] [New] [Async, Appender] [(] [)] [;] [Async] [.] [Add, Appender] [(] [Blockable, Appender] [)] [;] [Async] [.] [Set, Buffer, Size] [(] [5] [)] [;] [Async] [.] [Set, Location, Info] [(] [True] [)] [;] [Async] [.] [Set, Blocking] [(] [False] [)] [;] [Async] [.] [Activate, Options] [(] [)] [;] [Logger] [Root, Logger] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Async] [)] [;] [Greeter] [Greeter] [=] [New] [Greeter] [(] [Root, Logger] [,] [100] [)] [;] [Synchronized] [(] [Blockable, Appender] [.] [Get, Monitor] [(] [)] [)] [{] [Greeter] [.] [Run] [(] [)] [;] [Root, Logger] [.] [Error] [(] [", That's all folks."] [)] [;] [}] [Greeter] [.] [Run] [(] [)] [;] [Root, Logger] [.] [Error] [(] [", That's all folks."] [)] [;] [Async] [.] [Close] [(] [)] [;] [Vector] [Events] [=] [Blockable, Appender] [.] [Get, Vector] [(] [)] [;] [Logging, Event] [Initial, Event] [=] [(] [Logging, Event] [)] [Events] [.] [Get] [(] [0] [)] [;] [Logging, Event] [Discard, Event] [=] [(] [Logging, Event] [)] [Events] [.] [Get] [(] [Events] [.] [Size] [(] [)] [-] [1] [)] [;] [Pattern, Layout] [Layout] [=] [New] [Pattern, Layout] [(] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%, C:%, L %m%n"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [String] [Initial, Str] [=] [Layout] [.] [Format] [(] [Initial, Event] [)] [;] [Assert, Equals] [(] [Async, Appender, Test, Case] [.] [Class] [.] [Get, Name] [(] [)] [,] [Initial, Str] [.] [Substring] [(] [0] [,] [Async, Appender, Test, Case] [.] [Class] [.] [Get, Name] [(] [)] [.] [Length] [(] [)] [)] [)] [;] [String] [Discard, Str] [=] [Layout] [.] [Format] [(] [Discard, Event] [)] [;] [Assert, Equals] [(] ["?:? "] [,] [Discard, Str] [.] [Substring] [(] [0] [,] [4] [)] [)] [;] [Test, Location, Info, False] [Blockable, Vector, Appender] [Blockable, Appender] [=] [New] [Blockable, Vector, Appender] [(] [)] [;] [Async, Appender] [Async] [=] [New] [Async, Appender] [(] [)] [;] [Async] [.] [Add, Appender] [(] [Blockable, Appender] [)] [;] [Async] [.] [Set, Buffer, Size] [(] [5] [)] [;] [Async] [.] [Set, Location, Info] [(] [False] [)] [;] [Async] [.] [Set, Blocking] [(] [False] [)] [;] [Async] [.] [Activate, Options] [(] [)] [;] [Logger] [Root, Logger] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Async] [)] [;] [Greeter] [Greeter] [=] [New] [Greeter] [(] [Root, Logger] [,] [100] [)] [;] [Synchronized] [(] [Blockable, Appender] [.] [Get, Monitor] [(] [)] [)] [{] [Greeter] [.] [Run] [(] [)] [;] [Root, Logger] [.] [Error] [(] [", That's all folks."] [)] [;] [}] [Greeter] [.] [Run] [(] [)] [;] [Root, Logger] [.] [Error] [(] [", That's all folks."] [)] [;] [Async] [.] [Close] [(] [)] [;] [Vector] [Events] [=] [Blockable, Appender] [.] [Get, Vector] [(] [)] [;] [Logging, Event] [Initial, Event] [=] [(] [Logging, Event] [)] [Events] [.] [Get] [(] [0] [)] [;] [Logging, Event] [Discard, Event] [=] [(] [Logging, Event] [)] [Events] [.] [Get] [(] [Events] [.] [Size] [(] [)] [-] [1] [)] [;] [Pattern, Layout] [Layout] [=] [New] [Pattern, Layout] [(] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%, C:%, L %m%n"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [String] [Initial, Str] [=] [Layout] [.] [Format] [(] [Initial, Event] [)] [;] [Assert, Equals] [(] ["?:? "] [,] [Initial, Str] [.] [Substring] [(] [0] [,] [4] [)] [)] [;] [String] [Discard, Str] [=] [Layout] [.] [Format] [(] [Discard, Event] [)] [;] [Assert, Equals] [(] ["?:? "] [,] [Discard, Str] [.] [Substring] [(] [0] [,] [4] [)] [)] [;]
Class Greeter@@ [Private] [Final] [Logger] [Logger] [;] [Private] [Final] [Int] [Repetitions] [;] [If] [(] [Logger] [==] [Null] [)] [{] [Throw] [New] [Illegal, Argument, Exception] [(] ["logger"] [)] [;] [}] [Throw] [New] [Illegal, Argument, Exception] [(] ["logger"] [)] [;] [This] [.] [Logger] [=] [Logger] [;] [This] [.] [Repetitions] [=] [Repetitions] [;] [Run] [Try] [{] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Repetitions] [;] [I] [++] [)] [{] [Logger] [.] [Info] [(] [", Hello, , World"] [)] [;] [Thread] [.] [Sleep] [(] [1] [)] [;] [}] [}] [Catch] [(] [Interrupted, Exception] [Ex] [)] [{] [Thread] [.] [Current, Thread] [(] [)] [.] [Interrupt] [(] [)] [;] [}] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Repetitions] [;] [I] [++] [)] [{] [Logger] [.] [Info] [(] [", Hello, , World"] [)] [;] [Thread] [.] [Sleep] [(] [1] [)] [;] [}] [Logger] [.] [Info] [(] [", Hello, , World"] [)] [;] [Thread] [.] [Sleep] [(] [1] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Interrupt] [(] [)] [;]
Class BlockableVectorAppender@@ [Private] [Final] [Object] [Monitor=new, Object()] [;] [Append] [Synchronized] [(] [Monitor] [)] [{] [Super] [.] [Append] [(] [Event] [)] [;] [If] [(] [Event] [.] [Get, Level] [(] [)] [==] [Level] [.] [Fatal] [)] [{] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Event] [.] [Get, Logger, Name] [(] [)] [)] [;] [Logger] [.] [Error] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [Logger] [.] [Warn] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [Logger] [.] [Info] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [Logger] [.] [Debug] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [}] [}] [Super] [.] [Append] [(] [Event] [)] [;] [If] [(] [Event] [.] [Get, Level] [(] [)] [==] [Level] [.] [Fatal] [)] [{] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Event] [.] [Get, Logger, Name] [(] [)] [)] [;] [Logger] [.] [Error] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [Logger] [.] [Warn] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [Logger] [.] [Info] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [Logger] [.] [Debug] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [}] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Event] [.] [Get, Logger, Name] [(] [)] [)] [;] [Logger] [.] [Error] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [Logger] [.] [Warn] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [Logger] [.] [Info] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [Logger] [.] [Debug] [(] [Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [)] [;] [Get, Monitor] [Return] [Monitor] [;] [Test, Mutable, Message] [Blockable, Vector, Appender] [Blockable, Appender] [=] [New] [Blockable, Vector, Appender] [(] [)] [;] [Async, Appender] [Async] [=] [New] [Async, Appender] [(] [)] [;] [Async] [.] [Add, Appender] [(] [Blockable, Appender] [)] [;] [Async] [.] [Set, Buffer, Size] [(] [5] [)] [;] [Async] [.] [Set, Location, Info] [(] [False] [)] [;] [Async] [.] [Activate, Options] [(] [)] [;] [Logger] [Root, Logger] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Async] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [", Hello"] [)] [;] [Synchronized] [(] [Blockable, Appender] [.] [Get, Monitor] [(] [)] [)] [{] [Root, Logger] [.] [Info] [(] [Buf] [)] [;] [Buf] [.] [Append] [(] [", , World."] [)] [;] [}] [Root, Logger] [.] [Info] [(] [Buf] [)] [;] [Buf] [.] [Append] [(] [", , World."] [)] [;] [Async] [.] [Close] [(] [)] [;] [Vector] [Events] [=] [Blockable, Appender] [.] [Get, Vector] [(] [)] [;] [Logging, Event] [Event] [=] [(] [Logging, Event] [)] [Events] [.] [Get] [(] [0] [)] [;] [Pattern, Layout] [Layout] [=] [New] [Pattern, Layout] [(] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%m"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [String] [Msg] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [Assert, Equals] [(] [", Hello"] [,] [Msg] [)] [;]
Class CategoryTest@@ [Test, Forced, Log] [Mock, Category] [Category] [=] [New] [Mock, Category] [(] ["org.example.foo"] [)] [;] [Category] [.] [Set, Additivity] [(] [False] [)] [;] [Category] [.] [Add, Appender] [(] [New] [Vector, Appender] [(] [)] [)] [;] [Category] [.] [Info] [(] [", Hello, , World"] [)] [;] [Test, Get, Chained, Priority, Return, Type] [Method] [Method] [=] [Category] [.] [Class] [.] [Get, Method] [(] ["get, Chained, Priority"] [,] [(] [Class] [[] []] [)] [Null] [)] [;] [Assert, True] [(] [Method] [.] [Get, Return, Type] [(] [)] [==] [Priority] [.] [Class] [)] [;] [Test, L7dlog] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.example.foo"] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Error] [)] [;] [Priority] [Debug] [=] [Level] [.] [Debug] [;] [Logger] [.] [L7dlog] [(] [Debug] [,] [", Hello, , World"] [,] [Null] [)] [;] [Test, L7dlog4, Param] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.example.foo"] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Error] [)] [;] [Priority] [Debug] [=] [Level] [.] [Debug] [;] [Logger] [.] [L7dlog] [(] [Debug] [,] [", Hello, , World"] [,] [New] [Object] [[] [0] []] [,] [Null] [)] [;] [Test, Set, Priority] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.example.foo"] [)] [;] [Priority] [Debug] [=] [Level] [.] [Debug] [;] [Logger] [.] [Set, Priority] [(] [Debug] [)] [;]
Class MockCategory@@ [Repository] [=] [New] [Hierarchy] [(] [This] [)] [;] [Info] [Priority] [Info] [=] [Level] [.] [Info] [;] [Forced, Log] [(] [Mock, Category] [.] [Class] [.] [To, String] [(] [)] [,] [Info] [,] [Msg] [,] [Null] [)] [;]
Class CoreTestSuite@@ [Suite] [Test, Suite] [S] [=] [New] [Test, Suite] [(] [)] [;] [S] [.] [Add, Test, Suite] [(] [Logging, Event, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Level, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Priority, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Category, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [File, Appender, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Log, Manager, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Helpers] [.] [Log, Log, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Layout, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Helpers] [.] [Date, Layout, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Ttcc, Layout, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Xml] [.] [Xml, Layout, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Html, Layout, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Pattern, Layout, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Spi] [.] [Logging, Event, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Spi] [.] [Throwable, Information, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Spi] [.] [Location, Info, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Property, Configurator, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Net] [.] [Smtp, Appender, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Net] [.] [Telnet, Appender, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Default, Throwable, Renderer, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Enhanced, Throwable, Renderer, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Test, Log, Xf] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Test, Log, Mf] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Test, Log, Sf] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Pattern] [.] [Cached, Date, Format, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Pattern] [.] [Formatting, Info, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Pattern] [.] [Name, Abbreviator, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Pattern] [.] [Pattern, Parser, Test] [.] [Class] [)] [;] [S] [.] [Add, Test, Suite] [(] [Org] [.] [Apache] [.] [Log4j] [.] [Helpers] [.] [Util, Logging, Level, Test] [.] [Class] [)] [;] [Return] [S] [;]
Class XLogger@@ [Private] [Static] [String] [Fqcn=, X, Logger.class.get, Name()+"."] [;] [Private] [Static] [X, Factory] [Factory=new, X, Factory()] [;] [String] [Suffix=""] [;] [Activate, Options] [Debug] [Super] [.] [Log] [(] [Fqcn] [,] [Level] [.] [Debug] [,] [Message] [+] [" "] [+] [Suffix] [,] [Null] [)] [;] [Lethal] [If] [(] [Repository] [.] [Is, Disabled] [(] [X, Level] [.] [Lethal, Int] [)] [)] [Return] [;] [If] [(] [X, Level] [.] [Lethal] [.] [Is, Greater, Or, Equal] [(] [This] [.] [Get, Effective, Level] [(] [)] [)] [)] [Forced, Log] [(] [Fqcn] [,] [X, Level] [.] [Lethal] [,] [Message] [,] [T] [)] [;] [Lethal] [If] [(] [Repository] [.] [Is, Disabled] [(] [X, Level] [.] [Lethal, Int] [)] [)] [Return] [;] [If] [(] [X, Level] [.] [Lethal] [.] [Is, Greater, Or, Equal] [(] [This] [.] [Get, Effective, Level] [(] [)] [)] [)] [Forced, Log] [(] [Fqcn] [,] [X, Level] [.] [Lethal] [,] [Message] [,] [Null] [)] [;] [Get, Logger] [Return] [Log, Manager] [.] [Get, Logger] [(] [Name] [,] [Factory] [)] [;] [Get, Logger] [Return] [X, Logger] [.] [Get, Logger] [(] [Clazz] [.] [Get, Name] [(] [)] [)] [;] [Get, Suffix] [Return] [Suffix] [;] [Set, Suffix] [This] [.] [Suffix] [=] [Suffix] [;] [Trace] [If] [(] [Repository] [.] [Is, Disabled] [(] [X, Level] [.] [Trace, Int] [)] [)] [Return] [;] [If] [(] [X, Level] [.] [Trace] [.] [Is, Greater, Or, Equal] [(] [This] [.] [Get, Effective, Level] [(] [)] [)] [)] [Forced, Log] [(] [Fqcn] [,] [X, Level] [.] [Trace] [,] [Message] [,] [T] [)] [;] [Trace] [If] [(] [Repository] [.] [Is, Disabled] [(] [X, Level] [.] [Trace, Int] [)] [)] [Return] [;] [If] [(] [X, Level] [.] [Trace] [.] [Is, Greater, Or, Equal] [(] [This] [.] [Get, Effective, Level] [(] [)] [)] [)] [Forced, Log] [(] [Fqcn] [,] [X, Level] [.] [Trace] [,] [Message] [,] [Null] [)] [;]
Class XFactory@@ [Make, New, Logger, Instance] [Return] [New] [X, Logger] [(] [Name] [)] [;]
Class XLoggerTestCase@@ [Static] [String] [Filtered="output/filtered"] [;] [Static] [X, Logger] [Logger=(, X, Logger), X, Logger.get, Logger(, X, Logger, Test, Case.class)] [;] [Tear, Down] [Logger] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Test1] [Common] [(] [1] [)] [;] [Test2] [Common] [(] [2] [)] [;] [Common] [Dom, Configurator] [.] [Configure] [(] ["input/xml/custom, Logger"] [+] [Number] [+] [".xml"] [)] [;] [Int] [I] [=] [-] [1] [;] [Logger] [.] [Trace] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Fatal] [(] [", Message "] [+] [++] [I] [)] [;] [Exception] [E] [=] [New] [Exception] [(] [", Just testing"] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Transformer] [.] [Transform] [(] ["output/temp"] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/custom, Logger."] [+] [Number] [)] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [X, Logger, Test, Case] [(] ["test1"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [X, Logger, Test, Case] [(] ["test2"] [)] [)] [;] [Return] [Suite] [;]
Class TestCase1@@ [Set, Up] [Tear, Down] [Log, Manager] [.] [Shutdown] [(] [)] [;] [None, Test] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Boolean] [Root, Is, Configured] [=] [Root] [.] [Get, All, Appenders] [(] [)] [.] [Has, More, Elements] [(] [)] [;] [Assert, True] [(] [!] [Root, Is, Configured] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Test, Case1] [(] ["none, Test"] [)] [)] [;] [Return] [Suite] [;]
Class TestCase2@@ [Set, Up] [Tear, Down] [Log, Manager] [.] [Shutdown] [(] [)] [;] [Xml, Test] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Boolean] [Root, Is, Configured] [=] [Root] [.] [Get, All, Appenders] [(] [)] [.] [Has, More, Elements] [(] [)] [;] [Assert, True] [(] [Root, Is, Configured] [)] [;] [Enumeration] [E] [=] [Root] [.] [Get, All, Appenders] [(] [)] [;] [Appender] [Appender] [=] [(] [Appender] [)] [E] [.] [Next, Element] [(] [)] [;] [Assert, Equals] [(] [Appender] [.] [Get, Name] [(] [)] [,] [", D1"] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Test, Case2] [(] ["xml, Test"] [)] [)] [;] [Return] [Suite] [;]
Class TestCase3@@ [Set, Up] [Tear, Down] [Log, Manager] [.] [Shutdown] [(] [)] [;] [Properties, Test] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Boolean] [Root, Is, Configured] [=] [Root] [.] [Get, All, Appenders] [(] [)] [.] [Has, More, Elements] [(] [)] [;] [Assert, True] [(] [Root, Is, Configured] [)] [;] [Enumeration] [E] [=] [Root] [.] [Get, All, Appenders] [(] [)] [;] [Appender] [Appender] [=] [(] [Appender] [)] [E] [.] [Next, Element] [(] [)] [;] [Assert, Equals] [(] [Appender] [.] [Get, Name] [(] [)] [,] [", D3"] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Test, Case3] [(] ["properties, Test"] [)] [)] [;] [Return] [Suite] [;]
Class TestCase4@@ [Set, Up] [Tear, Down] [Log, Manager] [.] [Shutdown] [(] [)] [;] [Combined, Test] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Boolean] [Root, Is, Configured] [=] [Root] [.] [Get, All, Appenders] [(] [)] [.] [Has, More, Elements] [(] [)] [;] [Assert, True] [(] [Root, Is, Configured] [)] [;] [Enumeration] [E] [=] [Root] [.] [Get, All, Appenders] [(] [)] [;] [Appender] [Appender] [=] [(] [Appender] [)] [E] [.] [Next, Element] [(] [)] [;] [Assert, Equals] [(] [Appender] [.] [Get, Name] [(] [)] [,] [", D1"] [)] [;] [Assert, Equals] [(] [E] [.] [Has, More, Elements] [(] [)] [,] [False] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Test, Case4] [(] ["combined, Test"] [)] [)] [;] [Return] [Suite] [;]
Class DefaultThrowableRendererTest@@ [Test, Default, Render] [Throwable, Renderer] [R] [=] [New] [Default, Throwable, Renderer] [(] [)] [;] [Exception] [Ex] [=] [New] [Exception] [(] [)] [;] [String] [[] []] [Str, Rep] [=] [R] [.] [Do, Render] [(] [Ex] [)] [;] [Assert, Not, Null] [(] [Str, Rep] [)] [;] [Assert, True] [(] [Str, Rep] [.] [Length] [>] [0] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Str, Rep] [.] [Length] [;] [I] [++] [)] [{] [Assert, Not, Null] [(] [Str, Rep] [[] [I] []] [)] [;] [}] [Assert, Not, Null] [(] [Str, Rep] [[] [I] []] [)] [;]
Class DRFATestCase@@ [Tear, Down] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Test, Compute, Check, Period] [Daily, Rolling, File, Appender] [Drfa] [=] [New] [Daily, Rolling, File, Appender] [(] [)] [;] [Drfa] [.] [Set, Name] [(] ["test, Compute, Check, Period"] [)] [;] [Drfa] [.] [Set, Date, Pattern] [(] ["yyyy-, Mm-dd.'log'"] [)] [;] [Drfa] [.] [Activate, Options] [(] [)] [;] [Drfa] [.] [Compute, Check, Period] [(] [)] [;] [Assert, Equals] [(] [Drfa] [.] [Compute, Check, Period] [(] [)] [,] [Daily, Rolling, File, Appender] [.] [Top, Of, Day] [)] [;] [Drfa] [.] [Set, Date, Pattern] [(] ["yyyy-, Mm-dd mm.'log'"] [)] [;] [Assert, Equals] [(] [Drfa] [.] [Compute, Check, Period] [(] [)] [,] [Daily, Rolling, File, Appender] [.] [Top, Of, Minute] [)] [;] [Drfa] [.] [Set, Date, Pattern] [(] ["yyyy-, Mm-dd a.'log'"] [)] [;] [Assert, Equals] [(] [Drfa] [.] [Compute, Check, Period] [(] [)] [,] [Daily, Rolling, File, Appender] [.] [Half, Day] [)] [;] [Drfa] [.] [Set, Date, Pattern] [(] ["yyyy-, Mm-dd , Hh.'log'"] [)] [;] [Assert, Equals] [(] [Drfa] [.] [Compute, Check, Period] [(] [)] [,] [Daily, Rolling, File, Appender] [.] [Top, Of, Hour] [)] [;] [Drfa] [.] [Set, Date, Pattern] [(] ["yyyy-, Mm.'log'"] [)] [;] [Assert, Equals] [(] [Drfa] [.] [Compute, Check, Period] [(] [)] [,] [Daily, Rolling, File, Appender] [.] [Top, Of, Month] [)] [;] [Drfa] [.] [Set, Date, Pattern] [(] ["'log', Hh'log'"] [)] [;] [Assert, Equals] [(] [Drfa] [.] [Compute, Check, Period] [(] [)] [,] [Daily, Rolling, File, Appender] [.] [Top, Of, Hour] [)] [;] [Test, Rc1] [Rolling, Calendar] [Rc] [=] [New] [Rolling, Calendar] [(] [)] [;] [Rc] [.] [Set, Type] [(] [Daily, Rolling, File, Appender] [.] [Top, Of, Day] [)] [;] [Calendar] [C] [=] [Calendar] [.] [Get, Instance] [(] [)] [;] [Int] [[] []] [M31] [=] [{] [0] [,] [2] [,] [4] [,] [6] [,] [7] [,] [9] [,] [11] [}] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [M31] [.] [Length] [;] [I] [++] [)] [{] [For] [(] [Int] [D] [=] [1] [;] [D] [<=] [31] [;] [D] [++] [)] [{] [For] [(] [Int] [H] [=] [0] [;] [H] [<] [23] [;] [H] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [10] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [10] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [1] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [+] [1] [)] [;] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [}] [}] [}] [For] [(] [Int] [D] [=] [1] [;] [D] [<=] [31] [;] [D] [++] [)] [{] [For] [(] [Int] [H] [=] [0] [;] [H] [<] [23] [;] [H] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [10] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [10] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [1] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [+] [1] [)] [;] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [}] [}] [For] [(] [Int] [H] [=] [0] [;] [H] [<] [23] [;] [H] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [10] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [10] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [1] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [+] [1] [)] [;] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [}] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [10] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [10] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [1] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [+] [1] [)] [;] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [1] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [+] [1] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Test, Rc2] [Rolling, Calendar] [Rc] [=] [New] [Rolling, Calendar] [(] [)] [;] [Rc] [.] [Set, Type] [(] [Daily, Rolling, File, Appender] [.] [Top, Of, Hour] [)] [;] [Calendar] [C] [=] [Calendar] [.] [Get, Instance] [(] [)] [;] [Int] [[] []] [M31] [=] [{] [0] [,] [2] [,] [4] [,] [6] [,] [7] [,] [9] [,] [11] [}] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [M31] [.] [Length] [;] [I] [++] [)] [{] [System] [.] [Out] [.] [Println] [(] [", Month = "] [+] [(] [M31] [[] [I] []] [+] [1] [)] [)] [;] [For] [(] [Int] [D] [=] [1] [;] [D] [<=] [31] [;] [D] [++] [)] [{] [For] [(] [Int] [H] [=] [0] [;] [H] [<] [23] [;] [H] [++] [)] [{] [For] [(] [Int] [M] [=] [0] [;] [M] [<=] [59] [;] [M] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [12] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [0] [)] [;] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [Else] [{] [If] [(] [Dlt, State0] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [H] [)] [;] [}] [Else] [{] [}] [}] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [}] [}] [}] [System] [.] [Out] [.] [Println] [(] [", Month = "] [+] [(] [M31] [[] [I] []] [+] [1] [)] [)] [;] [For] [(] [Int] [D] [=] [1] [;] [D] [<=] [31] [;] [D] [++] [)] [{] [For] [(] [Int] [H] [=] [0] [;] [H] [<] [23] [;] [H] [++] [)] [{] [For] [(] [Int] [M] [=] [0] [;] [M] [<=] [59] [;] [M] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [12] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [0] [)] [;] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [Else] [{] [If] [(] [Dlt, State0] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [H] [)] [;] [}] [Else] [{] [}] [}] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [}] [}] [For] [(] [Int] [H] [=] [0] [;] [H] [<] [23] [;] [H] [++] [)] [{] [For] [(] [Int] [M] [=] [0] [;] [M] [<=] [59] [;] [M] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [12] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [0] [)] [;] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [Else] [{] [If] [(] [Dlt, State0] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [H] [)] [;] [}] [Else] [{] [}] [}] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [}] [For] [(] [Int] [M] [=] [0] [;] [M] [<=] [59] [;] [M] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [12] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [0] [)] [;] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [Else] [{] [If] [(] [Dlt, State0] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [H] [)] [;] [}] [Else] [{] [}] [}] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [12] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [0] [)] [;] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [Else] [{] [If] [(] [Dlt, State0] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [H] [)] [;] [}] [Else] [{] [}] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [If] [(] [Dlt, State0] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [H] [)] [;] [}] [Else] [{] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [H] [)] [;] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [Test, Rc3] [Rolling, Calendar] [Rc] [=] [New] [Rolling, Calendar] [(] [)] [;] [Rc] [.] [Set, Type] [(] [Daily, Rolling, File, Appender] [.] [Top, Of, Minute] [)] [;] [Int] [[] []] [S] [=] [{] [0] [,] [1] [,] [5] [,] [10] [,] [21] [,] [30] [,] [59] [}] [;] [Int] [[] []] [M] [=] [{] [0] [,] [1] [,] [5] [,] [10] [,] [21] [,] [30] [,] [59] [}] [;] [Calendar] [C] [=] [Calendar] [.] [Get, Instance] [(] [)] [;] [Int] [[] []] [M31] [=] [{] [2] [,] [9] [,] [0] [,] [4] [,] [6] [,] [7] [,] [11] [}] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [M31] [.] [Length] [;] [I] [++] [)] [{] [System] [.] [Out] [.] [Println] [(] [", Month = "] [+] [(] [M31] [[] [I] []] [+] [1] [)] [)] [;] [For] [(] [Int] [D] [=] [1] [;] [D] [<=] [31] [;] [D] [++] [)] [{] [For] [(] [Int] [H] [=] [0] [;] [H] [<] [23] [;] [H] [++] [)] [{] [For] [(] [Int] [M] [=] [0] [;] [M] [<] [M] [.] [Length] [;] [M] [++] [)] [{] [For] [(] [Int] [S] [=] [0] [;] [S] [<] [S] [.] [Length] [;] [S] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [[] [M] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [S] [[] [S] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [1] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [0] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [(] [M] [[] [M] []] [+] [1] [)] [%] [60] [)] [;] [If] [(] [M] [[] [M] []] [==] [59] [)] [{] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [}] [}] [Else] [{] [If] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [!=] [H] [)] [{] [C] [.] [Add] [(] [Calendar] [.] [Hour, Of, Day] [,] [+] [1] [)] [;] [Boolean] [Dlt, State2] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [If] [(] [Dlt, State1] [==] [Dlt, State2] [)] [{] [Fail] [(] [", No switch"] [)] [;] [}] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [}] [}] [}] [}] [System] [.] [Out] [.] [Println] [(] [", Month = "] [+] [(] [M31] [[] [I] []] [+] [1] [)] [)] [;] [For] [(] [Int] [D] [=] [1] [;] [D] [<=] [31] [;] [D] [++] [)] [{] [For] [(] [Int] [H] [=] [0] [;] [H] [<] [23] [;] [H] [++] [)] [{] [For] [(] [Int] [M] [=] [0] [;] [M] [<] [M] [.] [Length] [;] [M] [++] [)] [{] [For] [(] [Int] [S] [=] [0] [;] [S] [<] [S] [.] [Length] [;] [S] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [[] [M] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [S] [[] [S] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [1] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [0] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [(] [M] [[] [M] []] [+] [1] [)] [%] [60] [)] [;] [If] [(] [M] [[] [M] []] [==] [59] [)] [{] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [}] [}] [Else] [{] [If] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [!=] [H] [)] [{] [C] [.] [Add] [(] [Calendar] [.] [Hour, Of, Day] [,] [+] [1] [)] [;] [Boolean] [Dlt, State2] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [If] [(] [Dlt, State1] [==] [Dlt, State2] [)] [{] [Fail] [(] [", No switch"] [)] [;] [}] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [}] [}] [}] [For] [(] [Int] [H] [=] [0] [;] [H] [<] [23] [;] [H] [++] [)] [{] [For] [(] [Int] [M] [=] [0] [;] [M] [<] [M] [.] [Length] [;] [M] [++] [)] [{] [For] [(] [Int] [S] [=] [0] [;] [S] [<] [S] [.] [Length] [;] [S] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [[] [M] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [S] [[] [S] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [1] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [0] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [(] [M] [[] [M] []] [+] [1] [)] [%] [60] [)] [;] [If] [(] [M] [[] [M] []] [==] [59] [)] [{] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [}] [}] [Else] [{] [If] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [!=] [H] [)] [{] [C] [.] [Add] [(] [Calendar] [.] [Hour, Of, Day] [,] [+] [1] [)] [;] [Boolean] [Dlt, State2] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [If] [(] [Dlt, State1] [==] [Dlt, State2] [)] [{] [Fail] [(] [", No switch"] [)] [;] [}] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [}] [}] [For] [(] [Int] [M] [=] [0] [;] [M] [<] [M] [.] [Length] [;] [M] [++] [)] [{] [For] [(] [Int] [S] [=] [0] [;] [S] [<] [S] [.] [Length] [;] [S] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [[] [M] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [S] [[] [S] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [1] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [0] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [(] [M] [[] [M] []] [+] [1] [)] [%] [60] [)] [;] [If] [(] [M] [[] [M] []] [==] [59] [)] [{] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [}] [}] [Else] [{] [If] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [!=] [H] [)] [{] [C] [.] [Add] [(] [Calendar] [.] [Hour, Of, Day] [,] [+] [1] [)] [;] [Boolean] [Dlt, State2] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [If] [(] [Dlt, State1] [==] [Dlt, State2] [)] [{] [Fail] [(] [", No switch"] [)] [;] [}] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [}] [For] [(] [Int] [S] [=] [0] [;] [S] [<] [S] [.] [Length] [;] [S] [++] [)] [{] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [[] [M] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [S] [[] [S] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [1] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [0] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [(] [M] [[] [M] []] [+] [1] [)] [%] [60] [)] [;] [If] [(] [M] [[] [M] []] [==] [59] [)] [{] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [}] [}] [Else] [{] [If] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [!=] [H] [)] [{] [C] [.] [Add] [(] [Calendar] [.] [Hour, Of, Day] [,] [+] [1] [)] [;] [Boolean] [Dlt, State2] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [If] [(] [Dlt, State1] [==] [Dlt, State2] [)] [{] [Fail] [(] [", No switch"] [)] [;] [}] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [C] [.] [Clear] [(] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Year] [,] [20] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Month] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Day, Of, Month] [,] [D] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Hour, Of, Day] [,] [H] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Minute] [,] [M] [[] [M] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [S] [[] [S] []] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [88] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [1] [)] [;] [Boolean] [Dlt, State0] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [C] [.] [Set, Time] [(] [Rc] [.] [Get, Next, Check, Date] [(] [C] [.] [Get, Time] [(] [)] [)] [)] [;] [C] [.] [Add] [(] [Calendar] [.] [Millisecond] [,] [0] [)] [;] [Boolean] [Dlt, State1] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Millisecond] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Second] [)] [,] [0] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Minute] [)] [,] [(] [M] [[] [M] []] [+] [1] [)] [%] [60] [)] [;] [If] [(] [M] [[] [M] []] [==] [59] [)] [{] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [}] [}] [Else] [{] [If] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [!=] [H] [)] [{] [C] [.] [Add] [(] [Calendar] [.] [Hour, Of, Day] [,] [+] [1] [)] [;] [Boolean] [Dlt, State2] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [If] [(] [Dlt, State1] [==] [Dlt, State2] [)] [{] [Fail] [(] [", No switch"] [)] [;] [}] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [If] [(] [Dlt, State0] [==] [Dlt, State1] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [,] [(] [H] [+] [1] [)] [%] [24] [)] [;] [If] [(] [H] [==] [23] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [(] [D] [+] [1] [)] [%] [32] [)] [;] [If] [(] [D] [==] [31] [)] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [}] [Else] [{] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [}] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [(] [Calendar] [.] [January] [+] [M31] [[] [I] []] [+] [1] [)] [%] [12] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [If] [(] [C] [.] [Get] [(] [Calendar] [.] [Hour, Of, Day] [)] [!=] [H] [)] [{] [C] [.] [Add] [(] [Calendar] [.] [Hour, Of, Day] [,] [+] [1] [)] [;] [Boolean] [Dlt, State2] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [If] [(] [Dlt, State1] [==] [Dlt, State2] [)] [{] [Fail] [(] [", No switch"] [)] [;] [}] [}] [C] [.] [Add] [(] [Calendar] [.] [Hour, Of, Day] [,] [+] [1] [)] [;] [Boolean] [Dlt, State2] [=] [C] [.] [Get, Time, Zone] [(] [)] [.] [In, Daylight, Time] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [If] [(] [Dlt, State1] [==] [Dlt, State2] [)] [{] [Fail] [(] [", No switch"] [)] [;] [}] [Fail] [(] [", No switch"] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Day, Of, Month] [)] [,] [D] [)] [;] [Assert, Equals] [(] [C] [.] [Get] [(] [Calendar] [.] [Month] [)] [,] [Calendar] [.] [January] [+] [M31] [[] [I] []] [)] [;] [Test3, Param] [Layout] [Layout] [=] [New] [Simple, Layout] [(] [)] [;] [Daily, Rolling, File, Appender] [Appender] [=] [New] [Daily, Rolling, File, Appender] [(] [Layout] [,] [Filename] [,] [Date, Pattern] [)] [;] [Assert, Equals] [(] [Date, Pattern] [,] [Appender] [.] [Get, Date, Pattern] [(] [)] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Root] [.] [Info] [(] [", Hello, , World"] [)] [;] [Assert, True] [(] [New] [File] [(] [Filename] [)] [.] [Exists] [(] [)] [)] [;] [Test, Top, Of, Year] [Try] [{] [Test3, Param] [(] ["'.'yyyy"] [,] ["output/drfaTop, Of, Year.log"] [)] [;] [Fail] [(] [", Expected illegal state exception."] [)] [;] [}] [Catch] [(] [Illegal, State, Exception] [Ex] [)] [{] [Assert, Not, Null] [(] [Ex] [)] [;] [}] [Test3, Param] [(] ["'.'yyyy"] [,] ["output/drfaTop, Of, Year.log"] [)] [;] [Fail] [(] [", Expected illegal state exception."] [)] [;] [Assert, Not, Null] [(] [Ex] [)] [;] [Test, Top, Of, Month] [Test3, Param] [(] ["'.'yyyy-, Mm"] [,] ["output/drfaTop, Of, Month.log"] [)] [;] [Test, Top, Of, Week] [Test3, Param] [(] ["'.'yyyy-w"] [,] ["output/drfaTop, Of, Week.log"] [)] [;] [Test, Top, Of, Day] [Test3, Param] [(] ["'.'yyyy-, Mm-dd"] [,] ["output/drfaTop, Of, Day.log"] [)] [;] [Test, Half, Day] [Test3, Param] [(] ["'.'yyyy-, Mm-dd-a"] [,] ["output/drfaHalf, Day.log"] [)] [;] [Test, Top, Of, Hour] [Test3, Param] [(] ["'.'yyyy-, Mm-dd-, Hh"] [,] ["output/drfaTop, Of, Hour.log"] [)] [;] [Test, Top, Of, Minute] [Test3, Param] [(] ["'.'yyyy-, Mm-dd-, Hh-mm"] [,] ["output/drfaTop, Of, Minute.log"] [)] [;] [Test, Rollover, No, Pattern] [Layout] [Layout] [=] [New] [Simple, Layout] [(] [)] [;] [Daily, Rolling, File, Appender] [Appender] [=] [New] [Daily, Rolling, File, Appender] [(] [Layout] [,] ["output/drfaNopattern.log"] [,] [Null] [)] [;] [Vector, Error, Handler] [Error, Handler] [=] [New] [Vector, Error, Handler] [(] [)] [;] [Appender] [.] [Set, Error, Handler] [(] [Error, Handler] [)] [;] [Appender] [.] [Roll, Over] [(] [)] [;] [Assert, Equals] [(] [1] [,] [Error, Handler] [.] [Size] [(] [)] [)] [;] [Assert, Equals] [(] [", Missing , Date, Pattern option in roll, Over()."] [,] [Error, Handler] [.] [Get, Message] [(] [0] [)] [)] [;] [Test, Minute, Rollover] [Layout] [Layout] [=] [New] [Simple, Layout] [(] [)] [;] [String] [Filename] [=] ["output/drfaMinute, Rollover.log"] [;] [String] [Pattern] [=] ["'.'yyyy-, Mm-dd-, Hh-mm"] [;] [Daily, Rolling, File, Appender] [Appender] [=] [New] [Daily, Rolling, File, Appender] [(] [Layout] [,] [Filename] [,] [Pattern] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [File] [First, File] [=] [New] [File] [(] [Filename] [+] [New] [Simple, Date, Format] [(] [Pattern] [)] [.] [Format] [(] [New] [Date] [(] [)] [)] [)] [;] [Root] [.] [Info] [(] [", Hello, , World"] [)] [;] [First, File] [.] [Create, New, File] [(] [)] [;] [Assert, True] [(] [First, File] [.] [Exists] [(] [)] [)] [;] [Assert, Equals] [(] [0] [,] [First, File] [.] [Length] [(] [)] [)] [;] [Calendar] [Cal] [=] [Calendar] [.] [Get, Instance] [(] [)] [;] [Long] [Now] [=] [Cal] [.] [Get, Time] [(] [)] [.] [Get, Time] [(] [)] [;] [Cal] [.] [Set] [(] [Calendar] [.] [Second] [,] [3] [)] [;] [Cal] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [0] [)] [;] [Cal] [.] [Add] [(] [Calendar] [.] [Minute] [,] [1] [)] [;] [Long] [Until] [=] [Cal] [.] [Get, Time] [(] [)] [.] [Get, Time] [(] [)] [;] [Thread] [.] [Sleep] [(] [Until] [-] [Now] [)] [;] [Root] [.] [Info] [(] [", Hello, , World"] [)] [;] [Assert, True] [(] [First, File] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [First, File] [.] [Length] [(] [)] [>] [0] [)] [;] [Append] [Int] [Count1] [=] [Source] [.] [Read] [(] [Buf] [)] [;] [If] [(] [Count1] [>] [0] [)] [{] [Combined] [.] [Write] [(] [Buf] [,] [0] [,] [Count1] [)] [;] [}] [Combined] [.] [Write] [(] [Buf] [,] [0] [,] [Count1] [)] [;] [Source] [.] [Close] [(] [)] [;] [Test, Blocked, Rollover] [Layout] [Layout] [=] [New] [Simple, Layout] [(] [)] [;] [String] [Filename] [=] ["output/drfaBlocked, Rollover.log"] [;] [String] [Pattern] [=] ["'.'yyyy-, Mm-dd-, Hh-mm"] [;] [Date] [Start] [=] [New] [Date] [(] [)] [;] [Daily, Rolling, File, Appender] [Appender] [=] [New] [Daily, Rolling, File, Appender] [(] [Layout] [,] [Filename] [,] [Pattern] [)] [;] [Appender] [.] [Set, Append] [(] [False] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [File] [Block1] [=] [New] [File] [(] [Filename] [+] [New] [Simple, Date, Format] [(] [Pattern] [)] [.] [Format] [(] [Start] [)] [)] [;] [File] [Block2] [=] [New] [File] [(] [Filename] [+] [New] [Simple, Date, Format] [(] [Pattern] [)] [.] [Format] [(] [New] [Date] [(] [Start] [.] [Get, Time] [(] [)] [+] [60000] [)] [)] [)] [;] [File, Output, Stream] [Os1] [=] [New] [File, Output, Stream] [(] [Block1] [)] [;] [File, Output, Stream] [Os2] [=] [New] [File, Output, Stream] [(] [Block2] [)] [;] [Root] [.] [Info] [(] [", Prior to rollover"] [)] [;] [Thread] [.] [Sleep] [(] [63000] [-] [(] [Start] [.] [Get, Time] [(] [)] [%] [60000] [)] [)] [;] [Root] [.] [Info] [(] [", Rollover attempt while blocked"] [)] [;] [Os1] [.] [Close] [(] [)] [;] [Os2] [.] [Close] [(] [)] [;] [Root] [.] [Info] [(] [", Message after block removed"] [)] [;] [Appender] [.] [Close] [(] [)] [;] [String] [Combined, Filename] [=] ["output/drfaBlocked, Rollover.combined"] [;] [File, Output, Stream] [Combined] [=] [New] [File, Output, Stream] [(] [Combined, Filename] [)] [;] [Byte] [[] []] [Buf] [=] [New] [Byte] [[] [500] []] [;] [Append] [(] [Combined] [,] [New] [File, Input, Stream] [(] [Block1] [)] [,] [Buf] [)] [;] [Append] [(] [Combined] [,] [New] [File, Input, Stream] [(] [Block2] [)] [,] [Buf] [)] [;] [Append] [(] [Combined] [,] [New] [File, Input, Stream] [(] [Filename] [)] [,] [Buf] [)] [;] [Combined] [.] [Close] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Combined, Filename] [,] ["witness/drfaBlocked, Rollover.log"] [)] [)] [;] [Test, Weekly, Rollover] [Daily, Rolling, File, Appender] [Drfa] [=] [New] [Daily, Rolling, File, Appender] [(] [)] [;] [Drfa] [.] [Set, Date, Pattern] [(] ["'.'yyyy-ww"] [)] [;] [Int] [Check, Period] [=] [Drfa] [.] [Compute, Check, Period] [(] [)] [;] [Assert, Equals] [(] [Daily, Rolling, File, Appender] [.] [Top, Of, Week] [,] [Check, Period] [)] [;]
Class EnhancedMyPatternLayout@@ [Create, Pattern, Parser] [Return] [New] [My, Pattern, Parser] [(] [Pattern] [==] [Null] [?] [Default, Conversion, Pattern] [:] [Pattern] [)] [;]
Class EnhancedPatternLayoutTest@@ [Create, Layout] [Return] [New] [Enhanced, Pattern, Layout] [(] ["[%t] %p %c - %m%n"] [)] [;] [Test, Format] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j., Layout, Test"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Info] [,] [", Hello, , World"] [,] [Null] [)] [;] [Enhanced, Pattern, Layout] [Layout] [=] [(] [Enhanced, Pattern, Layout] [)] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [100] [)] [;] [Buf] [.] [Append] [(] ['['] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Thread, Name] [(] [)] [)] [;] [Buf] [.] [Append] [(] ["] "] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Level] [(] [)] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Append] [(] [' '] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Logger, Name] [(] [)] [)] [;] [Buf] [.] [Append] [(] [" - "] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Message] [(] [)] [)] [;] [Buf] [.] [Append] [(] [System] [.] [Get, Property] [(] ["line.separator"] [)] [)] [;] [Assert, Equals] [(] [Buf] [.] [To, String] [(] [)] [,] [Result] [)] [;] [Test, Get, Pattern, Format] [Enhanced, Pattern, Layout] [Layout] [=] [(] [Enhanced, Pattern, Layout] [)] [Create, Layout] [(] [)] [;] [Assert, Equals] [(] ["[%t] %p %c - %m%n"] [,] [Layout] [.] [Get, Conversion, Pattern] [(] [)] [)] [;] [Test, Default, Conversion, Pattern] [Assert, Equals] [(] ["%m%n"] [,] [Enhanced, Pattern, Layout] [.] [Default, Conversion, Pattern] [)] [;] [Test, Ttcc, Conversion, Pattern] [Assert, Equals] [(] ["%r [%t] %p %c %x - %m%n"] [,] [Enhanced, Pattern, Layout] [.] [Ttcc, Conversion, Pattern] [)] [;] [Test, Format, Resize] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Pattern, Layout, Test"] [)] [;] [Ndc] [.] [Clear] [(] [)] [;] [Char] [[] []] [Msg] [=] [New] [Char] [[] [2000] []] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Msg] [.] [Length] [;] [I] [++] [)] [{] [Msg] [[] [I] []] [=] [', A'] [;] [}] [Msg] [[] [I] []] [=] [', A'] [;] [Logging, Event] [Event1] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Debug] [,] [New] [String] [(] [Msg] [)] [,] [Null] [)] [;] [Enhanced, Pattern, Layout] [Layout] [=] [(] [Enhanced, Pattern, Layout] [)] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event1] [)] [;] [Logging, Event] [Event2] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Warn] [,] [", Hello, , World"] [,] [Null] [)] [;] [Result] [=] [Layout] [.] [Format] [(] [Event2] [)] [;] [Assert, Equals] [(] ["["] [,] [Result] [.] [Substring] [(] [0] [,] [1] [)] [)] [;]
Class DerivedPatternLayout@@ [Get, Buf, Size] [Return] [Buf, Size] [;] [Get, Max, Capacity] [Return] [Max, Capacity] [;]
Class EnhancedPatternLayoutTestCase@@ [Static] [String] [Temp="output/temp"] [;] [Static] [String] [Filtered="output/filtered"] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\((, Native , Method|, Unknown , Source)\\)"] [;] [Static] [String] [Exception4="\\s*at .*\\(.*, Compiled , Code\\)"] [;] [Static] [String] [Pat0="\\[main]\\ (, Debug|, Info|, Warn|, Error|, Fatal) .* - , Message \\d{1,2}"] [;] [Static] [String] [Pat1=, Filter., Iso8601, Pat+" "+, Pat0] [;] [Static] [String] [Pat2=, Filter., Absolute, Date, And, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat3=, Filter., Absolute, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat4=, Filter., Relative, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat5="\\[main]\\ (, Debug|, Info|, Warn|, Error|, Fatal) .* : , Message \\d{1,2}"] [;] [Static] [String] [Pat6="\\[main]\\ (, Debug|, Info |, Warn |, Error|, Fatal) org.apache.log4j., Enhanced, Pattern, Layout, Test, Case.common\\(, Enhanced, Pattern, Layout, Test, Case.java(:\\d{1,4})?\\): , Message \\d{1,2}"] [;] [Static] [String] [Pat11a="^(, Debug|, Info |, Warn |, Error|, Fatal) \\[main]\\ log4j., Enhanced, Pattern, Layout, Test: , Message \\d{1,2}"] [;] [Static] [String] [Pat11b="^(, Debug|, Info |, Warn |, Error|, Fatal) \\[main]\\ root: , Message \\d{1,2}"] [;] [Static] [String] [Pat12="^\\[main]\\ (, Debug|, Info |, Warn |, Error|, Fatal) "+"org.apache.log4j., Enhanced, Pattern, Layout, Test, Case.common\\(, Enhanced, Pattern, Layout, Test, Case.java:\\d{3}\\): "+", Message \\d{1,2}"] [;] [Static] [String] [Pat13="^\\[main]\\ (, Debug|, Info |, Warn |, Error|, Fatal) "+"apache.log4j., Enhanced, Pattern, Layout, Test, Case.common\\(, Enhanced, Pattern, Layout, Test, Case.java:\\d{3}\\): "+", Message \\d{1,2}"] [;] [Static] [String] [Pat14="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal)\\ \\d{1,2}\\ *- , Message \\d{1,2}"] [;] [Static] [String] [Pat, Mdc1=""] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Set, Up] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Enhanced, Pattern, Layout, Test] [.] [Class] [)] [;] [Tear, Down] [Root] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Configure] [Property, Configurator] [.] [Configure] [(] [File, Name] [)] [;] [Compare] [Return] [Compare] [.] [Compare] [(] [Actual] [,] [Expected] [)] [;] [Test1] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout1.properties"] [)] [;] [Common] [(] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.1"] [)] [)] [;] [Test2] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout2.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat1] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Iso8601, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.2"] [)] [)] [;] [Test3] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout3.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat1] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Iso8601, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.3"] [)] [)] [;] [Test4] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout4.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat2] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Absolute, Date, And, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.4"] [)] [)] [;] [Test5] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout5.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat2] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Absolute, Date, And, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.5"] [)] [)] [;] [Test6] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout6.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat3] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Absolute, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.6"] [)] [)] [;] [Test7] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout7.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat3] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Absolute, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.7"] [)] [)] [;] [Test8] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout8.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat4] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Relative, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.8"] [)] [)] [;] [Test9] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout9.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat5] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.9"] [)] [)] [;] [Test10] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout10.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat6] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.10"] [)] [)] [;] [Test11] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout11.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat11a] [,] [Pat11b] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.11"] [)] [)] [;] [Test12] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout12.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat12] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.12"] [)] [)] [;] [Test13] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout13.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat13] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.13"] [)] [)] [;] [Test14] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout14.properties"] [)] [;] [Common] [(] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.14"] [)] [)] [;] [Clear, Mdc] [Java] [.] [Util] [.] [Hashtable] [Context] [=] [Mdc] [.] [Get, Context] [(] [)] [;] [If] [(] [Context] [!=] [Null] [)] [{] [Context] [.] [Clear] [(] [)] [;] [}] [Context] [.] [Clear] [(] [)] [;] [Test, Mdc1] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout.mdc.1.properties"] [)] [;] [Clear, Mdc] [(] [)] [;] [Mdc] [.] [Put] [(] ["key1"] [,] ["va11"] [)] [;] [Mdc] [.] [Put] [(] ["key2"] [,] ["va12"] [)] [;] [Logger] [.] [Debug] [(] [", Hello , World"] [)] [;] [Mdc] [.] [Remove] [(] ["key1"] [)] [;] [Mdc] [.] [Remove] [(] ["key2"] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [,] [New] [Mdc, Order, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.mdc.1"] [)] [)] [;] [Test15] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout15.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat14] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] ["witness/pattern/enhanced, Pattern, Layout.15"] [)] [)] [;] [Test16] [Final] [Long] [Start] [=] [New] [Date] [(] [)] [.] [Get, Time] [(] [)] [;] [Configure] [(] ["input/pattern/enhanced, Pattern, Layout16.properties"] [)] [;] [Common] [(] [)] [;] [Final] [Long] [End] [=] [New] [Date] [(] [)] [.] [Get, Time] [(] [)] [;] [File, Reader] [Reader] [=] [New] [File, Reader] [(] ["output/pattern, Layout16.log"] [)] [;] [Char] [Chars] [[] []] [=] [New] [Char] [[] [50] []] [;] [Reader] [.] [Read] [(] [Chars] [,] [0] [,] [Chars] [.] [Length] [)] [;] [Reader] [.] [Close] [(] [)] [;] [Simple, Date, Format] [Format] [=] [New] [Simple, Date, Format] [(] ["yyyy-, Mm-dd , Hh:mm:ss"] [)] [;] [Format] [.] [Set, Time, Zone] [(] [Time, Zone] [.] [Get, Time, Zone] [(] [", Gmt+0"] [)] [)] [;] [String] [Utc, Str] [=] [New] [String] [(] [Chars] [,] [0] [,] [19] [)] [;] [Date] [Utc, Date] [=] [Format] [.] [Parse] [(] [Utc, Str] [,] [New] [Parse, Position] [(] [0] [)] [)] [;] [Assert, True] [(] [Utc, Date] [.] [Get, Time] [(] [)] [>=] [Start] [-] [1000] [&&] [Utc, Date] [.] [Get, Time] [(] [)] [<] [End] [+] [1000] [)] [;] [String] [Cst, Str] [=] [New] [String] [(] [Chars] [,] [21] [,] [19] [)] [;] [Format] [.] [Set, Time, Zone] [(] [Time, Zone] [.] [Get, Time, Zone] [(] [", Gmt-6"] [)] [)] [;] [Date] [Cst, Date] [=] [Format] [.] [Parse] [(] [Cst, Str] [,] [New] [Parse, Position] [(] [0] [)] [)] [;] [Assert, False] [(] [Cst, Str] [.] [Equals] [(] [Utc, Str] [)] [)] [;] [Assert, True] [(] [Cst, Date] [.] [Get, Time] [(] [)] [>=] [Start] [-] [1000] [&&] [Cst, Date] [.] [Get, Time] [(] [)] [<] [End] [+] [1000] [)] [;] [Common] [Int] [I] [=] [-] [1] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Info] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [Exception] [E] [=] [New] [Exception] [(] [", Just testing"] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Logger] [.] [Info] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Logger] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Test, Mdc2] [String] [Output, File] [=] ["output/pattern, Layout.mdc.2"] [;] [String] [Witness, File] [=] ["witness/pattern/enhanced, Pattern, Layout.mdc.2"] [;] [String] [Mdc, Msg, Pattern1] [=] ["%m : %, X%n"] [;] [String] [Mdc, Msg, Pattern2] [=] ["%m : %, X{key1}%n"] [;] [String] [Mdc, Msg, Pattern3] [=] ["%m : %, X{key2}%n"] [;] [String] [Mdc, Msg, Pattern4] [=] ["%m : %, X{key3}%n"] [;] [String] [Mdc, Msg, Pattern5] [=] ["%m : %, X{key1},%, X{key2},%, X{key3}%n"] [;] [Enhanced, Pattern, Layout] [Layout] [=] [New] [Enhanced, Pattern, Layout] [(] ["%m%n"] [)] [;] [Appender] [Appender] [=] [New] [File, Appender] [(] [Layout] [,] [Output, File] [,] [False] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Root] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Clear, Mdc] [(] [)] [;] [Root] [.] [Debug] [(] ["starting mdc pattern test"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern1] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["empty mdc, no key specified in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern2] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["empty mdc, key1 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern3] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["empty mdc, key2 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern4] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["empty mdc, key3 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern5] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["empty mdc, key1, key2, and key3 in pattern"] [)] [;] [Mdc] [.] [Put] [(] ["key1"] [,] ["value1"] [)] [;] [Mdc] [.] [Put] [(] ["key2"] [,] ["value2"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern1] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["filled mdc, no key specified in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern2] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["filled mdc, key1 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern3] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["filled mdc, key2 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern4] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["filled mdc, key3 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern5] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["filled mdc, key1, key2, and key3 in pattern"] [)] [;] [Mdc] [.] [Remove] [(] ["key1"] [)] [;] [Mdc] [.] [Remove] [(] ["key2"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%m%n"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["finished mdc pattern test"] [)] [;] [Transformer] [.] [Transform] [(] [Output, File] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [,] [New] [Mdc, Order, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] [Witness, File] [)] [)] [;] [Test, Throwable] [String] [Output, File] [=] ["output/pattern, Layout.throwable"] [;] [String] [Witness, File] [=] ["witness/pattern/enhanced, Pattern, Layout.throwable"] [;] [Enhanced, Pattern, Layout] [Layout] [=] [New] [Enhanced, Pattern, Layout] [(] ["%m%n"] [)] [;] [Appender] [Appender] [=] [New] [File, Appender] [(] [Layout] [,] [Output, File] [,] [False] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Root] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Root] [.] [Debug] [(] ["starting throwable pattern test"] [)] [;] [Exception] [Ex] [=] [New] [Exception] [(] [", Test , Exception"] [)] [;] [Root] [.] [Debug] [(] ["plain pattern, no exception"] [)] [;] [Root] [.] [Debug] [(] ["plain pattern, with exception"] [,] [Ex] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%m%n%throwable"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["%throwable, no exception"] [)] [;] [Root] [.] [Debug] [(] ["%throwable, with exception"] [,] [Ex] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%m%n%throwable{short}"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["%throwable{short}, no exception"] [)] [;] [Root] [.] [Debug] [(] ["%throwable{short}, with exception"] [,] [Ex] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%m%n%throwable{none}"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["%throwable{none}, no exception"] [)] [;] [Root] [.] [Debug] [(] ["%throwable{none}, with exception"] [,] [Ex] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%m%n%throwable{0}"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["%throwable{0}, no exception"] [)] [;] [Root] [.] [Debug] [(] ["%throwable{0}, with exception"] [,] [Ex] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%m%n%throwable{1}"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["%throwable{1}, no exception"] [)] [;] [Root] [.] [Debug] [(] ["%throwable{1}, with exception"] [,] [Ex] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%m%n%throwable{100}"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["%throwable{100}, no exception"] [)] [;] [Root] [.] [Debug] [(] ["%throwable{100}, with exception"] [,] [Ex] [)] [;] [String] [[] []] [Trace] [=] [New] [Throwable, Information] [(] [Ex] [)] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] ["%m%n%throwable{"] [+] [(] [2] [-] [Trace] [.] [Length] [)] [+] ["}"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Debug] [(] ["%throwable{-n}, no exception"] [)] [;] [Root] [.] [Debug] [(] ["%throwable{-n}, with exception"] [,] [Ex] [)] [;] [Transformer] [.] [Transform] [(] [Output, File] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Enhanced, Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Enhanced, Junit, Test, Runner, Filter] [(] [)] [,] [New] [Mdc, Order, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [(] [Filtered] [,] [Witness, File] [)] [)] [;]
Class EnhancedThrowableRendererTest@@ [Test, Enhanced, Render] [Throwable, Renderer] [R] [=] [New] [Enhanced, Throwable, Renderer] [(] [)] [;] [Exception] [Ex] [=] [New] [Exception] [(] [)] [;] [String] [[] []] [Str, Rep] [=] [R] [.] [Do, Render] [(] [Ex] [)] [;] [Assert, Not, Null] [(] [Str, Rep] [)] [;] [Assert, True] [(] [Str, Rep] [.] [Length] [>] [0] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Str, Rep] [.] [Length] [;] [I] [++] [)] [{] [Assert, Not, Null] [(] [Str, Rep] [[] [I] []] [)] [;] [}] [Assert, Not, Null] [(] [Str, Rep] [[] [I] []] [)] [;]
Class FileAppenderTest@@ [Test, Directory, Creation] [If] [(] [!] [System] [.] [Get, Property] [(] ["java.version"] [)] [.] [Starts, With] [(] ["1.1."] [)] [)] [{] [File] [New, File] [=] [New] [File] [(] ["output/newdir/temp.log"] [)] [;] [New, File] [.] [Delete] [(] [)] [;] [File] [New, Dir] [=] [New] [File] [(] ["output/newdir"] [)] [;] [New, Dir] [.] [Delete] [(] [)] [;] [Org] [.] [Apache] [.] [Log4j] [.] [File, Appender] [Wa] [=] [New] [Org] [.] [Apache] [.] [Log4j] [.] [File, Appender] [(] [)] [;] [Wa] [.] [Set, File] [(] ["output/newdir/temp.log"] [)] [;] [Wa] [.] [Set, Layout] [(] [New] [Pattern, Layout] [(] ["%m%n"] [)] [)] [;] [Wa] [.] [Activate, Options] [(] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/newdir/temp.log"] [)] [.] [Exists] [(] [)] [)] [;] [}] [File] [New, File] [=] [New] [File] [(] ["output/newdir/temp.log"] [)] [;] [New, File] [.] [Delete] [(] [)] [;] [File] [New, Dir] [=] [New] [File] [(] ["output/newdir"] [)] [;] [New, Dir] [.] [Delete] [(] [)] [;] [Org] [.] [Apache] [.] [Log4j] [.] [File, Appender] [Wa] [=] [New] [Org] [.] [Apache] [.] [Log4j] [.] [File, Appender] [(] [)] [;] [Wa] [.] [Set, File] [(] ["output/newdir/temp.log"] [)] [;] [Wa] [.] [Set, Layout] [(] [New] [Pattern, Layout] [(] ["%m%n"] [)] [)] [;] [Wa] [.] [Activate, Options] [(] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/newdir/temp.log"] [)] [.] [Exists] [(] [)] [)] [;] [Test, Get, Threshold, Return, Type] [Method] [Method] [=] [File, Appender] [.] [Class] [.] [Get, Method] [(] ["get, Threshold"] [,] [(] [Class] [[] []] [)] [Null] [)] [;] [Assert, True] [(] [Method] [.] [Get, Return, Type] [(] [)] [==] [Priority] [.] [Class] [)] [;] [Testget, Set, Threshold] [File, Appender] [Appender] [=] [New] [File, Appender] [(] [)] [;] [Priority] [Debug] [=] [Level] [.] [Debug] [;] [Assert, Null] [(] [Appender] [.] [Get, Threshold] [(] [)] [)] [;] [Appender] [.] [Set, Threshold] [(] [Debug] [)] [;] [Assert, True] [(] [Appender] [.] [Get, Threshold] [(] [)] [==] [Debug] [)] [;] [Test, Is, As, Severe, As, Threshold] [File, Appender] [Appender] [=] [New] [File, Appender] [(] [)] [;] [Priority] [Debug] [=] [Level] [.] [Debug] [;] [Assert, True] [(] [Appender] [.] [Is, As, Severe, As, Threshold] [(] [Debug] [)] [)] [;]
Class BoundedFIFOTestCase@@ [Static] [Logger] [Cat=, Logger.get, Logger("x")] [;] [Static] [Int] [Max=1000] [;] [Static] [Logging, Event[]] [E=new, Logging, Event[, Max]] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Max] [;] [I] [++] [)] [{] [E] [[] [I] []] [=] [New] [Logging, Event] [(] [""] [,] [Cat] [,] [Level] [.] [Debug] [,] ["e"] [+] [I] [,] [Null] [)] [;] [}] [E] [[] [I] []] [=] [New] [Logging, Event] [(] [""] [,] [Cat] [,] [Level] [.] [Debug] [,] ["e"] [+] [I] [,] [Null] [)] [;] [Set, Up] [Test1] [For] [(] [Int] [Size] [=] [1] [;] [Size] [<=] [128] [;] [Size] [*=] [2] [)] [{] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [Assert, Equals] [(] [Bf] [.] [Get, Max, Size] [(] [)] [,] [Size] [)] [;] [Assert, Null] [(] [Bf] [.] [Get] [(] [)] [)] [;] [Int] [I] [;] [Int] [J] [;] [Int] [K] [;] [For] [(] [I] [=] [1] [;] [I] [<] [2] [*] [Size] [;] [I] [++] [)] [{] [For] [(] [J] [=] [0] [;] [J] [<] [I] [;] [J] [++] [)] [{] [Bf] [.] [Put] [(] [E] [[] [J] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [J] [<] [Size] [?] [J] [+] [1] [:] [Size] [)] [;] [}] [Int] [Max] [=] [Size] [<] [J] [?] [Size] [:] [J] [;] [J] [--] [;] [For] [(] [K] [=] [0] [;] [K] [<=] [J] [;] [K] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Max] [-] [K] [>] [0] [?] [Max] [-] [K] [:] [0] [)] [;] [Object] [R] [=] [Bf] [.] [Get] [(] [)] [;] [If] [(] [K] [>=] [Size] [)] [Assert, Null] [(] [R] [)] [;] [Else] [Assert, Equals] [(] [R] [,] [E] [[] [K] []] [)] [;] [}] [}] [}] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [Assert, Equals] [(] [Bf] [.] [Get, Max, Size] [(] [)] [,] [Size] [)] [;] [Assert, Null] [(] [Bf] [.] [Get] [(] [)] [)] [;] [Int] [I] [;] [Int] [J] [;] [Int] [K] [;] [For] [(] [I] [=] [1] [;] [I] [<] [2] [*] [Size] [;] [I] [++] [)] [{] [For] [(] [J] [=] [0] [;] [J] [<] [I] [;] [J] [++] [)] [{] [Bf] [.] [Put] [(] [E] [[] [J] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [J] [<] [Size] [?] [J] [+] [1] [:] [Size] [)] [;] [}] [Int] [Max] [=] [Size] [<] [J] [?] [Size] [:] [J] [;] [J] [--] [;] [For] [(] [K] [=] [0] [;] [K] [<=] [J] [;] [K] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Max] [-] [K] [>] [0] [?] [Max] [-] [K] [:] [0] [)] [;] [Object] [R] [=] [Bf] [.] [Get] [(] [)] [;] [If] [(] [K] [>=] [Size] [)] [Assert, Null] [(] [R] [)] [;] [Else] [Assert, Equals] [(] [R] [,] [E] [[] [K] []] [)] [;] [}] [}] [For] [(] [J] [=] [0] [;] [J] [<] [I] [;] [J] [++] [)] [{] [Bf] [.] [Put] [(] [E] [[] [J] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [J] [<] [Size] [?] [J] [+] [1] [:] [Size] [)] [;] [}] [Bf] [.] [Put] [(] [E] [[] [J] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [J] [<] [Size] [?] [J] [+] [1] [:] [Size] [)] [;] [Int] [Max] [=] [Size] [<] [J] [?] [Size] [:] [J] [;] [J] [--] [;] [For] [(] [K] [=] [0] [;] [K] [<=] [J] [;] [K] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Max] [-] [K] [>] [0] [?] [Max] [-] [K] [:] [0] [)] [;] [Object] [R] [=] [Bf] [.] [Get] [(] [)] [;] [If] [(] [K] [>=] [Size] [)] [Assert, Null] [(] [R] [)] [;] [Else] [Assert, Equals] [(] [R] [,] [E] [[] [K] []] [)] [;] [}] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Max] [-] [K] [>] [0] [?] [Max] [-] [K] [:] [0] [)] [;] [Object] [R] [=] [Bf] [.] [Get] [(] [)] [;] [If] [(] [K] [>=] [Size] [)] [Assert, Null] [(] [R] [)] [;] [Else] [Assert, Equals] [(] [R] [,] [E] [[] [K] []] [)] [;] [Test2] [Int] [Size] [=] [3] [;] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [Bf] [.] [Put] [(] [E] [[] [0] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [0] []] [)] [;] [Assert, Null] [(] [Bf] [.] [Get] [(] [)] [)] [;] [Bf] [.] [Put] [(] [E] [[] [1] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [1] [)] [;] [Bf] [.] [Put] [(] [E] [[] [2] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [2] [)] [;] [Bf] [.] [Put] [(] [E] [[] [3] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [3] [)] [;] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [1] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [2] [)] [;] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [2] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [1] [)] [;] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [3] []] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [0] [)] [;] [Assert, Null] [(] [Bf] [.] [Get] [(] [)] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [0] [)] [;] [Min] [Return] [A] [<] [B] [?] [A] [:] [B] [;] [Test, Resize1] [Int] [Size] [=] [10] [;] [For] [(] [Int] [N] [=] [1] [;] [N] [<] [Size] [*] [2] [;] [N] [++] [)] [{] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Size] [*] [2] [;] [I] [++] [)] [{] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [F] [=] [0] [;] [F] [<] [I] [;] [F] [++] [)] [{] [Bf] [.] [Put] [(] [E] [[] [F] []] [)] [;] [}] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [Min] [(] [I] [,] [Size] [)] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] []] [)] [;] [}] [}] [}] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Size] [*] [2] [;] [I] [++] [)] [{] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [F] [=] [0] [;] [F] [<] [I] [;] [F] [++] [)] [{] [Bf] [.] [Put] [(] [E] [[] [F] []] [)] [;] [}] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [Min] [(] [I] [,] [Size] [)] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] []] [)] [;] [}] [}] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [F] [=] [0] [;] [F] [<] [I] [;] [F] [++] [)] [{] [Bf] [.] [Put] [(] [E] [[] [F] []] [)] [;] [}] [Bf] [.] [Put] [(] [E] [[] [F] []] [)] [;] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [Min] [(] [I] [,] [Size] [)] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] []] [)] [;] [}] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] []] [)] [;] [Test, Resize2] [Int] [Size] [=] [10] [;] [For] [(] [Int] [N] [=] [1] [;] [N] [<] [Size] [*] [2] [;] [N] [++] [)] [{] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Size] [*] [2] [;] [I] [++] [)] [{] [For] [(] [Int] [D] [=] [0] [;] [D] [<] [Min] [(] [I] [,] [Size] [)] [;] [D] [++] [)] [{] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [P] [=] [0] [;] [P] [<] [I] [;] [P] [++] [)] [{] [Bf] [.] [Put] [(] [E] [[] [P] []] [)] [;] [}] [For] [(] [Int] [G] [=] [0] [;] [G] [<] [D] [;] [G] [++] [)] [{] [Bf] [.] [Get] [(] [)] [;] [}] [Int] [X] [=] [Bf] [.] [Length] [(] [)] [;] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [X] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [}] [Assert, Null] [(] [Bf] [.] [Get] [(] [)] [)] [;] [}] [}] [}] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Size] [*] [2] [;] [I] [++] [)] [{] [For] [(] [Int] [D] [=] [0] [;] [D] [<] [Min] [(] [I] [,] [Size] [)] [;] [D] [++] [)] [{] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [P] [=] [0] [;] [P] [<] [I] [;] [P] [++] [)] [{] [Bf] [.] [Put] [(] [E] [[] [P] []] [)] [;] [}] [For] [(] [Int] [G] [=] [0] [;] [G] [<] [D] [;] [G] [++] [)] [{] [Bf] [.] [Get] [(] [)] [;] [}] [Int] [X] [=] [Bf] [.] [Length] [(] [)] [;] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [X] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [}] [Assert, Null] [(] [Bf] [.] [Get] [(] [)] [)] [;] [}] [}] [For] [(] [Int] [D] [=] [0] [;] [D] [<] [Min] [(] [I] [,] [Size] [)] [;] [D] [++] [)] [{] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [P] [=] [0] [;] [P] [<] [I] [;] [P] [++] [)] [{] [Bf] [.] [Put] [(] [E] [[] [P] []] [)] [;] [}] [For] [(] [Int] [G] [=] [0] [;] [G] [<] [D] [;] [G] [++] [)] [{] [Bf] [.] [Get] [(] [)] [;] [}] [Int] [X] [=] [Bf] [.] [Length] [(] [)] [;] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [X] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [}] [Assert, Null] [(] [Bf] [.] [Get] [(] [)] [)] [;] [}] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [P] [=] [0] [;] [P] [<] [I] [;] [P] [++] [)] [{] [Bf] [.] [Put] [(] [E] [[] [P] []] [)] [;] [}] [Bf] [.] [Put] [(] [E] [[] [P] []] [)] [;] [For] [(] [Int] [G] [=] [0] [;] [G] [<] [D] [;] [G] [++] [)] [{] [Bf] [.] [Get] [(] [)] [;] [}] [Bf] [.] [Get] [(] [)] [;] [Int] [X] [=] [Bf] [.] [Length] [(] [)] [;] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [X] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [}] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [Assert, Null] [(] [Bf] [.] [Get] [(] [)] [)] [;] [Test, Resize3] [Int] [Size] [=] [10] [;] [For] [(] [Int] [N] [=] [1] [;] [N] [<] [Size] [*] [2] [;] [N] [++] [)] [{] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Size] [;] [I] [++] [)] [{] [For] [(] [Int] [D] [=] [0] [;] [D] [<] [I] [;] [D] [++] [)] [{] [For] [(] [Int] [R] [=] [0] [;] [R] [<] [D] [;] [R] [++] [)] [{] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [P0] [=] [0] [;] [P0] [<] [I] [;] [P0] [++] [)] [Bf] [.] [Put] [(] [E] [[] [P0] []] [)] [;] [For] [(] [Int] [G] [=] [0] [;] [G] [<] [D] [;] [G] [++] [)] [Bf] [.] [Get] [(] [)] [;] [For] [(] [Int] [P1] [=] [0] [;] [P1] [<] [R] [;] [P1] [++] [)] [Bf] [.] [Put] [(] [E] [[] [I] [+] [P1] []] [)] [;] [Int] [X] [=] [Bf] [.] [Length] [(] [)] [;] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [X] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [}] [}] [}] [}] [}] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Size] [;] [I] [++] [)] [{] [For] [(] [Int] [D] [=] [0] [;] [D] [<] [I] [;] [D] [++] [)] [{] [For] [(] [Int] [R] [=] [0] [;] [R] [<] [D] [;] [R] [++] [)] [{] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [P0] [=] [0] [;] [P0] [<] [I] [;] [P0] [++] [)] [Bf] [.] [Put] [(] [E] [[] [P0] []] [)] [;] [For] [(] [Int] [G] [=] [0] [;] [G] [<] [D] [;] [G] [++] [)] [Bf] [.] [Get] [(] [)] [;] [For] [(] [Int] [P1] [=] [0] [;] [P1] [<] [R] [;] [P1] [++] [)] [Bf] [.] [Put] [(] [E] [[] [I] [+] [P1] []] [)] [;] [Int] [X] [=] [Bf] [.] [Length] [(] [)] [;] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [X] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [}] [}] [}] [}] [For] [(] [Int] [D] [=] [0] [;] [D] [<] [I] [;] [D] [++] [)] [{] [For] [(] [Int] [R] [=] [0] [;] [R] [<] [D] [;] [R] [++] [)] [{] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [P0] [=] [0] [;] [P0] [<] [I] [;] [P0] [++] [)] [Bf] [.] [Put] [(] [E] [[] [P0] []] [)] [;] [For] [(] [Int] [G] [=] [0] [;] [G] [<] [D] [;] [G] [++] [)] [Bf] [.] [Get] [(] [)] [;] [For] [(] [Int] [P1] [=] [0] [;] [P1] [<] [R] [;] [P1] [++] [)] [Bf] [.] [Put] [(] [E] [[] [I] [+] [P1] []] [)] [;] [Int] [X] [=] [Bf] [.] [Length] [(] [)] [;] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [X] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [}] [}] [}] [For] [(] [Int] [R] [=] [0] [;] [R] [<] [D] [;] [R] [++] [)] [{] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [P0] [=] [0] [;] [P0] [<] [I] [;] [P0] [++] [)] [Bf] [.] [Put] [(] [E] [[] [P0] []] [)] [;] [For] [(] [Int] [G] [=] [0] [;] [G] [<] [D] [;] [G] [++] [)] [Bf] [.] [Get] [(] [)] [;] [For] [(] [Int] [P1] [=] [0] [;] [P1] [<] [R] [;] [P1] [++] [)] [Bf] [.] [Put] [(] [E] [[] [I] [+] [P1] []] [)] [;] [Int] [X] [=] [Bf] [.] [Length] [(] [)] [;] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [X] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [}] [}] [Bounded, Fifo] [Bf] [=] [New] [Bounded, Fifo] [(] [Size] [)] [;] [For] [(] [Int] [P0] [=] [0] [;] [P0] [<] [I] [;] [P0] [++] [)] [Bf] [.] [Put] [(] [E] [[] [P0] []] [)] [;] [For] [(] [Int] [G] [=] [0] [;] [G] [<] [D] [;] [G] [++] [)] [Bf] [.] [Get] [(] [)] [;] [For] [(] [Int] [P1] [=] [0] [;] [P1] [<] [R] [;] [P1] [++] [)] [Bf] [.] [Put] [(] [E] [[] [I] [+] [P1] []] [)] [;] [Int] [X] [=] [Bf] [.] [Length] [(] [)] [;] [Bf] [.] [Resize] [(] [N] [)] [;] [Int] [Expected, Size] [=] [Min] [(] [N] [,] [X] [)] [;] [Assert, Equals] [(] [Bf] [.] [Length] [(] [)] [,] [Expected, Size] [)] [;] [For] [(] [Int] [C] [=] [0] [;] [C] [<] [Expected, Size] [;] [C] [++] [)] [{] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [}] [Assert, Equals] [(] [Bf] [.] [Get] [(] [)] [,] [E] [[] [C] [+] [D] []] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Bounded, Fifo, Test, Case] [(] ["test1"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Bounded, Fifo, Test, Case] [(] ["test2"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Bounded, Fifo, Test, Case] [(] ["test, Resize1"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Bounded, Fifo, Test, Case] [(] ["test, Resize2"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Bounded, Fifo, Test, Case] [(] ["test, Resize3"] [)] [)] [;] [Return] [Suite] [;]
Class CyclicBufferTestCase@@ [Static] [Logger] [Cat=, Logger.get, Logger("x")] [;] [Static] [Int] [Max=1000] [;] [Static] [Logging, Event[]] [E=new, Logging, Event[, Max]] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Max] [;] [I] [++] [)] [{] [E] [[] [I] []] [=] [New] [Logging, Event] [(] [""] [,] [Cat] [,] [Level] [.] [Debug] [,] ["e"] [+] [I] [,] [Null] [)] [;] [}] [E] [[] [I] []] [=] [New] [Logging, Event] [(] [""] [,] [Cat] [,] [Level] [.] [Debug] [,] ["e"] [+] [I] [,] [Null] [)] [;] [Set, Up] [Test0] [Int] [Size] [=] [2] [;] [Cyclic, Buffer] [Cb] [=] [New] [Cyclic, Buffer] [(] [Size] [)] [;] [Assert, Equals] [(] [Cb] [.] [Get, Max, Size] [(] [)] [,] [Size] [)] [;] [Cb] [.] [Add] [(] [E] [[] [0] []] [)] [;] [Assert, Equals] [(] [Cb] [.] [Length] [(] [)] [,] [1] [)] [;] [Assert, Equals] [(] [Cb] [.] [Get] [(] [)] [,] [E] [[] [0] []] [)] [;] [Assert, Equals] [(] [Cb] [.] [Length] [(] [)] [,] [0] [)] [;] [Assert, Null] [(] [Cb] [.] [Get] [(] [)] [)] [;] [Assert, Equals] [(] [Cb] [.] [Length] [(] [)] [,] [0] [)] [;] [Cb] [=] [New] [Cyclic, Buffer] [(] [Size] [)] [;] [Cb] [.] [Add] [(] [E] [[] [0] []] [)] [;] [Cb] [.] [Add] [(] [E] [[] [1] []] [)] [;] [Assert, Equals] [(] [Cb] [.] [Length] [(] [)] [,] [2] [)] [;] [Assert, Equals] [(] [Cb] [.] [Get] [(] [)] [,] [E] [[] [0] []] [)] [;] [Assert, Equals] [(] [Cb] [.] [Length] [(] [)] [,] [1] [)] [;] [Assert, Equals] [(] [Cb] [.] [Get] [(] [)] [,] [E] [[] [1] []] [)] [;] [Assert, Equals] [(] [Cb] [.] [Length] [(] [)] [,] [0] [)] [;] [Assert, Null] [(] [Cb] [.] [Get] [(] [)] [)] [;] [Assert, Equals] [(] [Cb] [.] [Length] [(] [)] [,] [0] [)] [;] [Test1] [For] [(] [Int] [Buf, Size] [=] [1] [;] [Buf, Size] [<=] [128] [;] [Buf, Size] [*=] [2] [)] [Do, Test1] [(] [Buf, Size] [)] [;] [Do, Test1] [Cyclic, Buffer] [Cb] [=] [New] [Cyclic, Buffer] [(] [Size] [)] [;] [Assert, Equals] [(] [Cb] [.] [Get, Max, Size] [(] [)] [,] [Size] [)] [;] [For] [(] [Int] [I] [=] [-] [(] [Size] [+] [10] [)] [;] [I] [<] [(] [Size] [+] [10] [)] [;] [I] [++] [)] [{] [Assert, Null] [(] [Cb] [.] [Get] [(] [I] [)] [)] [;] [}] [Assert, Null] [(] [Cb] [.] [Get] [(] [I] [)] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Max] [;] [I] [++] [)] [{] [Cb] [.] [Add] [(] [E] [[] [I] []] [)] [;] [Int] [Limit] [=] [I] [<] [Size] [-] [1] [?] [I] [:] [Size] [-] [1] [;] [For] [(] [Int] [J] [=] [Limit] [;] [J] [>=] [0] [;] [J] [--] [)] [{] [Assert, Equals] [(] [Cb] [.] [Get] [(] [J] [)] [,] [E] [[] [I] [-] [(] [Limit] [-] [J] [)] []] [)] [;] [}] [Assert, Null] [(] [Cb] [.] [Get] [(] [-] [1] [)] [)] [;] [Assert, Null] [(] [Cb] [.] [Get] [(] [Limit] [+] [1] [)] [)] [;] [}] [Cb] [.] [Add] [(] [E] [[] [I] []] [)] [;] [Int] [Limit] [=] [I] [<] [Size] [-] [1] [?] [I] [:] [Size] [-] [1] [;] [For] [(] [Int] [J] [=] [Limit] [;] [J] [>=] [0] [;] [J] [--] [)] [{] [Assert, Equals] [(] [Cb] [.] [Get] [(] [J] [)] [,] [E] [[] [I] [-] [(] [Limit] [-] [J] [)] []] [)] [;] [}] [Assert, Equals] [(] [Cb] [.] [Get] [(] [J] [)] [,] [E] [[] [I] [-] [(] [Limit] [-] [J] [)] []] [)] [;] [Assert, Null] [(] [Cb] [.] [Get] [(] [-] [1] [)] [)] [;] [Assert, Null] [(] [Cb] [.] [Get] [(] [Limit] [+] [1] [)] [)] [;] [Test, Resize] [For] [(] [Int] [Isize] [=] [1] [;] [Isize] [<=] [128] [;] [Isize] [*=] [2] [)] [{] [Do, Test, Resize] [(] [Isize] [,] [Isize] [/] [2] [+] [1] [,] [Isize] [/] [2] [+] [1] [)] [;] [Do, Test, Resize] [(] [Isize] [,] [Isize] [/] [2] [+] [1] [,] [Isize] [+] [10] [)] [;] [Do, Test, Resize] [(] [Isize] [,] [Isize] [+] [10] [,] [Isize] [/] [2] [+] [1] [)] [;] [Do, Test, Resize] [(] [Isize] [,] [Isize] [+] [10] [,] [Isize] [+] [10] [)] [;] [}] [Do, Test, Resize] [(] [Isize] [,] [Isize] [/] [2] [+] [1] [,] [Isize] [/] [2] [+] [1] [)] [;] [Do, Test, Resize] [(] [Isize] [,] [Isize] [/] [2] [+] [1] [,] [Isize] [+] [10] [)] [;] [Do, Test, Resize] [(] [Isize] [,] [Isize] [+] [10] [,] [Isize] [/] [2] [+] [1] [)] [;] [Do, Test, Resize] [(] [Isize] [,] [Isize] [+] [10] [,] [Isize] [+] [10] [)] [;] [Do, Test, Resize] [Cyclic, Buffer] [Cb] [=] [New] [Cyclic, Buffer] [(] [Initial, Size] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Number, Of, Adds] [;] [I] [++] [)] [{] [Cb] [.] [Add] [(] [E] [[] [I] []] [)] [;] [}] [Cb] [.] [Add] [(] [E] [[] [I] []] [)] [;] [Cb] [.] [Resize] [(] [New, Size] [)] [;] [Int] [Offset] [=] [Number, Of, Adds] [-] [Initial, Size] [;] [If] [(] [Offset] [<] [0] [)] [Offset] [=] [0] [;] [Int] [Len] [=] [New, Size] [<] [Number, Of, Adds] [?] [New, Size] [:] [Number, Of, Adds] [;] [Len] [=] [Len] [<] [Initial, Size] [?] [Len] [:] [Initial, Size] [;] [For] [(] [Int] [J] [=] [0] [;] [J] [<] [Len] [;] [J] [++] [)] [{] [Assert, Equals] [(] [Cb] [.] [Get] [(] [J] [)] [,] [E] [[] [Offset] [+] [J] []] [)] [;] [}] [Assert, Equals] [(] [Cb] [.] [Get] [(] [J] [)] [,] [E] [[] [Offset] [+] [J] []] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Cyclic, Buffer, Test, Case] [(] ["test0"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Cyclic, Buffer, Test, Case] [(] ["test1"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Cyclic, Buffer, Test, Case] [(] ["test, Resize"] [)] [)] [;] [Return] [Suite] [;]
Class DateLayoutTest@@ [Create, Layout] [Return] [New] [Mock, Layout] [(] [)] [;] [Test, Null, Date, Format] [Assert, Equals] [(] [", Null"] [,] [Date, Layout] [.] [Null, Date, Format] [)] [;] [Test, Relative, Time, Date, Format] [Assert, Equals] [(] [", Relative"] [,] [Date, Layout] [.] [Relative, Time, Date, Format] [)] [;] [Test, Date, Format, Option] [Assert, Equals] [(] [", Date, Format"] [,] [Date, Layout] [.] [Date, Format, Option] [)] [;] [Test, Time, Zone, Option] [Assert, Equals] [(] [", Time, Zone"] [,] [Date, Layout] [.] [Timezone, Option] [)] [;] [Test, Get, Option, Strings] [String] [[] []] [Options] [=] [(] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [)] [.] [Get, Option, Strings] [(] [)] [;] [Assert, Equals] [(] [2] [,] [Options] [.] [Length] [)] [;] [Test, Set, Option, Date, Format] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Option] [(] ["d, Atef, Ormat"] [,] ["foobar"] [)] [;] [Assert, Equals] [(] [", Foobar"] [,] [Layout] [.] [Get, Date, Format] [(] [)] [)] [;] [Test, Set, Option, Time, Zone] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Option] [(] ["t, Imez, One"] [,] ["+05:00"] [)] [;] [Assert, Equals] [(] ["+05:00"] [,] [Layout] [.] [Get, Time, Zone] [(] [)] [)] [;] [Test, Set, Date, Format] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Date, Format] [(] [", Absolute"] [)] [;] [Assert, Equals] [(] [", Absolute"] [,] [Layout] [.] [Get, Date, Format] [(] [)] [)] [;] [Test, Set, Time, Zone] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Time, Zone] [(] ["+05:00"] [)] [;] [Assert, Equals] [(] ["+05:00"] [,] [Layout] [.] [Get, Time, Zone] [(] [)] [)] [;] [Test, Set, Date, Format, Null] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Date, Format] [(] [(] [String] [)] [Null] [,] [Null] [)] [;] [Test, Set, Date, Format, Null, String] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Date, Format] [(] [", Nu, Ll"] [,] [Null] [)] [;] [Test, Set, Date, Format, Relative] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Date, Format] [(] ["r, Elat, Ive"] [,] [Time, Zone] [.] [Get, Default] [(] [)] [)] [;] [Test, Set, Date, Format, Absolute] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Date, Format] [(] ["a, Bsol, Ute"] [,] [Time, Zone] [.] [Get, Default] [(] [)] [)] [;] [Test, Set, Date, Format, Date, Time] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Date, Format] [(] ["d, Ate"] [,] [Time, Zone] [.] [Get, Default] [(] [)] [)] [;] [Test, Set, Date, Format, Iso8601] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Date, Format] [(] ["i, So8601"] [,] [Time, Zone] [.] [Get, Default] [(] [)] [)] [;] [Test, Set, Date, Format, Simple] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Date, Format] [(] [", Hh:mm:ss"] [,] [Time, Zone] [.] [Get, Default] [(] [)] [)] [;] [Test, Activate, Options] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Date, Format] [(] [", Hh:mm:ss"] [)] [;] [Layout] [.] [Set, Time, Zone] [(] ["+05:00"] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Test, Set, Date, Format, With, Format] [Date, Format] [Format] [=] [New] [Simple, Date, Format] [(] [", Hh:mm"] [)] [;] [Date, Layout] [Layout] [=] [(] [Date, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Date, Format] [(] [Format] [,] [Time, Zone] [.] [Get, Default] [(] [)] [)] [;] [Test, Iso8601, Format] [Date, Format] [Format] [=] [New] [Iso8601, Date, Format] [(] [)] [;] [Calendar] [Calendar] [=] [Calendar] [.] [Get, Instance] [(] [)] [;] [Calendar] [.] [Clear] [(] [)] [;] [Calendar] [.] [Set] [(] [1970] [,] [0] [,] [1] [,] [0] [,] [0] [,] [0] [)] [;] [String] [Actual] [=] [Format] [.] [Format] [(] [Calendar] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] ["1970-01-01 00:00:00,000"] [,] [Actual] [)] [;] [Test, Date, Time, Format] [Date, Format] [Format] [=] [New] [Date, Time, Date, Format] [(] [)] [;] [Calendar] [Calendar] [=] [Calendar] [.] [Get, Instance] [(] [)] [;] [Calendar] [.] [Clear] [(] [)] [;] [Calendar] [.] [Set] [(] [1970] [,] [0] [,] [1] [,] [0] [,] [0] [,] [0] [)] [;] [String] [Actual] [=] [Format] [.] [Format] [(] [Calendar] [.] [Get, Time] [(] [)] [)] [;] [Simple, Date, Format] [Df] [=] [New] [Simple, Date, Format] [(] ["dd , Mmm yyyy , Hh:mm:ss,, Sss"] [)] [;] [String] [Expected] [=] [Df] [.] [Format] [(] [Calendar] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [Expected] [,] [Actual] [)] [;]
Class MockLayout@@ [Assert, Not, Null] [(] [Pos] [)] [;] [Assert, Not, Null] [(] [Date] [)] [;] [Assert, Null] [(] [Date, Format] [)] [;] [Format] [Return] [", Mock"] [;] [Activate, Options] [Ignores, Throwable] [Return] [True] [;]
Class LogLogTest@@ [Test, Debug, Key] [Assert, Equals] [(] ["log4j.debug"] [,] [Log, Log] [.] [Debug, Key] [)] [;] [Test, Config, Debug, Key] [Assert, Equals] [(] ["log4j.config, Debug"] [,] [Log, Log] [.] [Config, Debug, Key] [)] [;]
Class OptionConverterTestCase@@ [Properties] [Props] [;] [Set, Up] [Props] [=] [New] [Properties] [(] [)] [;] [Props] [.] [Put] [(] [", Toto"] [,] ["wonderful"] [)] [;] [Props] [.] [Put] [(] ["key1"] [,] ["value1"] [)] [;] [Props] [.] [Put] [(] ["key2"] [,] ["value2"] [)] [;] [Props] [.] [Put] [(] ["line.separator"] [,] [System] [.] [Get, Property] [(] ["line.separator"] [)] [)] [;] [Props] [.] [Put] [(] ["java.home"] [,] [System] [.] [Get, Property] [(] ["java.home"] [)] [)] [;] [System] [.] [Set, Properties] [(] [Props] [)] [;] [Tear, Down] [Props] [=] [Null] [;] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Var, Subst, Test1] [String] [R] [;] [R] [=] [Option, Converter] [.] [Subst, Vars] [(] ["hello world."] [,] [Null] [)] [;] [Assert, Equals] [(] ["hello world."] [,] [R] [)] [;] [R] [=] [Option, Converter] [.] [Subst, Vars] [(] ["hello ${, Toto} world."] [,] [Null] [)] [;] [Assert, Equals] [(] ["hello wonderful world."] [,] [R] [)] [;] [Var, Subst, Test2] [String] [R] [;] [R] [=] [Option, Converter] [.] [Subst, Vars] [(] [", Test2 ${key1} mid ${key2} end."] [,] [Null] [)] [;] [Assert, Equals] [(] [", Test2 value1 mid value2 end."] [,] [R] [)] [;] [Var, Subst, Test3] [String] [R] [;] [R] [=] [Option, Converter] [.] [Subst, Vars] [(] [", Test3 ${unset} mid ${key1} end."] [,] [Null] [)] [;] [Assert, Equals] [(] [", Test3  mid value1 end."] [,] [R] [)] [;] [Var, Subst, Test4] [String] [Val] [=] [", Test4 ${incomplete "] [;] [Try] [{] [Option, Converter] [.] [Subst, Vars] [(] [Val] [,] [Null] [)] [;] [}] [Catch] [(] [Illegal, Argument, Exception] [E] [)] [{] [String] [Error, Msg] [=] [E] [.] [Get, Message] [(] [)] [;] [Assert, Equals] [(] ['"'] [+] [Val] [+] ["\" has no closing brace. , Opening brace at position 6."] [,] [Error, Msg] [)] [;] [}] [Option, Converter] [.] [Subst, Vars] [(] [Val] [,] [Null] [)] [;] [String] [Error, Msg] [=] [E] [.] [Get, Message] [(] [)] [;] [Assert, Equals] [(] ['"'] [+] [Val] [+] ["\" has no closing brace. , Opening brace at position 6."] [,] [Error, Msg] [)] [;] [Var, Subst, Test5] [Properties] [Props] [=] [New] [Properties] [(] [)] [;] [Props] [.] [Put] [(] ["p1"] [,] ["x1"] [)] [;] [Props] [.] [Put] [(] ["p2"] [,] ["${p1}"] [)] [;] [String] [Res] [=] [Option, Converter] [.] [Subst, Vars] [(] ["${p2}"] [,] [Props] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Result is ["] [+] [Res] [+] ["]."] [)] [;] [Assert, Equals] [(] [Res] [,] ["x1"] [)] [;] [Test, Input, Stream] [File] [File] [=] [New] [File] [(] ["input/filter1.properties"] [)] [;] [Assert, True] [(] [File] [.] [Exists] [(] [)] [)] [;] [File, Input, Stream] [Input, Stream] [=] [New] [File, Input, Stream] [(] [File] [)] [;] [Try] [{] [Option, Converter] [.] [Select, And, Configure] [(] [Input, Stream] [,] [Null] [,] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [)] [;] [}] [Finally] [{] [Input, Stream] [.] [Close] [(] [)] [;] [}] [Option, Converter] [.] [Select, And, Configure] [(] [Input, Stream] [,] [Null] [,] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [)] [;] [Input, Stream] [.] [Close] [(] [)] [;] [New] [Property, Configurator, Test] [(] [This] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [)] [.] [Validate, Nested] [(] [)] [;] [To, Level, Test1] [String] [Val] [=] [", Info"] [;] [Level] [P] [=] [Option, Converter] [.] [To, Level] [(] [Val] [,] [Null] [)] [;] [Assert, Equals] [(] [P] [,] [Level] [.] [Info] [)] [;] [To, Level, Test2] [String] [Val] [=] [", Info#org.apache.log4j.xml., X, Level"] [;] [Level] [P] [=] [Option, Converter] [.] [To, Level] [(] [Val] [,] [Null] [)] [;] [Assert, Equals] [(] [P] [,] [Level] [.] [Info] [)] [;] [To, Level, Test3] [String] [Val] [=] [", Trace#org.apache.log4j.xml., X, Level"] [;] [Level] [P] [=] [Option, Converter] [.] [To, Level] [(] [Val] [,] [Null] [)] [;] [Assert, Equals] [(] [P] [,] [X, Level] [.] [Trace] [)] [;] [To, Level, Test4] [String] [Val] [=] [", Tr#org.apache.log4j.xml., X, Level"] [;] [Level] [P] [=] [Option, Converter] [.] [To, Level] [(] [Val] [,] [Null] [)] [;] [Assert, Equals] [(] [P] [,] [Null] [)] [;] [To, Level, Test5] [String] [Val] [=] [", Info#org.apache.log4j.xml., Toto"] [;] [Level] [P] [=] [Option, Converter] [.] [To, Level] [(] [Val] [,] [Null] [)] [;] [Assert, Equals] [(] [P] [,] [Null] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["var, Subst, Test5"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["var, Subst, Test1"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["var, Subst, Test2"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["var, Subst, Test3"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["var, Subst, Test4"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["test, Input, Stream"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["to, Level, Test1"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["to, Level, Test2"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["to, Level, Test3"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["to, Level, Test4"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Option, Converter, Test, Case] [(] ["to, Level, Test5"] [)] [)] [;] [Return] [Suite] [;]
Class PatternParserTestCase@@ [Static] [String] [Output, File="output/, Pattern, Parser"] [;] [Static] [String] [Witness, File="witness/, Pattern, Parser"] [;] [Static] [String] [Msg, Pattern="%m%n"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Set, Up] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Remove, All, Appenders] [(] [)] [;] [Tear, Down] [Root] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Mdc, Pattern] [String] [Mdc, Msg, Pattern1] [=] ["%m : %, X%n"] [;] [String] [Mdc, Msg, Pattern2] [=] ["%m : %, X{key1}%n"] [;] [String] [Mdc, Msg, Pattern3] [=] ["%m : %, X{key2}%n"] [;] [String] [Mdc, Msg, Pattern4] [=] ["%m : %, X{key3}%n"] [;] [String] [Mdc, Msg, Pattern5] [=] ["%m : %, X{key1},%, X{key2},%, X{key3}%n"] [;] [Pattern, Layout] [Layout] [=] [New] [Pattern, Layout] [(] [Msg, Pattern] [)] [;] [Appender] [Appender] [=] [New] [File, Appender] [(] [Layout] [,] [Output, File] [+] ["Mdc"] [,] [False] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Root] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Root] [.] [Debug] [(] ["starting mdc pattern test"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern1] [)] [;] [Root] [.] [Debug] [(] ["empty mdc, no key specified in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern2] [)] [;] [Root] [.] [Debug] [(] ["empty mdc, key1 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern3] [)] [;] [Root] [.] [Debug] [(] ["empty mdc, key2 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern4] [)] [;] [Root] [.] [Debug] [(] ["empty mdc, key3 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern5] [)] [;] [Root] [.] [Debug] [(] ["empty mdc, key1, key2, and key3 in pattern"] [)] [;] [Mdc] [.] [Put] [(] ["key1"] [,] ["value1"] [)] [;] [Mdc] [.] [Put] [(] ["key2"] [,] ["value2"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern1] [)] [;] [Root] [.] [Debug] [(] ["filled mdc, no key specified in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern2] [)] [;] [Root] [.] [Debug] [(] ["filled mdc, key1 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern3] [)] [;] [Root] [.] [Debug] [(] ["filled mdc, key2 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern4] [)] [;] [Root] [.] [Debug] [(] ["filled mdc, key3 in pattern"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Mdc, Msg, Pattern5] [)] [;] [Root] [.] [Debug] [(] ["filled mdc, key1, key2, and key3 in pattern"] [)] [;] [Mdc] [.] [Remove] [(] ["key1"] [)] [;] [Mdc] [.] [Remove] [(] ["key2"] [)] [;] [Layout] [.] [Set, Conversion, Pattern] [(] [Msg, Pattern] [)] [;] [Root] [.] [Debug] [(] ["finished mdc pattern test"] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Output, File] [+] ["Mdc"] [,] [Witness, File] [+] ["Mdc"] [)] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [If] [(] [!] [System] [.] [Get, Property] [(] ["java.version"] [)] [.] [Starts, With] [(] ["1.1."] [)] [)] [{] [Suite] [.] [Add, Test] [(] [New] [Pattern, Parser, Test, Case] [(] ["mdc, Pattern"] [)] [)] [;] [}] [Suite] [.] [Add, Test] [(] [New] [Pattern, Parser, Test, Case] [(] ["mdc, Pattern"] [)] [)] [;] [Return] [Suite] [;]
Class UtilLoggingLevelTest@@ [Test, To, Level, Finest] [Assert, Same] [(] [Util, Logging, Level] [.] [Finest] [,] [Util, Logging, Level] [.] [To, Level] [(] ["fi, Ne, St"] [)] [)] [;]
Class HierarchyThresholdTestCase@@ [Static] [String] [Temp="output/temp"] [;] [Static] [Logger] [Logger=, Logger.get, Logger(, Hierarchy, Threshold, Test, Case.class)] [;] [Set, Up] [Tear, Down] [System] [.] [Out] [.] [Println] [(] [", Tearing down test case."] [)] [;] [Logger] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Test1] [Property, Configurator] [.] [Configure] [(] ["input/hierarchy, Threshold1.properties"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/hierarchy, Threshold.1"] [)] [)] [;] [Test2] [Property, Configurator] [.] [Configure] [(] ["input/hierarchy, Threshold2.properties"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/hierarchy, Threshold.2"] [)] [)] [;] [Test3] [Property, Configurator] [.] [Configure] [(] ["input/hierarchy, Threshold3.properties"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/hierarchy, Threshold.3"] [)] [)] [;] [Test4] [Property, Configurator] [.] [Configure] [(] ["input/hierarchy, Threshold4.properties"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/hierarchy, Threshold.4"] [)] [)] [;] [Test5] [Property, Configurator] [.] [Configure] [(] ["input/hierarchy, Threshold5.properties"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/hierarchy, Threshold.5"] [)] [)] [;] [Test6] [Property, Configurator] [.] [Configure] [(] ["input/hierarchy, Threshold6.properties"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/hierarchy, Threshold.6"] [)] [)] [;] [Test7] [Property, Configurator] [.] [Configure] [(] ["input/hierarchy, Threshold7.properties"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/hierarchy, Threshold.7"] [)] [)] [;] [Test8] [Property, Configurator] [.] [Configure] [(] ["input/hierarchy, Threshold8.properties"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/hierarchy, Threshold.8"] [)] [)] [;] [Common] [String] [Old, Thread, Name] [=] [Thread] [.] [Current, Thread] [(] [)] [.] [Get, Name] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] ["main"] [)] [;] [Logger] [.] [Log] [(] [X, Level] [.] [Trace] [,] ["m0"] [)] [;] [Logger] [.] [Debug] [(] ["m1"] [)] [;] [Logger] [.] [Info] [(] ["m2"] [)] [;] [Logger] [.] [Warn] [(] ["m3"] [)] [;] [Logger] [.] [Error] [(] ["m4"] [)] [;] [Logger] [.] [Fatal] [(] ["m5"] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Old, Thread, Name] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Hierarchy, Threshold, Test, Case] [(] ["test1"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Hierarchy, Threshold, Test, Case] [(] ["test2"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Hierarchy, Threshold, Test, Case] [(] ["test3"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Hierarchy, Threshold, Test, Case] [(] ["test4"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Hierarchy, Threshold, Test, Case] [(] ["test5"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Hierarchy, Threshold, Test, Case] [(] ["test6"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Hierarchy, Threshold, Test, Case] [(] ["test7"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Hierarchy, Threshold, Test, Case] [(] ["test8"] [)] [)] [;] [Return] [Suite] [;]
Class HTMLLayoutTest@@ [Create, Layout] [Return] [New] [Html, Layout] [(] [)] [;] [Parse] [Document, Builder, Factory] [Factory] [=] [Document, Builder, Factory] [.] [New, Instance] [(] [)] [;] [Factory] [.] [Set, Namespace, Aware] [(] [False] [)] [;] [Factory] [.] [Set, Coalescing] [(] [True] [)] [;] [Document, Builder] [Builder] [=] [Factory] [.] [New, Document, Builder] [(] [)] [;] [Reader] [Reader] [=] [New] [String, Reader] [(] [Source] [)] [;] [Return] [Builder] [.] [Parse] [(] [New] [Input, Source] [(] [Reader] [)] [)] [;] [Test, Format] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Html, Layout, Test"] [)] [;] [Ndc] [.] [Push] [(] [", Ndc goes here"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Info] [,] [", Hello, , World"] [,] [Null] [)] [;] [Html, Layout] [Layout] [=] [(] [Html, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Location, Info] [(] [True] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [Ndc] [.] [Pop] [(] [)] [;] [String] [Src] [=] ["<!, Doctype body [ <!, Entity nbsp ' '>]><body>"] [+] [Result] [+] ["</body>"] [;] [Parse] [(] [Src] [)] [;] [Test, Get, Header] [Assert, Equals] [(] ["<!, Doctype"] [,] [Create, Layout] [(] [)] [.] [Get, Header] [(] [)] [.] [Substring] [(] [0] [,] [9] [)] [)] [;] [Test, Get, Header, With, Location] [Html, Layout] [Layout] [=] [(] [Html, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Location, Info] [(] [True] [)] [;] [Assert, Equals] [(] ["<!, Doctype"] [,] [Layout] [.] [Get, Header] [(] [)] [.] [Substring] [(] [0] [,] [9] [)] [)] [;] [Test, Get, Footer] [Assert, Equals] [(] ["</table>"] [,] [Create, Layout] [(] [)] [.] [Get, Footer] [(] [)] [.] [Substring] [(] [0] [,] [8] [)] [)] [;] [Test, Get, Set, Location, Info] [Html, Layout] [Layout] [=] [New] [Html, Layout] [(] [)] [;] [Assert, Equals] [(] [False] [,] [Layout] [.] [Get, Location, Info] [(] [)] [)] [;] [Layout] [.] [Set, Location, Info] [(] [True] [)] [;] [Assert, Equals] [(] [True] [,] [Layout] [.] [Get, Location, Info] [(] [)] [)] [;] [Layout] [.] [Set, Location, Info] [(] [False] [)] [;] [Assert, Equals] [(] [False] [,] [Layout] [.] [Get, Location, Info] [(] [)] [)] [;] [Test, Activate, Options] [Html, Layout] [Layout] [=] [New] [Html, Layout] [(] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;] [Test, Get, Set, Title] [Html, Layout] [Layout] [=] [New] [Html, Layout] [(] [)] [;] [Assert, Equals] [(] [", Log4, J , Log , Messages"] [,] [Layout] [.] [Get, Title] [(] [)] [)] [;] [Layout] [.] [Set, Title] [(] [Null] [)] [;] [Assert, Null] [(] [Layout] [.] [Get, Title] [(] [)] [)] [;] [String] [New, Title] [=] [", A treatise on messages of log persuasion"] [;] [Layout] [.] [Set, Title] [(] [New, Title] [)] [;] [Assert, Equals] [(] [New, Title] [,] [Layout] [.] [Get, Title] [(] [)] [)] [;] [Test, Format, Resize] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Html, Layout, Test"] [)] [;] [Ndc] [.] [Clear] [(] [)] [;] [Char] [[] []] [Msg] [=] [New] [Char] [[] [2000] []] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Msg] [.] [Length] [;] [I] [++] [)] [{] [Msg] [[] [I] []] [=] [', A'] [;] [}] [Msg] [[] [I] []] [=] [', A'] [;] [Logging, Event] [Event1] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Debug] [,] [New] [String] [(] [Msg] [)] [,] [Null] [)] [;] [Html, Layout] [Layout] [=] [(] [Html, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Location, Info] [(] [True] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event1] [)] [;] [Exception] [Ex] [=] [New] [Illegal, Argument, Exception] [(] ["'foo' is not a valid value."] [)] [;] [Logging, Event] [Event2] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Warn] [,] [", Hello, , World"] [,] [Ex] [)] [;] [Result] [=] [Layout] [.] [Format] [(] [Event2] [)] [;] [Assert, Equals] [(] [Layout] [.] [Line, Sep] [+] ["<tr>"] [,] [Result] [.] [Substring] [(] [0] [,] [Layout] [.] [Line, Sep] [.] [Length] [(] [)] [+] [4] [)] [)] [;]
Class ProblemLevel@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Test, Problem, Characters] [String] [Problem, Name] [=] ["com.example.bar<>&\"'"] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Problem, Name] [)] [;] [Level] [Level] [=] [New] [Problem, Level] [(] [Problem, Name] [)] [;] [Exception] [Ex] [=] [New] [Illegal, Argument, Exception] [(] [Problem, Name] [)] [;] [String] [Thread, Name] [=] [Thread] [.] [Current, Thread] [(] [)] [.] [Get, Name] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Problem, Name] [)] [;] [Ndc] [.] [Push] [(] [Problem, Name] [)] [;] [Hashtable] [Mdc, Map] [=] [Mdc] [.] [Get, Context] [(] [)] [;] [If] [(] [Mdc, Map] [!=] [Null] [)] [{] [Mdc, Map] [.] [Clear] [(] [)] [;] [}] [Mdc, Map] [.] [Clear] [(] [)] [;] [Mdc] [.] [Put] [(] [Problem, Name] [,] [Problem, Name] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Problem, Name] [,] [Logger] [,] [Level] [,] [Problem, Name] [,] [Ex] [)] [;] [Html, Layout] [Layout] [=] [(] [Html, Layout] [)] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [Mdc, Map] [=] [Mdc] [.] [Get, Context] [(] [)] [;] [If] [(] [Mdc, Map] [!=] [Null] [)] [{] [Mdc, Map] [.] [Clear] [(] [)] [;] [}] [Mdc, Map] [.] [Clear] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Thread, Name] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] ["<!, Doctype table [<!, Entity nbsp ' '>]><table>"] [)] [;] [Buf] [.] [Append] [(] [Result] [)] [;] [Buf] [.] [Append] [(] ["</table>"] [)] [;] [String] [Doc] [=] [Buf] [.] [To, String] [(] [)] [;] [For] [(] [Int] [I] [=] [Doc] [.] [Last, Index, Of] [(] ["<br>"] [)] [;] [I] [!=] [-] [1] [;] [I] [=] [Doc] [.] [Last, Index, Of] [(] ["<br>"] [,] [I] [-] [1] [)] [)] [{] [Buf] [.] [Replace] [(] [I] [,] [I] [+] [4] [,] ["<br/>"] [)] [;] [}] [Buf] [.] [Replace] [(] [I] [,] [I] [+] [4] [,] ["<br/>"] [)] [;] [Parse] [(] [Buf] [.] [To, String] [(] [)] [)] [;]
Class Last@@ [Test1] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Last] [(] ["test1"] [)] [)] [;] [Return] [Suite] [;]
Class LayoutTest@@ [Private] [Final] [String] [Content, Type] [;] [Private] [Final] [Boolean] [Ignores, Throwable] [;] [Private] [Final] [String] [Header] [;] [Private] [Final] [String] [Footer] [;] [Content, Type] [=] ["text/plain"] [;] [Ignores, Throwable] [=] [True] [;] [Header] [=] [Null] [;] [Footer] [=] [Null] [;] [Content, Type] [=] [Expected, Content, Type] [;] [Ignores, Throwable] [=] [Expected, Ignores, Throwable] [;] [Header] [=] [Expected, Header] [;] [Footer] [=] [Expected, Footer] [;] [Test, Line, Sep] [Assert, Equals] [(] [System] [.] [Get, Property] [(] ["line.separator"] [)] [,] [Layout] [.] [Line, Sep] [)] [;] [Test, Line, Sep, Len] [Assert, Equals] [(] [Layout] [.] [Line, Sep] [.] [Length] [(] [)] [,] [Layout] [.] [Line, Sep, Len] [)] [;] [Create, Layout] [Return] [New] [Mock, Layout] [(] [)] [;] [Test, Get, Content, Type] [Assert, Equals] [(] [Content, Type] [,] [Create, Layout] [(] [)] [.] [Get, Content, Type] [(] [)] [)] [;] [Test, Ignores, Throwable] [Assert, Equals] [(] [Ignores, Throwable] [,] [Create, Layout] [(] [)] [.] [Ignores, Throwable] [(] [)] [)] [;] [Test, Get, Header] [Assert, Equals] [(] [Header] [,] [Create, Layout] [(] [)] [.] [Get, Header] [(] [)] [)] [;] [Test, Get, Footer] [Assert, Equals] [(] [Footer] [,] [Create, Layout] [(] [)] [.] [Get, Footer] [(] [)] [)] [;] [Test, Format] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j., Layout, Test"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Info] [,] [", Hello, , World"] [,] [Null] [)] [;] [String] [Result] [=] [Create, Layout] [(] [)] [.] [Format] [(] [Event] [)] [;] [Assert, Equals] [(] [", Mock"] [,] [Result] [)] [;]
Class MockLayout@@ [Format] [Return] [", Mock"] [;] [Activate, Options] [Ignores, Throwable] [Return] [True] [;]
Class LevelTest@@ [Test, Serialize, Info] [Int] [[] []] [Skip] [=] [New] [Int] [[] []] [{] [}] [;] [Serialization, Test, Helper] [.] [Assert, Serialization, Equals] [(] ["witness/serialization/info.bin"] [,] [Level] [.] [Info] [,] [Skip] [,] [Integer] [.] [Max, Value] [)] [;] [Test, Deserialize, Info] [Object] [Obj] [=] [Serialization, Test, Helper] [.] [Deserialize, Stream] [(] ["witness/serialization/info.bin"] [)] [;] [Assert, True] [(] [Obj] [Instanceof] [Level] [)] [;] [Level] [Info] [=] [(] [Level] [)] [Obj] [;] [Assert, Equals] [(] [", Info"] [,] [Info] [.] [To, String] [(] [)] [)] [;] [If] [(] [!] [System] [.] [Get, Property] [(] ["java.version"] [)] [.] [Starts, With] [(] ["1.1."] [)] [)] [{] [Assert, True] [(] [Obj] [==] [Level] [.] [Info] [)] [;] [}] [Assert, True] [(] [Obj] [==] [Level] [.] [Info] [)] [;] [Test, Custom, Level, Serialization] [Custom, Level] [Custom] [=] [New] [Custom, Level] [(] [)] [;] [Object] [Obj] [=] [Serialization, Test, Helper] [.] [Serialize, Clone] [(] [Custom] [)] [;] [Assert, True] [(] [Obj] [Instanceof] [Custom, Level] [)] [;] [Custom, Level] [Clone] [=] [(] [Custom, Level] [)] [Obj] [;] [Assert, Equals] [(] [Level] [.] [Info] [.] [Level] [,] [Clone] [.] [Level] [)] [;] [Assert, Equals] [(] [Level] [.] [Info] [.] [Level, Str] [,] [Clone] [.] [Level, Str] [)] [;] [Assert, Equals] [(] [Level] [.] [Info] [.] [Syslog, Equivalent] [,] [Clone] [.] [Syslog, Equivalent] [)] [;]
Class CustomLevel@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Test, Trace, Int] [Assert, Equals] [(] [5000] [,] [Level] [.] [Trace, Int] [)] [;] [Test, Trace] [Assert, Equals] [(] [", Trace"] [,] [Level] [.] [Trace] [.] [To, String] [(] [)] [)] [;] [Assert, Equals] [(] [5000] [,] [Level] [.] [Trace] [.] [To, Int] [(] [)] [)] [;] [Assert, Equals] [(] [7] [,] [Level] [.] [Trace] [.] [Get, Syslog, Equivalent] [(] [)] [)] [;] [Test, Int, To, Trace] [Level] [Trace] [=] [Level] [.] [To, Level] [(] [5000] [)] [;] [Assert, Equals] [(] [", Trace"] [,] [Trace] [.] [To, String] [(] [)] [)] [;] [Test, String, To, Trace] [Level] [Trace] [=] [Level] [.] [To, Level] [(] [", Trace"] [)] [;] [Assert, Equals] [(] [", Trace"] [,] [Trace] [.] [To, String] [(] [)] [)] [;] [Test, Level, Extends, Priority] [Assert, True] [(] [Priority] [.] [Class] [.] [Is, Assignable, From] [(] [Level] [.] [Class] [)] [)] [;] [Test, Off] [Assert, True] [(] [Level] [.] [Off] [Instanceof] [Level] [)] [;] [Test, Fatal] [Assert, True] [(] [Level] [.] [Fatal] [Instanceof] [Level] [)] [;] [Test, Error] [Assert, True] [(] [Level] [.] [Error] [Instanceof] [Level] [)] [;] [Test, Warn] [Assert, True] [(] [Level] [.] [Warn] [Instanceof] [Level] [)] [;] [Test, Info] [Assert, True] [(] [Level] [.] [Info] [Instanceof] [Level] [)] [;] [Test, Debug] [Assert, True] [(] [Level] [.] [Debug] [Instanceof] [Level] [)] [;] [Test, Trace] [Assert, True] [(] [Level] [.] [Trace] [Instanceof] [Level] [)] [;] [Test, All] [Assert, True] [(] [Level] [.] [All] [Instanceof] [Level] [)] [;] [Test, Serial, Version, Uid] [Assert, Equals] [(] [3491141966387921974, L] [,] [Level] [.] [Serial, Version, Uid] [)] [;] [Test, Int, To, All] [Level] [Level] [=] [Level] [.] [To, Level] [(] [Level] [.] [All, Int] [)] [;] [Assert, Equals] [(] [", All"] [,] [Level] [.] [To, String] [(] [)] [)] [;] [Test, Int, To, Fatal] [Level] [Level] [=] [Level] [.] [To, Level] [(] [Level] [.] [Fatal, Int] [)] [;] [Assert, Equals] [(] [", Fatal"] [,] [Level] [.] [To, String] [(] [)] [)] [;] [Test, Int, To, Off] [Level] [Level] [=] [Level] [.] [To, Level] [(] [Level] [.] [Off, Int] [)] [;] [Assert, Equals] [(] [", Off"] [,] [Level] [.] [To, String] [(] [)] [)] [;] [Test, To, Level, Unrecognized, Int] [Level] [Level] [=] [Level] [.] [To, Level] [(] [17] [,] [Level] [.] [Fatal] [)] [;] [Assert, Equals] [(] [", Fatal"] [,] [Level] [.] [To, String] [(] [)] [)] [;] [Test, To, Level, Null] [Level] [Level] [=] [Level] [.] [To, Level] [(] [Null] [,] [Level] [.] [Fatal] [)] [;] [Assert, Equals] [(] [", Fatal"] [,] [Level] [.] [To, String] [(] [)] [)] [;] [Test, Dotless, Lower, I] [Level] [Level] [=] [Level] [.] [To, Level] [(] ["\u0131nfo"] [)] [;] [Assert, Equals] [(] [", Info"] [,] [Level] [.] [To, String] [(] [)] [)] [;] [Test, Dotted, Lower, I] [Locale] [Default, Locale] [=] [Locale] [.] [Get, Default] [(] [)] [;] [Locale] [Turkey] [=] [New] [Locale] [(] ["tr"] [,] [", Tr"] [)] [;] [Locale] [.] [Set, Default] [(] [Turkey] [)] [;] [Level] [Level] [=] [Level] [.] [To, Level] [(] ["info"] [)] [;] [Locale] [.] [Set, Default] [(] [Default, Locale] [)] [;] [Assert, Equals] [(] [", Info"] [,] [Level] [.] [To, String] [(] [)] [)] [;]
Class LogCapture@@ [Private] [Final] [Vector, Appender] [Appender] [;] [Private] [Final] [Level] [Level] [;] [This] [.] [Level] [=] [Level] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Appender] [=] [New] [Vector, Appender] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Get, Message] [Vector] [Vector] [=] [Appender] [.] [Get, Vector] [(] [)] [;] [String] [Msg] [=] [Null] [;] [Switch] [(] [Vector] [.] [Size] [(] [)] [)] [{] [Case] [0] [:] [Break] [;] [Case] [1] [:] [Logging, Event] [Event] [=] [(] [Logging, Event] [)] [Vector] [.] [Element, At] [(] [0] [)] [;] [Assert] [.] [Assert, Not, Null] [(] [Event] [)] [;] [Assert] [.] [Assert, Equals] [(] [Level] [,] [Event] [.] [Get, Level] [(] [)] [)] [;] [Msg] [=] [Event] [.] [Get, Rendered, Message] [(] [)] [;] [Break] [;] [Default] [:] [Assert] [.] [Fail] [(] [", More than one request captured"] [)] [;] [}] [Break] [;] [Logging, Event] [Event] [=] [(] [Logging, Event] [)] [Vector] [.] [Element, At] [(] [0] [)] [;] [Assert] [.] [Assert, Not, Null] [(] [Event] [)] [;] [Assert] [.] [Assert, Equals] [(] [Level] [,] [Event] [.] [Get, Level] [(] [)] [)] [;] [Msg] [=] [Event] [.] [Get, Rendered, Message] [(] [)] [;] [Break] [;] [Assert] [.] [Fail] [(] [", More than one request captured"] [)] [;] [Return] [Msg] [;]
Class LoggerTestCase@@ [Logger] [Logger] [;] [Appender] [A1] [;] [Appender] [A2] [;] [Resource, Bundle] [Rb, Us] [;] [Resource, Bundle] [Rb, Fr] [;] [Resource, Bundle] [Rb, Ch] [;] [Static] [String] [Msg=", M"] [;] [Set, Up] [Rb, Us] [=] [Resource, Bundle] [.] [Get, Bundle] [(] [", L7, D"] [,] [New] [Locale] [(] ["en"] [,] [", Us"] [)] [)] [;] [Assert, Not, Null] [(] [Rb, Us] [)] [;] [Rb, Fr] [=] [Resource, Bundle] [.] [Get, Bundle] [(] [", L7, D"] [,] [New] [Locale] [(] ["fr"] [,] [", Fr"] [)] [)] [;] [Assert, Not, Null] [(] [", Got a null resource bundle."] [,] [Rb, Fr] [)] [;] [Rb, Ch] [=] [Resource, Bundle] [.] [Get, Bundle] [(] [", L7, D"] [,] [New] [Locale] [(] ["fr"] [,] [", Ch"] [)] [)] [;] [Assert, Not, Null] [(] [", Got a null resource bundle."] [,] [Rb, Ch] [)] [;] [Tear, Down] [Basic, Configurator] [.] [Reset, Configuration] [(] [)] [;] [A1] [=] [Null] [;] [A2] [=] [Null] [;] [Test, Appender1] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["test"] [)] [;] [A1] [=] [New] [File, Appender] [(] [)] [;] [A1] [.] [Set, Name] [(] ["test, Appender1"] [)] [;] [Logger] [.] [Add, Appender] [(] [A1] [)] [;] [Enumeration] [Enumeration] [=] [Logger] [.] [Get, All, Appenders] [(] [)] [;] [Appender] [A, Hat] [=] [(] [Appender] [)] [Enumeration] [.] [Next, Element] [(] [)] [;] [Assert, Equals] [(] [A1] [,] [A, Hat] [)] [;] [Test, Appender2] [A1] [=] [New] [File, Appender] [(] [)] [;] [A1] [.] [Set, Name] [(] ["test, Appender2.1"] [)] [;] [A2] [=] [New] [File, Appender] [(] [)] [;] [A2] [.] [Set, Name] [(] ["test, Appender2.2"] [)] [;] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["test"] [)] [;] [Logger] [.] [Add, Appender] [(] [A1] [)] [;] [Logger] [.] [Add, Appender] [(] [A2] [)] [;] [Logger] [.] [Remove, Appender] [(] ["test, Appender2.1"] [)] [;] [Enumeration] [Enumeration] [=] [Logger] [.] [Get, All, Appenders] [(] [)] [;] [Appender] [A, Hat] [=] [(] [Appender] [)] [Enumeration] [.] [Next, Element] [(] [)] [;] [Assert, Equals] [(] [A2] [,] [A, Hat] [)] [;] [Assert, True] [(] [!] [Enumeration] [.] [Has, More, Elements] [(] [)] [)] [;] [Test, Additivity1] [Logger] [A] [=] [Logger] [.] [Get, Logger] [(] ["a"] [)] [;] [Logger] [Ab] [=] [Logger] [.] [Get, Logger] [(] ["a.b"] [)] [;] [Counting, Appender] [Ca] [=] [New] [Counting, Appender] [(] [)] [;] [A] [.] [Add, Appender] [(] [Ca] [)] [;] [Assert, Equals] [(] [Ca] [.] [Counter] [,] [0] [)] [;] [Ab] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca] [.] [Counter] [,] [1] [)] [;] [Ab] [.] [Info] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca] [.] [Counter] [,] [2] [)] [;] [Ab] [.] [Warn] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca] [.] [Counter] [,] [3] [)] [;] [Ab] [.] [Error] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca] [.] [Counter] [,] [4] [)] [;] [Test, Additivity2] [Logger] [A] [=] [Logger] [.] [Get, Logger] [(] ["a"] [)] [;] [Logger] [Ab] [=] [Logger] [.] [Get, Logger] [(] ["a.b"] [)] [;] [Logger] [Abc] [=] [Logger] [.] [Get, Logger] [(] ["a.b.c"] [)] [;] [Logger] [X] [=] [Logger] [.] [Get, Logger] [(] ["x"] [)] [;] [Counting, Appender] [Ca1] [=] [New] [Counting, Appender] [(] [)] [;] [Counting, Appender] [Ca2] [=] [New] [Counting, Appender] [(] [)] [;] [A] [.] [Add, Appender] [(] [Ca1] [)] [;] [Abc] [.] [Add, Appender] [(] [Ca2] [)] [;] [Assert, Equals] [(] [Ca1] [.] [Counter] [,] [0] [)] [;] [Assert, Equals] [(] [Ca2] [.] [Counter] [,] [0] [)] [;] [Ab] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca1] [.] [Counter] [,] [1] [)] [;] [Assert, Equals] [(] [Ca2] [.] [Counter] [,] [0] [)] [;] [Abc] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca1] [.] [Counter] [,] [2] [)] [;] [Assert, Equals] [(] [Ca2] [.] [Counter] [,] [1] [)] [;] [X] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca1] [.] [Counter] [,] [2] [)] [;] [Assert, Equals] [(] [Ca2] [.] [Counter] [,] [1] [)] [;] [Test, Additivity3] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logger] [A] [=] [Logger] [.] [Get, Logger] [(] ["a"] [)] [;] [Logger] [Ab] [=] [Logger] [.] [Get, Logger] [(] ["a.b"] [)] [;] [Logger] [Abc] [=] [Logger] [.] [Get, Logger] [(] ["a.b.c"] [)] [;] [Counting, Appender] [Ca, Root] [=] [New] [Counting, Appender] [(] [)] [;] [Counting, Appender] [Ca, A] [=] [New] [Counting, Appender] [(] [)] [;] [Counting, Appender] [Ca, Abc] [=] [New] [Counting, Appender] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Ca, Root] [)] [;] [A] [.] [Add, Appender] [(] [Ca, A] [)] [;] [Abc] [.] [Add, Appender] [(] [Ca, Abc] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [0] [)] [;] [Assert, Equals] [(] [Ca, A] [.] [Counter] [,] [0] [)] [;] [Assert, Equals] [(] [Ca, Abc] [.] [Counter] [,] [0] [)] [;] [Ab] [.] [Set, Additivity] [(] [False] [)] [;] [A] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [1] [)] [;] [Assert, Equals] [(] [Ca, A] [.] [Counter] [,] [1] [)] [;] [Assert, Equals] [(] [Ca, Abc] [.] [Counter] [,] [0] [)] [;] [Ab] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [1] [)] [;] [Assert, Equals] [(] [Ca, A] [.] [Counter] [,] [1] [)] [;] [Assert, Equals] [(] [Ca, Abc] [.] [Counter] [,] [0] [)] [;] [Abc] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [1] [)] [;] [Assert, Equals] [(] [Ca, A] [.] [Counter] [,] [1] [)] [;] [Assert, Equals] [(] [Ca, Abc] [.] [Counter] [,] [1] [)] [;] [Test, Disable1] [Counting, Appender] [Ca, Root] [=] [New] [Counting, Appender] [(] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Ca, Root] [)] [;] [Logger, Repository] [H] [=] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [;] [H] [.] [Set, Threshold] [(] [(] [Level] [)] [Level] [.] [Info] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [0] [)] [;] [Root] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [0] [)] [;] [Root] [.] [Info] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [1] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Warn] [,] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [2] [)] [;] [Root] [.] [Warn] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [3] [)] [;] [H] [.] [Set, Threshold] [(] [(] [Level] [)] [Level] [.] [Warn] [)] [;] [Root] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [3] [)] [;] [Root] [.] [Info] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [3] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Warn] [,] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [4] [)] [;] [Root] [.] [Error] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [5] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Error] [,] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [H] [.] [Set, Threshold] [(] [Level] [.] [Off] [)] [;] [Root] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Root] [.] [Info] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Warn] [,] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Root] [.] [Error] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Fatal] [,] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Fatal] [,] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [H] [.] [Set, Threshold] [(] [Level] [.] [Off] [)] [;] [Root] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Root] [.] [Info] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Warn] [,] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Root] [.] [Error] [(] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Error] [,] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Fatal] [,] [Msg] [)] [;] [Assert, Equals] [(] [Ca, Root] [.] [Counter] [,] [6] [)] [;] [Test, Rb1] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Set, Resource, Bundle] [(] [Rb, Us] [)] [;] [Resource, Bundle] [T] [=] [Root] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Us] [)] [;] [Logger] [X] [=] [Logger] [.] [Get, Logger] [(] ["x"] [)] [;] [Logger] [XY] [=] [Logger] [.] [Get, Logger] [(] ["x.y"] [)] [;] [Logger] [XYZ] [=] [Logger] [.] [Get, Logger] [(] ["x.y.z"] [)] [;] [T] [=] [X] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Us] [)] [;] [T] [=] [XY] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Us] [)] [;] [T] [=] [XYZ] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Us] [)] [;] [Test, Rb2] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Set, Resource, Bundle] [(] [Rb, Us] [)] [;] [Resource, Bundle] [T] [=] [Root] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Us] [)] [;] [Logger] [X] [=] [Logger] [.] [Get, Logger] [(] ["x"] [)] [;] [Logger] [XY] [=] [Logger] [.] [Get, Logger] [(] ["x.y"] [)] [;] [Logger] [XYZ] [=] [Logger] [.] [Get, Logger] [(] ["x.y.z"] [)] [;] [XY] [.] [Set, Resource, Bundle] [(] [Rb, Fr] [)] [;] [T] [=] [X] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Us] [)] [;] [T] [=] [XY] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Fr] [)] [;] [T] [=] [XYZ] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Fr] [)] [;] [Test, Rb3] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Set, Resource, Bundle] [(] [Rb, Us] [)] [;] [Resource, Bundle] [T] [=] [Root] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Us] [)] [;] [Logger] [X] [=] [Logger] [.] [Get, Logger] [(] ["x"] [)] [;] [Logger] [XY] [=] [Logger] [.] [Get, Logger] [(] ["x.y"] [)] [;] [Logger] [XYZ] [=] [Logger] [.] [Get, Logger] [(] ["x.y.z"] [)] [;] [XY] [.] [Set, Resource, Bundle] [(] [Rb, Fr] [)] [;] [XYZ] [.] [Set, Resource, Bundle] [(] [Rb, Ch] [)] [;] [T] [=] [X] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Us] [)] [;] [T] [=] [XY] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Fr] [)] [;] [T] [=] [XYZ] [.] [Get, Resource, Bundle] [(] [)] [;] [Assert, Same] [(] [T] [,] [Rb, Ch] [)] [;] [Test, Exists] [Logger] [A] [=] [Logger] [.] [Get, Logger] [(] ["a"] [)] [;] [Logger] [AB] [=] [Logger] [.] [Get, Logger] [(] ["a.b"] [)] [;] [Logger] [ABC] [=] [Logger] [.] [Get, Logger] [(] ["a.b.c"] [)] [;] [Logger] [T] [;] [T] [=] [Log, Manager] [.] [Exists] [(] ["xx"] [)] [;] [Assert, Null] [(] [T] [)] [;] [T] [=] [Log, Manager] [.] [Exists] [(] ["a"] [)] [;] [Assert, Same] [(] [A] [,] [T] [)] [;] [T] [=] [Log, Manager] [.] [Exists] [(] ["a.b"] [)] [;] [Assert, Same] [(] [AB] [,] [T] [)] [;] [T] [=] [Log, Manager] [.] [Exists] [(] ["a.b.c"] [)] [;] [Assert, Same] [(] [ABC] [,] [T] [)] [;] [Test, Hierarchy1] [Hierarchy] [H] [=] [New] [Hierarchy] [(] [New] [Root, Logger] [(] [(] [Level] [)] [Level] [.] [Error] [)] [)] [;] [Logger] [A0] [=] [H] [.] [Get, Logger] [(] ["a"] [)] [;] [Assert, Equals] [(] ["a"] [,] [A0] [.] [Get, Name] [(] [)] [)] [;] [Assert, Null] [(] [A0] [.] [Get, Level] [(] [)] [)] [;] [Assert, Same] [(] [Level] [.] [Error] [,] [A0] [.] [Get, Effective, Level] [(] [)] [)] [;] [Logger] [A1] [=] [H] [.] [Get, Logger] [(] ["a"] [)] [;] [Assert, Same] [(] [A0] [,] [A1] [)] [;] [Test, Trace] [Vector, Appender] [Appender] [=] [New] [Vector, Appender] [(] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Root] [.] [Set, Level] [(] [Level] [.] [Info] [)] [;] [Logger] [Tracer] [=] [Logger] [.] [Get, Logger] [(] ["com.example., Tracer"] [)] [;] [Tracer] [.] [Set, Level] [(] [Level] [.] [Trace] [)] [;] [Tracer] [.] [Trace] [(] [", Message 1"] [)] [;] [Root] [.] [Trace] [(] [", Discarded , Message"] [)] [;] [Root] [.] [Trace] [(] [", Discarded , Message"] [)] [;] [Vector] [Msgs] [=] [Appender] [.] [Get, Vector] [(] [)] [;] [Assert, Equals] [(] [1] [,] [Msgs] [.] [Size] [(] [)] [)] [;] [Logging, Event] [Event] [=] [(] [Logging, Event] [)] [Msgs] [.] [Element, At] [(] [0] [)] [;] [Assert, Equals] [(] [Level] [.] [Trace] [,] [Event] [.] [Get, Level] [(] [)] [)] [;] [Assert, Equals] [(] [", Message 1"] [,] [Event] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, With, Exception] [Vector, Appender] [Appender] [=] [New] [Vector, Appender] [(] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Root] [.] [Set, Level] [(] [Level] [.] [Info] [)] [;] [Logger] [Tracer] [=] [Logger] [.] [Get, Logger] [(] ["com.example., Tracer"] [)] [;] [Tracer] [.] [Set, Level] [(] [Level] [.] [Trace] [)] [;] [Null, Pointer, Exception] [Ex] [=] [New] [Null, Pointer, Exception] [(] [)] [;] [Tracer] [.] [Trace] [(] [", Message 1"] [,] [Ex] [)] [;] [Root] [.] [Trace] [(] [", Discarded , Message"] [,] [Ex] [)] [;] [Root] [.] [Trace] [(] [", Discarded , Message"] [,] [Ex] [)] [;] [Vector] [Msgs] [=] [Appender] [.] [Get, Vector] [(] [)] [;] [Assert, Equals] [(] [1] [,] [Msgs] [.] [Size] [(] [)] [)] [;] [Logging, Event] [Event] [=] [(] [Logging, Event] [)] [Msgs] [.] [Element, At] [(] [0] [)] [;] [Assert, Equals] [(] [Level] [.] [Trace] [,] [Event] [.] [Get, Level] [(] [)] [)] [;] [Assert, Equals] [(] [", Message 1"] [,] [Event] [.] [Get, Message] [(] [)] [)] [;] [Test, Is, Trace, Enabled] [Vector, Appender] [Appender] [=] [New] [Vector, Appender] [(] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Root] [.] [Set, Level] [(] [Level] [.] [Info] [)] [;] [Logger] [Tracer] [=] [Logger] [.] [Get, Logger] [(] ["com.example., Tracer"] [)] [;] [Tracer] [.] [Set, Level] [(] [Level] [.] [Trace] [)] [;] [Assert, True] [(] [Tracer] [.] [Is, Trace, Enabled] [(] [)] [)] [;] [Assert, False] [(] [Root] [.] [Is, Trace, Enabled] [(] [)] [)] [;]
Class CountingHierarchyEventListener@@ [Private] [Int] [Add, Event, Count] [;] [Private] [Int] [Remove, Event, Count] [;] [Add, Event, Count] [=] [Remove, Event, Count] [=] [0] [;] [Add, Appender, Event] [Add, Event, Count] [++] [;] [Remove, Appender, Event] [Remove, Event, Count] [++] [;] [Get, Add, Event, Count] [Return] [Add, Event, Count] [;] [Get, Remove, Event, Count] [Return] [Remove, Event, Count] [;] [Test, Appender, Event1] [Counting, Hierarchy, Event, Listener] [Listener] [=] [New] [Counting, Hierarchy, Event, Listener] [(] [)] [;] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [.] [Add, Hierarchy, Event, Listener] [(] [Listener] [)] [;] [Counting, Appender] [Appender] [=] [New] [Counting, Appender] [(] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Add, Event, Count] [(] [)] [)] [;] [Assert, Equals] [(] [0] [,] [Listener] [.] [Get, Remove, Event, Count] [(] [)] [)] [;] [Root] [.] [Remove, Appender] [(] [Appender] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Add, Event, Count] [(] [)] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Remove, Event, Count] [(] [)] [)] [;] [Test, Appender, Event2] [Counting, Hierarchy, Event, Listener] [Listener] [=] [New] [Counting, Hierarchy, Event, Listener] [(] [)] [;] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [.] [Add, Hierarchy, Event, Listener] [(] [Listener] [)] [;] [Counting, Appender] [Appender] [=] [New] [Counting, Appender] [(] [)] [;] [Appender] [.] [Set, Name] [(] [", A1"] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Add, Event, Count] [(] [)] [)] [;] [Assert, Equals] [(] [0] [,] [Listener] [.] [Get, Remove, Event, Count] [(] [)] [)] [;] [Root] [.] [Remove, Appender] [(] [Appender] [.] [Get, Name] [(] [)] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Add, Event, Count] [(] [)] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Remove, Event, Count] [(] [)] [)] [;] [Test, Appender, Event3] [Counting, Hierarchy, Event, Listener] [Listener] [=] [New] [Counting, Hierarchy, Event, Listener] [(] [)] [;] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [.] [Add, Hierarchy, Event, Listener] [(] [Listener] [)] [;] [Counting, Appender] [Appender] [=] [New] [Counting, Appender] [(] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Add, Event, Count] [(] [)] [)] [;] [Assert, Equals] [(] [0] [,] [Listener] [.] [Get, Remove, Event, Count] [(] [)] [)] [;] [Root] [.] [Remove, All, Appenders] [(] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Add, Event, Count] [(] [)] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Remove, Event, Count] [(] [)] [)] [;] [Test, Appender, Event4] [Counting, Hierarchy, Event, Listener] [Listener] [=] [New] [Counting, Hierarchy, Event, Listener] [(] [)] [;] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [.] [Add, Hierarchy, Event, Listener] [(] [Listener] [)] [;] [Counting, Appender] [Appender] [=] [New] [Counting, Appender] [(] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Add, Event, Count] [(] [)] [)] [;] [Assert, Equals] [(] [0] [,] [Listener] [.] [Get, Remove, Event, Count] [(] [)] [)] [;] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Add, Event, Count] [(] [)] [)] [;] [Assert, Equals] [(] [1] [,] [Listener] [.] [Get, Remove, Event, Count] [(] [)] [)] [;]
Class CountingAppender@@ [Int] [Counter] [;] [Counter] [=] [0] [;] [Close] [Append] [Counter] [++] [;] [Requires, Layout] [Return] [True] [;]
Class LogManagerTest@@ [Test, Default, Configuration, File] [Assert, Equals] [(] ["log4j.properties"] [,] [Log, Manager] [.] [Default, Configuration, File] [)] [;] [Test, Default, Xml, Configuration, File] [Assert, Equals] [(] ["log4j.xml"] [,] [Log, Manager] [.] [Default, Xml, Configuration, File] [)] [;] [Test, Default, Configuration, Key] [Assert, Equals] [(] ["log4j.configuration"] [,] [Log, Manager] [.] [Default, Configuration, Key] [)] [;] [Test, Configurator, Class, Key] [Assert, Equals] [(] ["log4j.configurator, Class"] [,] [Log, Manager] [.] [Configurator, Class, Key] [)] [;] [Test, Default, Init, Override, Key] [Assert, Equals] [(] ["log4j.default, Init, Override"] [,] [Log, Manager] [.] [Default, Init, Override, Key] [)] [;]
Class MDCOrderFilter@@ [Private] [Static] [Final] [String[]] [Patterns=new, String[]{"{key2,va12}{key1,va11}","{key2,value2}{key1,value1}"}] [;] [Private] [Static] [Final] [String[]] [Replacements=new, String[]{"{key1,va11}{key2,va12}","{key1,value1}{key2,value2}"}] [;] [Filter] [If] [(] [In] [==] [Null] [)] [{] [Return] [Null] [;] [}] [Return] [Null] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Patterns] [.] [Length] [;] [I] [++] [)] [{] [Int] [Ipos] [=] [In] [.] [Index, Of] [(] [Patterns] [[] [I] []] [)] [;] [If] [(] [Ipos] [>=] [1] [)] [{] [Return] [In] [.] [Substring] [(] [0] [,] [Ipos] [)] [+] [Replacements] [[] [I] []] [+] [In] [.] [Substring] [(] [Ipos] [+] [Patterns] [[] [I] []] [.] [Length] [(] [)] [)] [;] [}] [}] [Int] [Ipos] [=] [In] [.] [Index, Of] [(] [Patterns] [[] [I] []] [)] [;] [If] [(] [Ipos] [>=] [1] [)] [{] [Return] [In] [.] [Substring] [(] [0] [,] [Ipos] [)] [+] [Replacements] [[] [I] []] [+] [In] [.] [Substring] [(] [Ipos] [+] [Patterns] [[] [I] []] [.] [Length] [(] [)] [)] [;] [}] [Return] [In] [.] [Substring] [(] [0] [,] [Ipos] [)] [+] [Replacements] [[] [I] []] [+] [In] [.] [Substring] [(] [Ipos] [+] [Patterns] [[] [I] []] [.] [Length] [(] [)] [)] [;] [Return] [In] [;]
Class MDCTestCase@@ [Set, Up] [Mdc] [.] [Clear] [(] [)] [;] [Tear, Down] [Mdc] [.] [Clear] [(] [)] [;] [Test, Put] [Mdc] [.] [Put] [(] ["key"] [,] ["some value"] [)] [;] [Assert, Equals] [(] ["some value"] [,] [Mdc] [.] [Get] [(] ["key"] [)] [)] [;] [Assert, Equals] [(] [1] [,] [Mdc] [.] [Get, Context] [(] [)] [.] [Size] [(] [)] [)] [;] [Test, Remove, Last, Key] [Mdc] [.] [Put] [(] ["key"] [,] ["some value"] [)] [;] [Mdc] [.] [Remove] [(] ["key"] [)] [;] [Check, Thread, Locals, For, Leaks] [(] [)] [;] [Check, Thread, Locals, For, Leaks] [Field] [Thread, Locals, Field] [=] [Thread] [.] [Class] [.] [Get, Declared, Field] [(] ["thread, Locals"] [)] [;] [Thread, Locals, Field] [.] [Set, Accessible] [(] [True] [)] [;] [Field] [Inheritable, Thread, Locals, Field] [=] [Thread] [.] [Class] [.] [Get, Declared, Field] [(] ["inheritable, Thread, Locals"] [)] [;] [Inheritable, Thread, Locals, Field] [.] [Set, Accessible] [(] [True] [)] [;] [Class] [Tlm, Class] [=] [Class] [.] [For, Name] [(] ["java.lang., Thread, Local$, Thread, Local, Map"] [)] [;] [Field] [Table, Field] [=] [Tlm, Class] [.] [Get, Declared, Field] [(] ["table"] [)] [;] [Table, Field] [.] [Set, Accessible] [(] [True] [)] [;] [Thread] [Thread] [=] [Thread] [.] [Current, Thread] [(] [)] [;] [Object] [Thread, Local, Map] [;] [Thread, Local, Map] [=] [Thread, Locals, Field] [.] [Get] [(] [Thread] [)] [;] [Check, Thread, Local, Map, For, Leaks] [(] [Thread, Local, Map] [,] [Table, Field] [)] [;] [Thread, Local, Map] [=] [Inheritable, Thread, Locals, Field] [.] [Get] [(] [Thread] [)] [;] [Check, Thread, Local, Map, For, Leaks] [(] [Thread, Local, Map] [,] [Table, Field] [)] [;] [Check, Thread, Local, Map, For, Leaks] [If] [(] [Map] [!=] [Null] [)] [{] [Object] [[] []] [Table] [=] [(] [Object] [[] []] [)] [Internal, Table, Field] [.] [Get] [(] [Map] [)] [;] [If] [(] [Table] [!=] [Null] [)] [{] [For] [(] [Int] [J] [=] [0] [;] [J] [<] [Table] [.] [Length] [;] [J] [++] [)] [{] [If] [(] [Table] [[] [J] []] [!=] [Null] [)] [{] [Object] [Key] [=] [(] [(] [Reference] [)] [Table] [[] [J] []] [)] [.] [Get] [(] [)] [;] [String] [Key, Class, Name] [=] [Key] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [;] [If] [(] [Key] [.] [Get, Class] [(] [)] [==] [Org] [.] [Apache] [.] [Log4j] [.] [Helpers] [.] [Thread, Local, Map] [.] [Class] [)] [{] [Fail] [(] [", Found a , Thread, Local with key of type ["] [+] [Key, Class, Name] [+] ["]"] [)] [;] [}] [}] [}] [}] [}] [Object] [[] []] [Table] [=] [(] [Object] [[] []] [)] [Internal, Table, Field] [.] [Get] [(] [Map] [)] [;] [If] [(] [Table] [!=] [Null] [)] [{] [For] [(] [Int] [J] [=] [0] [;] [J] [<] [Table] [.] [Length] [;] [J] [++] [)] [{] [If] [(] [Table] [[] [J] []] [!=] [Null] [)] [{] [Object] [Key] [=] [(] [(] [Reference] [)] [Table] [[] [J] []] [)] [.] [Get] [(] [)] [;] [String] [Key, Class, Name] [=] [Key] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [;] [If] [(] [Key] [.] [Get, Class] [(] [)] [==] [Org] [.] [Apache] [.] [Log4j] [.] [Helpers] [.] [Thread, Local, Map] [.] [Class] [)] [{] [Fail] [(] [", Found a , Thread, Local with key of type ["] [+] [Key, Class, Name] [+] ["]"] [)] [;] [}] [}] [}] [}] [For] [(] [Int] [J] [=] [0] [;] [J] [<] [Table] [.] [Length] [;] [J] [++] [)] [{] [If] [(] [Table] [[] [J] []] [!=] [Null] [)] [{] [Object] [Key] [=] [(] [(] [Reference] [)] [Table] [[] [J] []] [)] [.] [Get] [(] [)] [;] [String] [Key, Class, Name] [=] [Key] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [;] [If] [(] [Key] [.] [Get, Class] [(] [)] [==] [Org] [.] [Apache] [.] [Log4j] [.] [Helpers] [.] [Thread, Local, Map] [.] [Class] [)] [{] [Fail] [(] [", Found a , Thread, Local with key of type ["] [+] [Key, Class, Name] [+] ["]"] [)] [;] [}] [}] [}] [If] [(] [Table] [[] [J] []] [!=] [Null] [)] [{] [Object] [Key] [=] [(] [(] [Reference] [)] [Table] [[] [J] []] [)] [.] [Get] [(] [)] [;] [String] [Key, Class, Name] [=] [Key] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [;] [If] [(] [Key] [.] [Get, Class] [(] [)] [==] [Org] [.] [Apache] [.] [Log4j] [.] [Helpers] [.] [Thread, Local, Map] [.] [Class] [)] [{] [Fail] [(] [", Found a , Thread, Local with key of type ["] [+] [Key, Class, Name] [+] ["]"] [)] [;] [}] [}] [Object] [Key] [=] [(] [(] [Reference] [)] [Table] [[] [J] []] [)] [.] [Get] [(] [)] [;] [String] [Key, Class, Name] [=] [Key] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [;] [If] [(] [Key] [.] [Get, Class] [(] [)] [==] [Org] [.] [Apache] [.] [Log4j] [.] [Helpers] [.] [Thread, Local, Map] [.] [Class] [)] [{] [Fail] [(] [", Found a , Thread, Local with key of type ["] [+] [Key, Class, Name] [+] ["]"] [)] [;] [}] [Fail] [(] [", Found a , Thread, Local with key of type ["] [+] [Key, Class, Name] [+] ["]"] [)] [;]
Class MinimumTestCase@@ [Static] [String] [Filtered="output/filtered"] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\(, Native , Method\\)"] [;] [Static] [String] [Exception4="\\s*at .*\\(.*, Compiled , Code\\)"] [;] [Static] [String] [Exception5="\\s*at .*\\(.*libgcj.*\\)"] [;] [Static] [String] [Ttcc, Pat=, Filter., Absolute, Date, And, Time, Pat+" \\[main]\\ (, Trace|, Debug|, Info|, Warn|, Error|, Fatal) .* - , Message \\d{1,2}"] [;] [Static] [String] [Ttcc2, Pat=, Filter., Absolute, Date, And, Time, Pat+" \\[main]\\ (, Trace|, Debug|, Info|, Warn|, Error|, Fatal) .* - , Messages should bear numbers 0 through 29\\."] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Set, Up] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Remove, All, Appenders] [(] [)] [;] [Tear, Down] [Root] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Simple] [Layout] [Layout] [=] [New] [Simple, Layout] [(] [)] [;] [Appender] [Appender] [=] [New] [File, Appender] [(] [Layout] [,] ["output/simple"] [,] [False] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Common] [(] [)] [;] [Transformer] [.] [Transform] [(] ["output/simple"] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/simple"] [)] [)] [;] [Ttcc] [Layout] [Layout] [=] [New] [Ttcc, Layout] [(] [Absolute, Time, Date, Format] [.] [Date, And, Time, Date, Format] [)] [;] [Appender] [Appender] [=] [New] [File, Appender] [(] [Layout] [,] ["output/ttcc"] [,] [False] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [String] [Old, Name] [=] [Thread] [.] [Current, Thread] [(] [)] [.] [Get, Name] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] ["main"] [)] [;] [Common] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Old, Name] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Ttcc, Pat] [,] [Ttcc2, Pat] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] ["output/ttcc"] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Absolute, Date, And, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/ttcc"] [)] [)] [;] [Common] [Int] [I] [=] [0] [;] [Logger] [Err] [=] [Logger] [.] [Get, Logger] [(] [", Err"] [)] [;] [Err] [.] [Set, Level] [(] [Level] [.] [Error] [)] [;] [Logger] [Inf] [=] [Logger] [.] [Get, Logger] [(] [", Inf"] [)] [;] [Inf] [.] [Set, Level] [(] [Level] [.] [Info] [)] [;] [Logger] [Inf, Err] [=] [Logger] [.] [Get, Logger] [(] [", Inf., Err"] [)] [;] [Inf, Err] [.] [Set, Level] [(] [Level] [.] [Error] [)] [;] [Logger] [Deb] [=] [Logger] [.] [Get, Logger] [(] [", Deb"] [)] [;] [Deb] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Logger] [Trc] [=] [Logger] [.] [Get, Logger] [(] [", Trc"] [)] [;] [Trc] [.] [Set, Level] [(] [Level] [.] [Trace] [)] [;] [Logger] [Inf, Undef] [=] [Logger] [.] [Get, Logger] [(] [", Inf., Undef"] [)] [;] [Logger] [Inf, Err, Undef] [=] [Logger] [.] [Get, Logger] [(] [", Inf., Err., Undef"] [)] [;] [Logger] [Undef] [=] [Logger] [.] [Get, Logger] [(] [", Undef"] [)] [;] [Err] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Err] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Undef] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Undef] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Undef] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Undef] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Err] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Err] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Err, Undef] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Err, Undef] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Deb] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Deb] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Deb] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Deb] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Deb] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Trc] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Trc] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Trc] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Trc] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Trc] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Trc] [.] [Trace] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Undef] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Undef] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Undef] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Undef] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Undef] [.] [Debug] [(] [", Message "] [+] [I] [,] [New] [Exception] [(] [", Just testing."] [)] [)] [;] [Int] [Print, Count] [=] [I] [;] [I] [++] [;] [Err] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Err] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Err] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Undef] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Err] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Err] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Err] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Err, Undef] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Err, Undef] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Inf, Err, Undef] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [I] [++] [;] [Undef] [.] [Trace] [(] [", Message "] [+] [I] [,] [New] [Exception] [(] [", Just testing."] [)] [)] [;] [I] [++] [;] [Inf] [.] [Info] [(] [", Messages should bear numbers 0 through "] [+] [Print, Count] [+] ["."] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Minimum, Test, Case] [(] ["simple"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Minimum, Test, Case] [(] ["ttcc"] [)] [)] [;] [Return] [Suite] [;]
Class MyPatternLayout@@ [Create, Pattern, Parser] [Return] [New] [My, Pattern, Parser] [(] [Pattern] [==] [Null] [?] [Default, Conversion, Pattern] [:] [Pattern] [)] [;] [Main] [Layout] [Layout] [=] [New] [My, Pattern, Layout] [(] ["[counter=%.10#] - %m%n"] [)] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["some.cat"] [)] [;] [Logger] [.] [Add, Appender] [(] [New] [Console, Appender] [(] [Layout] [,] [Console, Appender] [.] [System, Out] [)] [)] [;] [Logger] [.] [Debug] [(] [", Hello, log"] [)] [;] [Logger] [.] [Info] [(] [", Hello again..."] [)] [;]
Class MyPatternParser@@ [Int] [Counter=0] [;] [Finalize, Converter] [If] [(] [C] [==] ['#'] [)] [{] [Add, Converter] [(] [New] [User, Dir, Pattern, Converter] [(] [Formatting, Info] [)] [)] [;] [Current, Literal] [.] [Set, Length] [(] [0] [)] [;] [}] [Else] [{] [Super] [.] [Finalize, Converter] [(] [C] [)] [;] [}] [Add, Converter] [(] [New] [User, Dir, Pattern, Converter] [(] [Formatting, Info] [)] [)] [;] [Current, Literal] [.] [Set, Length] [(] [0] [)] [;] [Super] [.] [Finalize, Converter] [(] [C] [)] [;]
Class UserDirPatternConverter@@ [Convert] [Return] [String] [.] [Value, Of] [(] [++] [Counter] [)] [;]
Class ShortSocketServer@@ [Static] [Logger] [Cat=, Logger.get, Logger(, Short, Socket, Server.class)] [;] [Main] [Int] [Total, Tests] [=] [0] [;] [String] [Prefix] [=] [Null] [;] [If] [(] [Args] [.] [Length] [==] [2] [)] [{] [Total, Tests] [=] [Integer] [.] [Parse, Int] [(] [Args] [[] [0] []] [)] [;] [Prefix] [=] [Args] [[] [1] []] [;] [}] [Else] [{] [Usage] [(] [", Wrong number of arguments."] [)] [;] [}] [Total, Tests] [=] [Integer] [.] [Parse, Int] [(] [Args] [[] [0] []] [)] [;] [Prefix] [=] [Args] [[] [1] []] [;] [Usage] [(] [", Wrong number of arguments."] [)] [;] [Log, Log] [.] [Debug] [(] [", Listening on port "] [+] [Socket, Server, Test, Case] [.] [Port] [)] [;] [Server, Socket] [Server, Socket] [=] [New] [Server, Socket] [(] [Socket, Server, Test, Case] [.] [Port] [)] [;] [Mdc] [.] [Put] [(] ["host, Id"] [,] ["short, Socket, Server"] [)] [;] [For] [(] [Int] [I] [=] [1] [;] [I] [<=] [Total, Tests] [;] [I] [++] [)] [{] [Property, Configurator] [.] [Configure] [(] [Prefix] [+] [I] [+] [".properties"] [)] [;] [Log, Log] [.] [Debug] [(] [", Waiting to accept a new client."] [)] [;] [Socket] [Socket] [=] [Server, Socket] [.] [Accept] [(] [)] [;] [Log, Log] [.] [Debug] [(] [", Connected to client at "] [+] [Socket] [.] [Get, Inet, Address] [(] [)] [)] [;] [Log, Log] [.] [Debug] [(] [", Starting new socket node."] [)] [;] [Socket, Node] [Sn] [=] [New] [Socket, Node] [(] [Socket] [,] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [)] [;] [Thread] [T] [=] [New] [Thread] [(] [Sn] [)] [;] [T] [.] [Start] [(] [)] [;] [T] [.] [Join] [(] [)] [;] [}] [Property, Configurator] [.] [Configure] [(] [Prefix] [+] [I] [+] [".properties"] [)] [;] [Log, Log] [.] [Debug] [(] [", Waiting to accept a new client."] [)] [;] [Socket] [Socket] [=] [Server, Socket] [.] [Accept] [(] [)] [;] [Log, Log] [.] [Debug] [(] [", Connected to client at "] [+] [Socket] [.] [Get, Inet, Address] [(] [)] [)] [;] [Log, Log] [.] [Debug] [(] [", Starting new socket node."] [)] [;] [Socket, Node] [Sn] [=] [New] [Socket, Node] [(] [Socket] [,] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [)] [;] [Thread] [T] [=] [New] [Thread] [(] [Sn] [)] [;] [T] [.] [Start] [(] [)] [;] [T] [.] [Join] [(] [)] [;] [Usage] [System] [.] [Err] [.] [Println] [(] [Msg] [)] [;] [System] [.] [Err] [.] [Println] [(] [", Usage: java "] [+] [Short, Socket, Server] [.] [Class] [.] [Get, Name] [(] [)] [+] [" total, Tests config, File, Prefix"] [)] [;] [System] [.] [Exit] [(] [1] [)] [;]
Class SMTPAppenderTest@@ [Tear, Down] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;]
Class MockTriggeringEventEvaluator@@ [Is, Triggering, Event] [Return] [True] [;] [Test, Trigger] [Dom, Configurator] [.] [Configure] [(] ["input/xml/smtp, Appender1.xml"] [)] [;] [Smtp, Appender] [Appender] [=] [(] [Smtp, Appender] [)] [Logger] [.] [Get, Root, Logger] [(] [)] [.] [Get, Appender] [(] [", A1"] [)] [;] [Triggering, Event, Evaluator] [Evaluator] [=] [Appender] [.] [Get, Evaluator] [(] [)] [;] [Assert, True] [(] [Evaluator] [Instanceof] [Mock, Triggering, Event, Evaluator] [)] [;]
Class SocketAppenderTest@@ [Set, Up] [Dom, Configurator] [.] [Configure] [(] ["input/xml/, Socket, Appender, Test, Config.xml"] [)] [;] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Socket, Appender, Test] [.] [Class] [)] [;] [Secondary] [=] [(] [Last, Only, Appender] [)] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.net., Socket, Appender, Test, Dummy"] [)] [.] [Get, Appender] [(] ["last, Only"] [)] [;] [Tear, Down] [Test, Fallback, Error, Handler, When, Starting] [String] [Msg] [=] ["test, Fallback, Error, Handler, When, Starting"] [;] [Logger] [.] [Debug] [(] [Msg] [)] [;] [Assert, Equals] [(] [", Socket, Appender with , Fallback, Error, Handler"] [,] [Msg] [,] [Secondary] [.] [Get, Last, Message] [(] [)] [)] [;] [Private] [Static] [Logger] [Logger] [;] [Private] [Static] [Last, Only, Appender] [Secondary] [;]
Class LastOnlyAppender@@ [Append] [This] [.] [Last, Event] [=] [Event] [;] [Requires, Layout] [Return] [False] [;] [Close] [This] [.] [Closed] [=] [True] [;] [Get, Last, Message] [If] [(] [This] [.] [Last, Event] [!=] [Null] [)] [Return] [This] [.] [Last, Event] [.] [Get, Message] [(] [)] [.] [To, String] [(] [)] [;] [Else] [Return] [""] [;] [Private] [Logging, Event] [Last, Event] [;]
Class SocketServerTestCase@@ [Static] [String] [Temp="output/temp"] [;] [Static] [String] [Filtered="output/filtered"] [;] [Static] [String] [Pat1="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) , T1 \\[main]\\ "+".* , Message \\d{1,2}"] [;] [Static] [String] [Pat2="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) , T2 \\[main]\\ "+"\\? \\(\\?:\\?\\) , Message \\d{1,2}"] [;] [Static] [String] [Pat3="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) , T3 \\[main]\\ "+"org.apache.log4j.net., Socket, Server, Test, Case "+"\\(, Socket, Server, Test, Case.java:\\d{3}\\) , Message \\d{1,2}"] [;] [Static] [String] [Pat4="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) some , T4 , Mdc-, Test4 \\[main]\\"+" (root|, Socket, Server, Test, Case) - , Message \\d{1,2}"] [;] [Static] [String] [Pat5="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) some5 , T5 , Mdc-, Test5 \\[main]\\"+" (root|, Socket, Server, Test, Case) - , Message \\d{1,2}"] [;] [Static] [String] [Pat6="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) some6 , T6 client-test6 , Mdc-, Test6"+" \\[main]\\ (root|, Socket, Server, Test, Case) - , Message \\d{1,2}"] [;] [Static] [String] [Pat7="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) some7 , T7 client-test7 , Mdc-, Test7"+" \\[main]\\ (root|, Socket, Server, Test, Case) - , Message \\d{1,2}"] [;] [Static] [String] [Pat8="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal|, Lethal) some8 , T8 short, Socket, Server"+" , Mdc-, Test8 \\[main]\\ (root|, Socket, Server, Test, Case) - , Message \\d{1,2}"] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\(, Native , Method\\)"] [;] [Static] [String] [Exception4="\\s*at .*\\(.*, Compiled , Code\\)"] [;] [Static] [String] [Exception5="\\s*at .*\\(.*libgcj.*\\)"] [;] [Static] [Logger] [Logger=, Logger.get, Logger(, Socket, Server, Test, Case.class)] [;] [Static] [Public] [Final] [Int] [Port=12345] [;] [Static] [Logger] [Root, Logger=, Logger.get, Root, Logger()] [;] [Socket, Appender] [Socket, Appender] [;] [Set, Up] [System] [.] [Out] [.] [Println] [(] [", Setting up test case."] [)] [;] [Tear, Down] [System] [.] [Out] [.] [Println] [(] [", Tearing down test case."] [)] [;] [Socket, Appender] [=] [Null] [;] [Root, Logger] [.] [Remove, All, Appenders] [(] [)] [;] [Test1] [Socket, Appender] [=] [New] [Socket, Appender] [(] ["localhost"] [,] [Port] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Socket, Appender] [)] [;] [Common] [(] [", T1"] [,] ["key1"] [,] [", Mdc-, Test1"] [)] [;] [Delay] [(] [1] [)] [;] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat1] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.1"] [)] [)] [;] [Test2] [Socket, Appender] [=] [New] [Socket, Appender] [(] ["localhost"] [,] [Port] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Socket, Appender] [)] [;] [Common] [(] [", T2"] [,] ["key2"] [,] [", Mdc-, Test2"] [)] [;] [Delay] [(] [1] [)] [;] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat2] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.2"] [)] [)] [;] [Test3] [Socket, Appender] [=] [New] [Socket, Appender] [(] ["localhost"] [,] [Port] [)] [;] [Socket, Appender] [.] [Set, Location, Info] [(] [True] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Socket, Appender] [)] [;] [Common] [(] [", T3"] [,] ["key3"] [,] [", Mdc-, Test3"] [)] [;] [Delay] [(] [1] [)] [;] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat3] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.3"] [)] [)] [;] [Test4] [Socket, Appender] [=] [New] [Socket, Appender] [(] ["localhost"] [,] [Port] [)] [;] [Socket, Appender] [.] [Set, Location, Info] [(] [True] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Socket, Appender] [)] [;] [Ndc] [.] [Push] [(] ["some"] [)] [;] [Common] [(] [", T4"] [,] ["key4"] [,] [", Mdc-, Test4"] [)] [;] [Ndc] [.] [Pop] [(] [)] [;] [Delay] [(] [1] [)] [;] [If] [(] [!] [System] [.] [Get, Property] [(] ["java.version"] [)] [.] [Starts, With] [(] ["1.1."] [)] [)] [{] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat4] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.4"] [)] [)] [;] [}] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat4] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.4"] [)] [)] [;] [Test5] [Socket, Appender] [=] [New] [Socket, Appender] [(] ["localhost"] [,] [Port] [)] [;] [Socket, Appender] [.] [Set, Location, Info] [(] [True] [)] [;] [Async, Appender] [Async, Appender] [=] [New] [Async, Appender] [(] [)] [;] [Async, Appender] [.] [Set, Location, Info] [(] [True] [)] [;] [Async, Appender] [.] [Add, Appender] [(] [Socket, Appender] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Async, Appender] [)] [;] [Ndc] [.] [Push] [(] ["some5"] [)] [;] [Common] [(] [", T5"] [,] ["key5"] [,] [", Mdc-, Test5"] [)] [;] [Ndc] [.] [Pop] [(] [)] [;] [Delay] [(] [2] [)] [;] [If] [(] [!] [System] [.] [Get, Property] [(] ["java.version"] [)] [.] [Starts, With] [(] ["1.1."] [)] [)] [{] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat5] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.5"] [)] [)] [;] [}] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat5] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.5"] [)] [)] [;] [Test6] [Socket, Appender] [=] [New] [Socket, Appender] [(] ["localhost"] [,] [Port] [)] [;] [Socket, Appender] [.] [Set, Location, Info] [(] [True] [)] [;] [Async, Appender] [Async, Appender] [=] [New] [Async, Appender] [(] [)] [;] [Async, Appender] [.] [Set, Location, Info] [(] [True] [)] [;] [Async, Appender] [.] [Add, Appender] [(] [Socket, Appender] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Async, Appender] [)] [;] [Ndc] [.] [Push] [(] ["some6"] [)] [;] [Mdc] [.] [Put] [(] ["host, Id"] [,] ["client-test6"] [)] [;] [Common] [(] [", T6"] [,] ["key6"] [,] [", Mdc-, Test6"] [)] [;] [Ndc] [.] [Pop] [(] [)] [;] [Mdc] [.] [Remove] [(] ["host, Id"] [)] [;] [Delay] [(] [2] [)] [;] [If] [(] [!] [System] [.] [Get, Property] [(] ["java.version"] [)] [.] [Starts, With] [(] ["1.1."] [)] [)] [{] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat6] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.6"] [)] [)] [;] [}] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat6] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.6"] [)] [)] [;] [Test7] [Socket, Appender] [=] [New] [Socket, Appender] [(] ["localhost"] [,] [Port] [)] [;] [Socket, Appender] [.] [Set, Location, Info] [(] [True] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Socket, Appender] [)] [;] [Ndc] [.] [Push] [(] ["some7"] [)] [;] [Mdc] [.] [Put] [(] ["host, Id"] [,] ["client-test7"] [)] [;] [Common] [(] [", T7"] [,] ["key7"] [,] [", Mdc-, Test7"] [)] [;] [Ndc] [.] [Pop] [(] [)] [;] [Mdc] [.] [Remove] [(] ["host, Id"] [)] [;] [Delay] [(] [2] [)] [;] [If] [(] [!] [System] [.] [Get, Property] [(] ["java.version"] [)] [.] [Starts, With] [(] ["1.1."] [)] [)] [{] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat7] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.7"] [)] [)] [;] [}] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat7] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.7"] [)] [)] [;] [Test8] [Socket, Appender] [=] [New] [Socket, Appender] [(] ["localhost"] [,] [Port] [)] [;] [Socket, Appender] [.] [Set, Location, Info] [(] [True] [)] [;] [Root, Logger] [.] [Add, Appender] [(] [Socket, Appender] [)] [;] [Ndc] [.] [Push] [(] ["some8"] [)] [;] [If] [(] [System] [.] [Get, Property] [(] ["java.vendor"] [)] [.] [Index, Of] [(] [", Apache"] [)] [!=] [-] [1] [)] [{] [Mdc] [.] [Put] [(] ["host, Id"] [,] ["short, Socket, Server"] [)] [;] [}] [Mdc] [.] [Put] [(] ["host, Id"] [,] ["short, Socket, Server"] [)] [;] [Common] [(] [", T8"] [,] ["key8"] [,] [", Mdc-, Test8"] [)] [;] [Ndc] [.] [Pop] [(] [)] [;] [Delay] [(] [2] [)] [;] [If] [(] [!] [System] [.] [Get, Property] [(] ["java.version"] [)] [.] [Starts, With] [(] ["1.1."] [)] [)] [{] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat8] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.8"] [)] [)] [;] [}] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat8] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/socket, Server.8"] [)] [)] [;] [Common] [String] [Old, Thread, Name] [=] [Thread] [.] [Current, Thread] [(] [)] [.] [Get, Name] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] ["main"] [)] [;] [Int] [I] [=] [-] [1] [;] [Ndc] [.] [Push] [(] [Dc] [)] [;] [Mdc] [.] [Put] [(] [Key] [,] [O] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Root, Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Log] [(] [X, Level] [.] [Trace] [,] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Trace] [)] [;] [Root, Logger] [.] [Set, Level] [(] [Level] [.] [Trace] [)] [;] [Logger] [.] [Trace] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Trace] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Debug] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Info] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Log] [(] [X, Level] [.] [Lethal] [,] [", Message "] [+] [++] [I] [)] [;] [Exception] [E] [=] [New] [Exception] [(] [", Just testing"] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Root] [.] [Error] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Ndc] [.] [Pop] [(] [)] [;] [Mdc] [.] [Remove] [(] [Key] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Old, Thread, Name] [)] [;] [Delay] [Try] [{] [Thread] [.] [Sleep] [(] [Secs] [*] [1000] [)] [;] [}] [Catch] [(] [Exception] [E] [)] [{] [}] [Thread] [.] [Sleep] [(] [Secs] [*] [1000] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Socket, Server, Test, Case] [(] ["test1"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Socket, Server, Test, Case] [(] ["test2"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Socket, Server, Test, Case] [(] ["test3"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Socket, Server, Test, Case] [(] ["test4"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Socket, Server, Test, Case] [(] ["test5"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Socket, Server, Test, Case] [(] ["test6"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Socket, Server, Test, Case] [(] ["test7"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Socket, Server, Test, Case] [(] ["test8"] [)] [)] [;] [Return] [Suite] [;]
Class SyslogAppenderTest@@ [Tear, Down] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Test, Default, Constructor] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Assert, Equals] [(] ["user"] [,] [Appender] [.] [Get, Facility] [(] [)] [)] [;] [Assert, Equals] [(] [False] [,] [Appender] [.] [Get, Facility, Printing] [(] [)] [)] [;] [Assert, Null] [(] [Appender] [.] [Get, Layout] [(] [)] [)] [;] [Assert, Null] [(] [Appender] [.] [Get, Syslog, Host] [(] [)] [)] [;] [Assert, True] [(] [Appender] [.] [Requires, Layout] [(] [)] [)] [;] [Test, Two, Param, Constructor] [Layout] [Layout] [=] [New] [Pattern, Layout] [(] [)] [;] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [Layout] [,] [24] [)] [;] [Assert, Equals] [(] ["daemon"] [,] [Appender] [.] [Get, Facility] [(] [)] [)] [;] [Assert, Equals] [(] [False] [,] [Appender] [.] [Get, Facility, Printing] [(] [)] [)] [;] [Assert, Equals] [(] [Layout] [,] [Appender] [.] [Get, Layout] [(] [)] [)] [;] [Assert, Null] [(] [Appender] [.] [Get, Syslog, Host] [(] [)] [)] [;] [Assert, True] [(] [Appender] [.] [Requires, Layout] [(] [)] [)] [;] [Test, Two, Param, Constructor, Bad, Facility] [Layout] [Layout] [=] [New] [Pattern, Layout] [(] [)] [;] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [Layout] [,] [25] [)] [;] [Assert, Equals] [(] ["user"] [,] [Appender] [.] [Get, Facility] [(] [)] [)] [;] [Assert, Equals] [(] [False] [,] [Appender] [.] [Get, Facility, Printing] [(] [)] [)] [;] [Assert, Equals] [(] [Layout] [,] [Appender] [.] [Get, Layout] [(] [)] [)] [;] [Assert, Null] [(] [Appender] [.] [Get, Syslog, Host] [(] [)] [)] [;] [Assert, True] [(] [Appender] [.] [Requires, Layout] [(] [)] [)] [;] [Test, Three, Param, Constructor] [Layout] [Layout] [=] [New] [Pattern, Layout] [(] [)] [;] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [Layout] [,] ["syslog.example.org"] [,] [24] [)] [;] [Assert, Equals] [(] ["daemon"] [,] [Appender] [.] [Get, Facility] [(] [)] [)] [;] [Assert, Equals] [(] [False] [,] [Appender] [.] [Get, Facility, Printing] [(] [)] [)] [;] [Assert, Equals] [(] [Layout] [,] [Appender] [.] [Get, Layout] [(] [)] [)] [;] [Assert, Equals] [(] ["syslog.example.org"] [,] [Appender] [.] [Get, Syslog, Host] [(] [)] [)] [;] [Assert, True] [(] [Appender] [.] [Requires, Layout] [(] [)] [)] [;] [Test, Get, Facility, String] [String] [Expected] [=] ["kern user mail daemon auth syslog lpr news "] [+] ["uucp cron authpriv ftp local0 local1 local2 local3 "] [+] ["local4 local5 local6 local7 "] [;] [String, Buffer] [Actual] [=] [New] [String, Buffer] [(] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<=] [11] [;] [I] [++] [)] [{] [Actual] [.] [Append] [(] [Syslog, Appender] [.] [Get, Facility, String] [(] [I] [<] [<] [3] [)] [)] [;] [Actual] [.] [Append] [(] [' '] [)] [;] [}] [Actual] [.] [Append] [(] [Syslog, Appender] [.] [Get, Facility, String] [(] [I] [<] [<] [3] [)] [)] [;] [Actual] [.] [Append] [(] [' '] [)] [;] [For] [(] [Int] [I] [=] [16] [;] [I] [<=] [23] [;] [I] [++] [)] [{] [Actual] [.] [Append] [(] [Syslog, Appender] [.] [Get, Facility, String] [(] [I] [<] [<] [3] [)] [)] [;] [Actual] [.] [Append] [(] [' '] [)] [;] [}] [Actual] [.] [Append] [(] [Syslog, Appender] [.] [Get, Facility, String] [(] [I] [<] [<] [3] [)] [)] [;] [Actual] [.] [Append] [(] [' '] [)] [;] [Assert, Equals] [(] [Expected] [,] [Actual] [.] [To, String] [(] [)] [)] [;] [Test, Get, Facility, String, Unexpected] [Assert, Null] [(] [Syslog, Appender] [.] [Get, Facility, String] [(] [1] [)] [)] [;] [Assert, Null] [(] [Syslog, Appender] [.] [Get, Facility, String] [(] [12] [<] [<] [3] [)] [)] [;] [Test, Get, Facility, Bogus] [Assert, Equals] [(] [-] [1] [,] [Syslog, Appender] [.] [Get, Facility] [(] ["bogus"] [)] [)] [;] [Test, Get, Facility, Null] [Assert, Equals] [(] [-] [1] [,] [Syslog, Appender] [.] [Get, Facility] [(] [Null] [)] [)] [;] [Test, Get, Facility, System, Names] [String] [[] []] [Names] [=] [New] [String] [[] []] [{] ["k, Ern"] [,] ["us, Er"] [,] [", Ma, Il"] [,] ["daem, On"] [,] ["au, Th"] [,] ["sysl, Og"] [,] ["l, Pr"] [,] ["new, S"] [,] [", Uucp"] [,] ["cro, N"] [,] ["authpr, Iv"] [,] ["ft, P"] [}] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<=] [11] [;] [I] [++] [)] [{] [Assert, Equals] [(] [I] [<] [<] [3] [,] [Syslog, Appender] [.] [Get, Facility] [(] [Names] [[] [I] []] [)] [)] [;] [}] [Assert, Equals] [(] [I] [<] [<] [3] [,] [Syslog, Appender] [.] [Get, Facility] [(] [Names] [[] [I] []] [)] [)] [;] [Test, Get, Facility, Local, Names] [String] [[] []] [Names] [=] [New] [String] [[] []] [{] ["l, Ocal0"] [,] [", Local1"] [,] ["lo, Cal2"] [,] ["loc, Al3"] [,] ["loca, L4"] [,] ["local5"] [,] [", Lo, Cal6"] [,] ["lo, Cal7"] [}] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<=] [7] [;] [I] [++] [)] [{] [Assert, Equals] [(] [(] [16] [+] [I] [)] [<] [<] [3] [,] [Syslog, Appender] [.] [Get, Facility] [(] [Names] [[] [I] []] [)] [)] [;] [}] [Assert, Equals] [(] [(] [16] [+] [I] [)] [<] [<] [3] [,] [Syslog, Appender] [.] [Get, Facility] [(] [Names] [[] [I] []] [)] [)] [;] [Test, Set, Facility, Printing] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Assert, False] [(] [Appender] [.] [Get, Facility, Printing] [(] [)] [)] [;] [Appender] [.] [Set, Facility, Printing] [(] [True] [)] [;] [Assert, True] [(] [Appender] [.] [Get, Facility, Printing] [(] [)] [)] [;] [Appender] [.] [Set, Facility, Printing] [(] [False] [)] [;] [Assert, False] [(] [Appender] [.] [Get, Facility, Printing] [(] [)] [)] [;] [Test, Constants] [Assert, Equals] [(] [0] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Kern] [)] [;] [Assert, Equals] [(] [1] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, User] [)] [;] [Assert, Equals] [(] [2] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Mail] [)] [;] [Assert, Equals] [(] [3] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Daemon] [)] [;] [Assert, Equals] [(] [4] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Auth] [)] [;] [Assert, Equals] [(] [5] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Syslog] [)] [;] [Assert, Equals] [(] [6] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Lpr] [)] [;] [Assert, Equals] [(] [7] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, News] [)] [;] [Assert, Equals] [(] [8] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Uucp] [)] [;] [Assert, Equals] [(] [9] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Cron] [)] [;] [Assert, Equals] [(] [10] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Authpriv] [)] [;] [Assert, Equals] [(] [11] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Ftp] [)] [;] [Assert, Equals] [(] [16] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Local0] [)] [;] [Assert, Equals] [(] [17] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Local1] [)] [;] [Assert, Equals] [(] [18] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Local2] [)] [;] [Assert, Equals] [(] [19] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Local3] [)] [;] [Assert, Equals] [(] [20] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Local4] [)] [;] [Assert, Equals] [(] [21] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Local5] [)] [;] [Assert, Equals] [(] [22] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Local6] [)] [;] [Assert, Equals] [(] [23] [<] [<] [3] [,] [Syslog, Appender] [.] [Log, Local7] [)] [;] [Test, Set, Facility, Kern] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Facility] [(] ["kern"] [)] [;] [Appender] [.] [Set, Facility] [(] [Null] [)] [;] [Assert, Equals] [(] ["kern"] [,] [Appender] [.] [Get, Facility] [(] [)] [)] [;] [Test, Set, Facility, Null] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Facility] [(] ["kern"] [)] [;] [Appender] [.] [Set, Facility] [(] [Null] [)] [;] [Assert, Equals] [(] ["kern"] [,] [Appender] [.] [Get, Facility] [(] [)] [)] [;] [Test, Set, Facility, Bogus] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Facility] [(] ["kern"] [)] [;] [Appender] [.] [Set, Facility] [(] ["bogus"] [)] [;] [Assert, Equals] [(] ["user"] [,] [Appender] [.] [Get, Facility] [(] [)] [)] [;] [Test, Set, Facility, After, Activation] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Name] [(] ["foo"] [)] [;] [Appender] [.] [Set, Threshold] [(] [Level] [.] [Info] [)] [;] [Appender] [.] [Set, Syslog, Host] [(] ["localhost"] [)] [;] [Appender] [.] [Set, Facility] [(] ["user"] [)] [;] [Appender] [.] [Set, Layout] [(] [New] [Pattern, Layout] [(] ["%m%n"] [)] [)] [;] [Vector, Error, Handler] [Error, Handler] [=] [New] [Vector, Error, Handler] [(] [)] [;] [Appender] [.] [Set, Error, Handler] [(] [Error, Handler] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Appender] [.] [Set, Facility] [(] ["kern"] [)] [;] [Assert, Equals] [(] ["kern"] [,] [Appender] [.] [Get, Facility] [(] [)] [)] [;] [Test, Append, Below, Threshold] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Threshold] [(] [Level] [.] [Error] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logger] [.] [Add, Appender] [(] [Appender] [)] [;] [Logger] [.] [Info] [(] [", Should not be logged by , Syslog, Appender, Test.test, Append, Below, Threshold."] [)] [;] [Test, Append, No, Host] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Name] [(] ["foo"] [)] [;] [Appender] [.] [Set, Threshold] [(] [Level] [.] [Info] [)] [;] [Vector, Error, Handler] [Error, Handler] [=] [New] [Vector, Error, Handler] [(] [)] [;] [Appender] [.] [Set, Error, Handler] [(] [Error, Handler] [)] [;] [Appender] [.] [Set, Layout] [(] [New] [Pattern, Layout] [(] ["%m%n"] [)] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logger] [.] [Add, Appender] [(] [Appender] [)] [;] [Logger] [.] [Info] [(] [", Should not be logged by , Syslog, Appender, Test.test, Append, No, Host."] [)] [;] [Assert, Equals] [(] [1] [,] [Error, Handler] [.] [Size] [(] [)] [)] [;] [Assert, Equals] [(] [", No syslog host is set for , Syslog, Appedender named \"foo\"."] [,] [Error, Handler] [.] [Get, Message] [(] [0] [)] [)] [;] [Test, Append] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Name] [(] ["foo"] [)] [;] [Appender] [.] [Set, Threshold] [(] [Level] [.] [Info] [)] [;] [Appender] [.] [Set, Syslog, Host] [(] ["localhost"] [)] [;] [Appender] [.] [Set, Facility] [(] ["user"] [)] [;] [Appender] [.] [Set, Layout] [(] [New] [Pattern, Layout] [(] ["%m%n"] [)] [)] [;] [Vector, Error, Handler] [Error, Handler] [=] [New] [Vector, Error, Handler] [(] [)] [;] [Appender] [.] [Set, Error, Handler] [(] [Error, Handler] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Async, Appender] [Async, Appender] [=] [New] [Async, Appender] [(] [)] [;] [Async, Appender] [.] [Add, Appender] [(] [Appender] [)] [;] [Async, Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logger] [.] [Add, Appender] [(] [Async, Appender] [)] [;] [Exception] [E] [=] [New] [Exception] [(] [", Expected exception from , Syslog, Appender, Test.test, Append"] [)] [;] [Logger] [.] [Info] [(] [", Expected message from log4j unit test , Syslog, Appender, Test.test, Append."] [,] [E] [)] [;] [Assert, Equals] [(] [0] [,] [Error, Handler] [.] [Size] [(] [)] [)] [;] [Test, I, Pv6] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Syslog, Host] [(] ["::1"] [)] [;] [Test, I, Pv6, In, Brackets] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Syslog, Host] [(] ["[::1]"] [)] [;] [Test, I, Pv6, And, Port] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Syslog, Host] [(] ["[::1]:1514"] [)] [;] [Test, Host, Name, And, Port] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Syslog, Host] [(] ["localhost:1514"] [)] [;] [Test, I, Pv4, And, Port] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Syslog, Host] [(] ["127.0.0.1:1514"] [)] [;] [Log] [Datagram, Socket] [Ds] [=] [New] [Datagram, Socket] [(] [)] [;] [Ds] [.] [Set, So, Timeout] [(] [2000] [)] [;] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Syslog, Host] [(] ["localhost:"] [+] [Ds] [.] [Get, Local, Port] [(] [)] [)] [;] [Appender] [.] [Set, Name] [(] ["name"] [)] [;] [Appender] [.] [Set, Header] [(] [Header] [)] [;] [Pattern, Layout] [Pl] [=] [New] [Pattern, Layout] [(] ["%m"] [)] [;] [Appender] [.] [Set, Layout] [(] [Pl] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [L] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [L] [.] [Add, Appender] [(] [Appender] [)] [;] [If] [(] [Ex] [==] [Null] [)] [{] [L] [.] [Info] [(] [Msg] [)] [;] [}] [Else] [{] [L] [.] [Error] [(] [Msg] [,] [Ex] [)] [;] [}] [L] [.] [Info] [(] [Msg] [)] [;] [L] [.] [Error] [(] [Msg] [,] [Ex] [)] [;] [Appender] [.] [Close] [(] [)] [;] [String] [[] []] [Retval] [=] [New] [String] [[] [Packets] []] [;] [Byte] [[] []] [Buf] [=] [New] [Byte] [[] [1000] []] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Packets] [;] [I] [++] [)] [{] [Datagram, Packet] [P] [=] [New] [Datagram, Packet] [(] [Buf] [,] [0] [,] [Buf] [.] [Length] [)] [;] [Ds] [.] [Receive] [(] [P] [)] [;] [Retval] [[] [I] []] [=] [New] [String] [(] [P] [.] [Get, Data] [(] [)] [,] [0] [,] [P] [.] [Get, Length] [(] [)] [)] [;] [}] [Datagram, Packet] [P] [=] [New] [Datagram, Packet] [(] [Buf] [,] [0] [,] [Buf] [.] [Length] [)] [;] [Ds] [.] [Receive] [(] [P] [)] [;] [Retval] [[] [I] []] [=] [New] [String] [(] [P] [.] [Get, Data] [(] [)] [,] [0] [,] [P] [.] [Get, Length] [(] [)] [)] [;] [Ds] [.] [Close] [(] [)] [;] [Return] [Retval] [;] [Test, Actual, Logging] [String] [S] [=] [Log] [(] [False] [,] ["greetings"] [,] [Null] [,] [1] [)] [[] [0] []] [;] [String, Tokenizer] [St] [=] [New] [String, Tokenizer] [(] [S] [,] ["<>() "] [)] [;] [Assert, Equals] [(] ["14"] [,] [St] [.] [Next, Token] [(] [)] [)] [;] [Assert, Equals] [(] ["greetings"] [,] [St] [.] [Next, Token] [(] [)] [)] [;]
Class MishandledException@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Print, Stack, Trace] [W] [.] [Println] [(] [", Mishandled stack trace follows:"] [)] [;] [W] [.] [Println] [(] [""] [)] [;] [W] [.] [Println] [(] [", No tab here"] [)] [;] [W] [.] [Println] [(] ["\ttab here"] [)] [;] [W] [.] [Println] [(] ["\t"] [)] [;] [Test, Bad, Tabbing] [String] [[] []] [S] [=] [Log] [(] [False] [,] ["greetings"] [,] [New] [Mishandled, Exception] [(] [)] [,] [6] [)] [;] [String, Tokenizer] [St] [=] [New] [String, Tokenizer] [(] [S] [[] [0] []] [,] ["<>() "] [)] [;] [Assert, Equals] [(] ["11"] [,] [St] [.] [Next, Token] [(] [)] [)] [;] [Assert, Equals] [(] ["greetings"] [,] [St] [.] [Next, Token] [(] [)] [)] [;] [Assert, Equals] [(] ["<11>, Mishandled stack trace follows:"] [,] [S] [[] [1] []] [)] [;] [Assert, Equals] [(] ["<11>"] [,] [S] [[] [2] []] [)] [;] [Assert, Equals] [(] ["<11>, No tab here"] [,] [S] [[] [3] []] [)] [;] [Assert, Equals] [(] ["<11>"] [+] [Syslog, Appender] [.] [Tab] [+] ["tab here"] [,] [S] [[] [4] []] [)] [;] [Assert, Equals] [(] ["<11>"] [+] [Syslog, Appender] [.] [Tab] [,] [S] [[] [5] []] [)] [;] [Test, Header, Logging] [Date] [Pre, Date] [=] [New] [Date] [(] [)] [;] [String] [S] [=] [Log] [(] [True] [,] ["greetings"] [,] [Null] [,] [1] [)] [[] [0] []] [;] [Date] [Post, Date] [=] [New] [Date] [(] [)] [;] [Assert, Equals] [(] ["<14>"] [,] [S] [.] [Substring] [(] [0] [,] [4] [)] [)] [;] [String] [Syslog, Date, Str] [=] [S] [.] [Substring] [(] [4] [,] [20] [)] [;] [Simple, Date, Format] [Fmt] [=] [New] [Simple, Date, Format] [(] [", Mmm dd , Hh:mm:ss "] [,] [Locale] [.] [English] [)] [;] [Date] [Syslog, Date] [=] [Fmt] [.] [Parse] [(] [Syslog, Date, Str] [)] [;] [Calendar] [Cal] [=] [Calendar] [.] [Get, Instance] [(] [Locale] [.] [English] [)] [;] [Cal] [.] [Set, Time] [(] [Syslog, Date] [)] [;] [Int] [Syslog, Month] [=] [Cal] [.] [Get] [(] [Calendar] [.] [Month] [)] [;] [Int] [Syslog, Day] [=] [Cal] [.] [Get] [(] [Calendar] [.] [Date] [)] [;] [If] [(] [Syslog, Day] [<] [10] [)] [{] [Assert, Equals] [(] [' '] [,] [Syslog, Date, Str] [.] [Char, At] [(] [4] [)] [)] [;] [}] [Assert, Equals] [(] [' '] [,] [Syslog, Date, Str] [.] [Char, At] [(] [4] [)] [)] [;] [Cal] [.] [Set, Time] [(] [Pre, Date] [)] [;] [Int] [Pre, Month] [=] [Cal] [.] [Get] [(] [Calendar] [.] [Month] [)] [;] [Cal] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [0] [)] [;] [Pre, Date] [=] [Cal] [.] [Get, Time] [(] [)] [;] [Int] [Syslog, Year] [;] [If] [(] [Pre, Month] [==] [Syslog, Month] [)] [{] [Syslog, Year] [=] [Cal] [.] [Get] [(] [Calendar] [.] [Year] [)] [;] [}] [Else] [{] [Cal] [.] [Set, Time] [(] [Post, Date] [)] [;] [Syslog, Year] [=] [Cal] [.] [Get] [(] [Calendar] [.] [Year] [)] [;] [}] [Syslog, Year] [=] [Cal] [.] [Get] [(] [Calendar] [.] [Year] [)] [;] [Cal] [.] [Set, Time] [(] [Post, Date] [)] [;] [Syslog, Year] [=] [Cal] [.] [Get] [(] [Calendar] [.] [Year] [)] [;] [Cal] [.] [Set, Time] [(] [Syslog, Date] [)] [;] [Cal] [.] [Set] [(] [Calendar] [.] [Year] [,] [Syslog, Year] [)] [;] [Syslog, Date] [=] [Cal] [.] [Get, Time] [(] [)] [;] [Assert, True] [(] [Syslog, Date] [.] [Compare, To] [(] [Pre, Date] [)] [>=] [0] [)] [;] [Assert, True] [(] [Syslog, Date] [.] [Compare, To] [(] [Post, Date] [)] [<=] [0] [)] [;] [Test, Layout, Header] [Datagram, Socket] [Ds] [=] [New] [Datagram, Socket] [(] [)] [;] [Ds] [.] [Set, So, Timeout] [(] [2000] [)] [;] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Syslog, Host] [(] ["localhost:"] [+] [Ds] [.] [Get, Local, Port] [(] [)] [)] [;] [Appender] [.] [Set, Name] [(] ["name"] [)] [;] [Appender] [.] [Set, Header] [(] [False] [)] [;] [Html, Layout] [Pl] [=] [New] [Html, Layout] [(] [)] [;] [Appender] [.] [Set, Layout] [(] [Pl] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [L] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [L] [.] [Add, Appender] [(] [Appender] [)] [;] [L] [.] [Info] [(] [", Hello, , World"] [)] [;] [Appender] [.] [Close] [(] [)] [;] [String] [[] []] [S] [=] [New] [String] [[] [3] []] [;] [Byte] [[] []] [Buf] [=] [New] [Byte] [[] [1000] []] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [3] [;] [I] [++] [)] [{] [Datagram, Packet] [P] [=] [New] [Datagram, Packet] [(] [Buf] [,] [0] [,] [Buf] [.] [Length] [)] [;] [Ds] [.] [Receive] [(] [P] [)] [;] [S] [[] [I] []] [=] [New] [String] [(] [P] [.] [Get, Data] [(] [)] [,] [0] [,] [P] [.] [Get, Length] [(] [)] [)] [;] [}] [Datagram, Packet] [P] [=] [New] [Datagram, Packet] [(] [Buf] [,] [0] [,] [Buf] [.] [Length] [)] [;] [Ds] [.] [Receive] [(] [P] [)] [;] [S] [[] [I] []] [=] [New] [String] [(] [P] [.] [Get, Data] [(] [)] [,] [0] [,] [P] [.] [Get, Length] [(] [)] [)] [;] [Ds] [.] [Close] [(] [)] [;] [Assert, Equals] [(] ["<14><!, Doctype"] [,] [S] [[] [0] []] [.] [Substring] [(] [0] [,] [13] [)] [)] [;] [Assert, Equals] [(] ["<14></table>"] [,] [S] [[] [2] []] [.] [Substring] [(] [0] [,] [12] [)] [)] [;] [Test, Big, Packets] [Datagram, Socket] [Ds] [=] [New] [Datagram, Socket] [(] [)] [;] [Ds] [.] [Set, So, Timeout] [(] [2000] [)] [;] [Syslog, Appender] [Appender] [=] [New] [Syslog, Appender] [(] [)] [;] [Appender] [.] [Set, Syslog, Host] [(] ["localhost:"] [+] [Ds] [.] [Get, Local, Port] [(] [)] [)] [;] [Appender] [.] [Set, Name] [(] ["name"] [)] [;] [Appender] [.] [Set, Header] [(] [False] [)] [;] [Pattern, Layout] [Pl] [=] [New] [Pattern, Layout] [(] ["%m"] [)] [;] [Appender] [.] [Set, Layout] [(] [Pl] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [L] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [L] [.] [Add, Appender] [(] [Appender] [)] [;] [String, Buffer] [Msgbuf] [=] [New] [String, Buffer] [(] [)] [;] [While] [(] [Msgbuf] [.] [Length] [(] [)] [<] [8000] [)] [{] [Msgbuf] [.] [Append] [(] ["0123456789"] [)] [;] [}] [Msgbuf] [.] [Append] [(] ["0123456789"] [)] [;] [String] [Msg] [=] [Msgbuf] [.] [To, String] [(] [)] [;] [L] [.] [Info] [(] [Msg] [)] [;] [Appender] [.] [Close] [(] [)] [;] [String] [[] []] [S] [=] [New] [String] [[] [8] []] [;] [Byte] [[] []] [Buf] [=] [New] [Byte] [[] [1200] []] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [8] [;] [I] [++] [)] [{] [Datagram, Packet] [P] [=] [New] [Datagram, Packet] [(] [Buf] [,] [0] [,] [Buf] [.] [Length] [)] [;] [Ds] [.] [Receive] [(] [P] [)] [;] [Assert, True] [(] [P] [.] [Get, Length] [(] [)] [<=] [1024] [)] [;] [S] [[] [I] []] [=] [New] [String] [(] [P] [.] [Get, Data] [(] [)] [,] [0] [,] [P] [.] [Get, Length] [(] [)] [)] [;] [}] [Datagram, Packet] [P] [=] [New] [Datagram, Packet] [(] [Buf] [,] [0] [,] [Buf] [.] [Length] [)] [;] [Ds] [.] [Receive] [(] [P] [)] [;] [Assert, True] [(] [P] [.] [Get, Length] [(] [)] [<=] [1024] [)] [;] [S] [[] [I] []] [=] [New] [String] [(] [P] [.] [Get, Data] [(] [)] [,] [0] [,] [P] [.] [Get, Length] [(] [)] [)] [;] [Ds] [.] [Close] [(] [)] [;] [String, Buffer] [Rcvbuf] [=] [New] [String, Buffer] [(] [S] [[] [0] []] [)] [;] [Rcvbuf] [.] [Delete] [(] [0] [,] [4] [)] [;] [For] [(] [Int] [I] [=] [1] [;] [I] [<] [8] [;] [I] [++] [)] [{] [Rcvbuf] [.] [Set, Length] [(] [Rcvbuf] [.] [Length] [(] [)] [-] [3] [)] [;] [Rcvbuf] [.] [Append] [(] [S] [[] [I] []] [.] [Substring] [(] [S] [[] [I] []] [.] [Index, Of] [(] ["..."] [)] [+] [3] [)] [)] [;] [}] [Rcvbuf] [.] [Set, Length] [(] [Rcvbuf] [.] [Length] [(] [)] [-] [3] [)] [;] [Rcvbuf] [.] [Append] [(] [S] [[] [I] []] [.] [Substring] [(] [S] [[] [I] []] [.] [Index, Of] [(] ["..."] [)] [+] [3] [)] [)] [;] [Assert, Equals] [(] [Msg] [.] [Length] [(] [)] [,] [Rcvbuf] [.] [Length] [(] [)] [)] [;] [Assert, Equals] [(] [Msg] [,] [Rcvbuf] [.] [To, String] [(] [)] [)] [;]
Class TelnetAppenderTest@@ [Int] [Port=54353] [;] [Byte, Array, Output, Stream] [Bo=new, Byte, Array, Output, Stream()] [;]
Class ReadThread@@ [Run] [Try] [{] [Socket] [S] [=] [New] [Socket] [(] ["localhost"] [,] [Port] [)] [;] [Input, Stream] [I] [=] [S] [.] [Get, Input, Stream] [(] [)] [;] [While] [(] [!] [Thread] [.] [Interrupted] [(] [)] [)] [{] [Int] [C] [=] [I] [.] [Read] [(] [)] [;] [If] [(] [C] [==] [-] [1] [)] [Break] [;] [Bo] [.] [Write] [(] [C] [)] [;] [}] [S] [.] [Close] [(] [)] [;] [}] [Catch] [(] [Io, Exception] [E] [)] [{] [E] [.] [Print, Stack, Trace] [(] [)] [;] [}] [Socket] [S] [=] [New] [Socket] [(] ["localhost"] [,] [Port] [)] [;] [Input, Stream] [I] [=] [S] [.] [Get, Input, Stream] [(] [)] [;] [While] [(] [!] [Thread] [.] [Interrupted] [(] [)] [)] [{] [Int] [C] [=] [I] [.] [Read] [(] [)] [;] [If] [(] [C] [==] [-] [1] [)] [Break] [;] [Bo] [.] [Write] [(] [C] [)] [;] [}] [Int] [C] [=] [I] [.] [Read] [(] [)] [;] [If] [(] [C] [==] [-] [1] [)] [Break] [;] [Bo] [.] [Write] [(] [C] [)] [;] [S] [.] [Close] [(] [)] [;] [E] [.] [Print, Stack, Trace] [(] [)] [;] [Test, It] [Int] [Old, Active] [=] [Thread] [.] [Active, Count] [(] [)] [;] [Telnet, Appender] [Ta] [=] [New] [Telnet, Appender] [(] [)] [;] [Ta] [.] [Set, Name] [(] ["ta"] [)] [;] [Ta] [.] [Set, Port] [(] [Port] [)] [;] [Ta] [.] [Set, Layout] [(] [New] [Pattern, Layout] [(] ["%p - %m"] [)] [)] [;] [Ta] [.] [Activate, Options] [(] [)] [;] [Logger] [L] [=] [Logger] [.] [Get, Logger] [(] ["x"] [)] [;] [L] [.] [Add, Appender] [(] [Ta] [)] [;] [Thread] [T] [=] [New] [Read, Thread] [(] [)] [;] [T] [.] [Start] [(] [)] [;] [Thread] [.] [Sleep] [(] [200] [)] [;] [L] [.] [Info] [(] ["hi"] [)] [;] [Thread] [.] [Sleep] [(] [1000] [)] [;] [Ta] [.] [Close] [(] [)] [;] [Thread] [.] [Sleep] [(] [200] [)] [;] [T] [.] [Interrupt] [(] [)] [;] [T] [.] [Join] [(] [)] [;] [String] [S] [=] [Bo] [.] [To, String] [(] [)] [;] [Assert, True] [(] [S] [.] [Ends, With] [(] [", Info - hi"] [)] [)] [;] [If] [(] [System] [.] [Get, Property] [(] ["java.vendor"] [)] [.] [Index, Of] [(] [", Free"] [)] [==] [-] [1] [)] [{] [Assert, Equals] [(] [Old, Active] [,] [Thread] [.] [Active, Count] [(] [)] [)] [;] [}] [Assert, Equals] [(] [Old, Active] [,] [Thread] [.] [Active, Count] [(] [)] [)] [;]
Class NTEventLogAppenderTest@@ [Tear, Down] [Log, Manager] [.] [Shutdown] [(] [)] [;] [Test, Simple] [Basic, Configurator] [.] [Configure] [(] [New] [Nt, Event, Log, Appender] [(] [)] [)] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.nt., Nt, Event, Log, Appender, Test"] [)] [;] [Int] [I] [=] [0] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [I] [++] [)] [;] [Logger] [.] [Info] [(] [", Message "] [+] [I] [++] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [I] [++] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [I] [++] [)] [;] [Logger] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [++] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [I] [++] [,] [New] [Exception] [(] [", Just testing."] [)] [)] [;]
Class ORTestCase@@ [Static] [Ut, Object, Renderer] [Aor] [;] [Static] [Ut, Object, Renderer] [Bor] [;] [Static] [Ut, Object, Renderer] [Xor] [;] [Static] [Ut, Object, Renderer] [Yor] [;] [Static] [Ut, Object, Renderer] [Oor] [;] [Static] [Ut, Object, Renderer] [Nor] [;] [Static] [Ut, Object, Renderer] [Ior] [;] [Static] [Ut, Object, Renderer] [Cor] [;] [Static] [Ut, Object, Renderer] [Sor] [;] [Set, Up] [Aor] [=] [New] [Ut, Object, Renderer] [(] [", A"] [)] [;] [Bor] [=] [New] [Ut, Object, Renderer] [(] [", B"] [)] [;] [Xor] [=] [New] [Ut, Object, Renderer] [(] [", X"] [)] [;] [Yor] [=] [New] [Ut, Object, Renderer] [(] [", Y"] [)] [;] [Oor] [=] [New] [Ut, Object, Renderer] [(] [", Object"] [)] [;] [Nor] [=] [New] [Ut, Object, Renderer] [(] [", Number"] [)] [;] [Ior] [=] [New] [Ut, Object, Renderer] [(] [", Integer"] [)] [;] [Cor] [=] [New] [Ut, Object, Renderer] [(] [", Comparable"] [)] [;] [Sor] [=] [New] [Ut, Object, Renderer] [(] [", Serializable"] [)] [;] [Test1] [Renderer, Map] [Map] [=] [New] [Renderer, Map] [(] [)] [;] [Object, Renderer] [Dr] [=] [Map] [.] [Get, Default, Renderer] [(] [)] [;] [Object, Renderer] [R] [=] [Map] [.] [Get] [(] [Integer] [.] [Class] [)] [;] [Assert, Equals] [(] [R] [,] [Dr] [)] [;] [Test2] [Renderer, Map] [Map] [=] [New] [Renderer, Map] [(] [)] [;] [Map] [.] [Put] [(] [Integer] [.] [Class] [,] [Ior] [)] [;] [Object, Renderer] [R] [=] [Map] [.] [Get] [(] [Integer] [.] [Class] [)] [;] [Assert, Equals] [(] [R] [,] [Ior] [)] [;] [Test3] [Renderer, Map] [Map] [=] [New] [Renderer, Map] [(] [)] [;] [Map] [.] [Put] [(] [Number] [.] [Class] [,] [Ior] [)] [;] [Object, Renderer] [R] [=] [Map] [.] [Get] [(] [Integer] [.] [Class] [)] [;] [Assert, Equals] [(] [R] [,] [Ior] [)] [;] [Test4] [Renderer, Map] [Map] [=] [New] [Renderer, Map] [(] [)] [;] [Map] [.] [Put] [(] [Object] [.] [Class] [,] [Oor] [)] [;] [Object, Renderer] [R] [=] [Map] [.] [Get] [(] [Integer] [.] [Class] [)] [;] [Assert, Equals] [(] [R] [,] [Oor] [)] [;] [Test5] [Renderer, Map] [Map] [=] [New] [Renderer, Map] [(] [)] [;] [Map] [.] [Put] [(] [Object] [.] [Class] [,] [Oor] [)] [;] [Map] [.] [Put] [(] [Number] [.] [Class] [,] [Nor] [)] [;] [Map] [.] [Put] [(] [Integer] [.] [Class] [,] [Ior] [)] [;] [Object, Renderer] [R] [=] [Map] [.] [Get] [(] [Integer] [.] [Class] [)] [;] [Assert, Equals] [(] [R] [,] [Ior] [)] [;] [Test6] [Renderer, Map] [Map] [=] [New] [Renderer, Map] [(] [)] [;] [Map] [.] [Put] [(] [Object] [.] [Class] [,] [Oor] [)] [;] [Map] [.] [Put] [(] [Number] [.] [Class] [,] [Nor] [)] [;] [Object, Renderer] [R] [=] [Map] [.] [Get] [(] [Integer] [.] [Class] [)] [;] [Assert, Equals] [(] [R] [,] [Nor] [)] [;] [Test7] [Renderer, Map] [Map] [=] [New] [Renderer, Map] [(] [)] [;] [Class] [Comparable] [=] [Null] [;] [Try] [{] [Comparable] [=] [Class] [.] [For, Name] [(] ["java.lang., Comparable"] [)] [;] [}] [Catch] [(] [Exception] [Ex] [)] [{] [Return] [;] [}] [Comparable] [=] [Class] [.] [For, Name] [(] ["java.lang., Comparable"] [)] [;] [Return] [;] [Map] [.] [Put] [(] [Comparable] [,] [Cor] [)] [;] [Object, Renderer] [R] [=] [Map] [.] [Get] [(] [Integer] [.] [Class] [)] [;] [Assert, Equals] [(] [R] [,] [Cor] [)] [;] [Test8] [Renderer, Map] [Map] [=] [New] [Renderer, Map] [(] [)] [;] [Map] [.] [Put] [(] [Serializable] [.] [Class] [,] [Sor] [)] [;] [Object, Renderer] [R] [=] [Map] [.] [Get] [(] [Integer] [.] [Class] [)] [;] [Assert, Equals] [(] [R] [,] [Sor] [)] [;] [Test9] [Renderer, Map] [Map] [=] [New] [Renderer, Map] [(] [)] [;] [Map] [.] [Put] [(] [Y] [.] [Class] [,] [Yor] [)] [;] [Object, Renderer] [R] [=] [Map] [.] [Get] [(] [B] [.] [Class] [)] [;] [Assert, Equals] [(] [R] [,] [Yor] [)] [;] [Test10] [Renderer, Map] [Map] [=] [New] [Renderer, Map] [(] [)] [;] [Map] [.] [Put] [(] [X] [.] [Class] [,] [Xor] [)] [;] [Object, Renderer] [R] [=] [Map] [.] [Get] [(] [B] [.] [Class] [)] [;] [Assert, Equals] [(] [R] [,] [Xor] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Or, Test, Case] [(] ["test1"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Or, Test, Case] [(] ["test2"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Or, Test, Case] [(] ["test3"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Or, Test, Case] [(] ["test4"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Or, Test, Case] [(] ["test5"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Or, Test, Case] [(] ["test6"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Or, Test, Case] [(] ["test7"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Or, Test, Case] [(] ["test8"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Or, Test, Case] [(] ["test9"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Or, Test, Case] [(] ["test10"] [)] [)] [;] [Return] [Suite] [;]
Class UTObjectRenderer@@ [String] [Name] [;] [This] [.] [Name] [=] [Name] [;] [Do, Render] [Return] [Name] [;] [To, String] [Return] [(] [", Ut, Object, Renderer: "] [+] [Name] [)] [;]
Class A@@
Class B@@
Class CachedDateFormatTest@@ [Create, Absolute, Time, Date, Format] [Date, Format] [Df] [=] [New] [Simple, Date, Format] [(] [", Hh:mm:ss,, Sss"] [)] [;] [Df] [.] [Set, Time, Zone] [(] [Time, Zone] [)] [;] [Return] [Df] [;] [Private] [Static] [Final] [Time, Zone] [Gmt=, Time, Zone.get, Time, Zone(", Gmt")] [;] [Private] [Static] [Final] [Time, Zone] [Chicago=, Time, Zone.get, Time, Zone(", America/, Chicago")] [;] [Test1] [Date, Format] [Gmt, Format] [=] [New] [Cached, Date, Format] [(] [Create, Absolute, Time, Date, Format] [(] [Gmt] [)] [,] [1000] [)] [;] [Long] [Ticks] [=] [12601, L] [*] [86400000, L] [;] [Date] [Jul1] [=] [New] [Date] [(] [Ticks] [)] [;] [Assert, Equals] [(] ["00:00:00,000"] [,] [Gmt, Format] [.] [Format] [(] [Jul1] [)] [)] [;] [Date] [Plus8ms] [=] [New] [Date] [(] [Ticks] [+] [8] [)] [;] [Assert, Equals] [(] ["00:00:00,008"] [,] [Gmt, Format] [.] [Format] [(] [Plus8ms] [)] [)] [;] [Date] [Plus17ms] [=] [New] [Date] [(] [Ticks] [+] [17] [)] [;] [Assert, Equals] [(] ["00:00:00,017"] [,] [Gmt, Format] [.] [Format] [(] [Plus17ms] [)] [)] [;] [Date] [Plus237ms] [=] [New] [Date] [(] [Ticks] [+] [237] [)] [;] [Assert, Equals] [(] ["00:00:00,237"] [,] [Gmt, Format] [.] [Format] [(] [Plus237ms] [)] [)] [;] [Date] [Plus1415ms] [=] [New] [Date] [(] [Ticks] [+] [1415] [)] [;] [Assert, Equals] [(] ["00:00:01,415"] [,] [Gmt, Format] [.] [Format] [(] [Plus1415ms] [)] [)] [;] [Test2] [Date] [Jul2] [=] [New] [Date] [(] [12602, L] [*] [86400000, L] [)] [;] [Date, Format] [Gmt, Format] [=] [New] [Cached, Date, Format] [(] [Create, Absolute, Time, Date, Format] [(] [Gmt] [)] [,] [1000] [)] [;] [Date, Format] [Chicago, Format] [=] [New] [Cached, Date, Format] [(] [Create, Absolute, Time, Date, Format] [(] [Chicago] [)] [,] [1000] [)] [;] [Assert, Equals] [(] ["00:00:00,000"] [,] [Gmt, Format] [.] [Format] [(] [Jul2] [)] [)] [;] [Assert, Equals] [(] ["19:00:00,000"] [,] [Chicago, Format] [.] [Format] [(] [Jul2] [)] [)] [;] [Assert, Equals] [(] ["00:00:00,000"] [,] [Gmt, Format] [.] [Format] [(] [Jul2] [)] [)] [;] [Test3] [Date, Format] [Gmt, Format] [=] [New] [Cached, Date, Format] [(] [Create, Absolute, Time, Date, Format] [(] [Gmt] [)] [,] [1000] [)] [;] [Long] [Ticks] [=] [-] [7, L] [*] [86400000, L] [;] [Date] [Jul1] [=] [New] [Date] [(] [Ticks] [+] [8] [)] [;] [Assert, Equals] [(] ["00:00:00,008"] [,] [Gmt, Format] [.] [Format] [(] [Jul1] [)] [)] [;] [Date] [Plus8ms] [=] [New] [Date] [(] [Ticks] [+] [16] [)] [;] [Assert, Equals] [(] ["00:00:00,016"] [,] [Gmt, Format] [.] [Format] [(] [Plus8ms] [)] [)] [;] [Date] [Plus17ms] [=] [New] [Date] [(] [Ticks] [+] [23] [)] [;] [Assert, Equals] [(] ["00:00:00,023"] [,] [Gmt, Format] [.] [Format] [(] [Plus17ms] [)] [)] [;] [Date] [Plus237ms] [=] [New] [Date] [(] [Ticks] [+] [245] [)] [;] [Assert, Equals] [(] ["00:00:00,245"] [,] [Gmt, Format] [.] [Format] [(] [Plus237ms] [)] [)] [;] [Date] [Plus1415ms] [=] [New] [Date] [(] [Ticks] [+] [1423] [)] [;] [Assert, Equals] [(] ["00:00:01,423"] [,] [Gmt, Format] [.] [Format] [(] [Plus1415ms] [)] [)] [;] [Test4] [Simple, Date, Format] [Base, Format] [=] [New] [Simple, Date, Format] [(] [", Eee, , Mmm dd, , Hh:mm:ss., Sss z"] [,] [Locale] [.] [English] [)] [;] [Date, Format] [Cached, Format] [=] [New] [Cached, Date, Format] [(] [Base, Format] [,] [1000] [)] [;] [Long] [Ticks] [=] [11141, L] [*] [86400000, L] [;] [Date] [Jul1] [=] [New] [Date] [(] [Ticks] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Jul1] [)] [,] [Cached, Format] [.] [Format] [(] [Jul1] [)] [)] [;] [Date] [Plus8ms] [=] [New] [Date] [(] [Ticks] [+] [8] [)] [;] [Base, Format] [.] [Format] [(] [Plus8ms] [)] [;] [Cached, Format] [.] [Format] [(] [Plus8ms] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Plus8ms] [)] [,] [Cached, Format] [.] [Format] [(] [Plus8ms] [)] [)] [;] [Date] [Plus17ms] [=] [New] [Date] [(] [Ticks] [+] [17] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Plus17ms] [)] [,] [Cached, Format] [.] [Format] [(] [Plus17ms] [)] [)] [;] [Date] [Plus237ms] [=] [New] [Date] [(] [Ticks] [+] [237] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Plus237ms] [)] [,] [Cached, Format] [.] [Format] [(] [Plus237ms] [)] [)] [;] [Date] [Plus1415ms] [=] [New] [Date] [(] [Ticks] [+] [1415] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Plus1415ms] [)] [,] [Cached, Format] [.] [Format] [(] [Plus1415ms] [)] [)] [;] [Test5] [Locale] [Thai] [=] [New] [Locale] [(] ["th"] [,] [", Th"] [)] [;] [Simple, Date, Format] [Base, Format] [=] [New] [Simple, Date, Format] [(] [", Eee, , Mmm dd, , Hh:mm:ss., Sss z"] [,] [Thai] [)] [;] [Date, Format] [Cached, Format] [=] [New] [Cached, Date, Format] [(] [Base, Format] [,] [1000] [)] [;] [Long] [Ticks] [=] [11141, L] [*] [86400000, L] [;] [String] [Sx] [;] [Date] [Jul1] [=] [New] [Date] [(] [Ticks] [)] [;] [Sx] [=] [Cached, Format] [.] [Format] [(] [Jul1] [)] [;] [System] [.] [Out] [.] [Println] [(] [Base, Format] [.] [Format] [(] [Jul1] [)] [)] [;] [System] [.] [Out] [.] [Println] [(] [Sx] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Jul1] [)] [,] [Sx] [)] [;] [Sx] [=] [Cached, Format] [.] [Format] [(] [Jul1] [)] [;] [System] [.] [Out] [.] [Println] [(] [Base, Format] [.] [Format] [(] [Jul1] [)] [)] [;] [System] [.] [Out] [.] [Println] [(] [Sx] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Jul1] [)] [,] [Sx] [)] [;] [Date] [Plus8ms] [=] [New] [Date] [(] [Ticks] [+] [8] [)] [;] [Sx] [=] [Cached, Format] [.] [Format] [(] [Plus8ms] [)] [;] [System] [.] [Out] [.] [Println] [(] [Base, Format] [.] [Format] [(] [Plus8ms] [)] [)] [;] [System] [.] [Out] [.] [Println] [(] [Sx] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Plus8ms] [)] [,] [Sx] [)] [;] [Date] [Plus17ms] [=] [New] [Date] [(] [Ticks] [+] [17] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Plus17ms] [)] [,] [Cached, Format] [.] [Format] [(] [Plus17ms] [)] [)] [;] [Date] [Plus237ms] [=] [New] [Date] [(] [Ticks] [+] [237] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Plus237ms] [)] [,] [Cached, Format] [.] [Format] [(] [Plus237ms] [)] [)] [;] [Date] [Plus1415ms] [=] [New] [Date] [(] [Ticks] [+] [1415] [)] [;] [Assert, Equals] [(] [Base, Format] [.] [Format] [(] [Plus1415ms] [)] [,] [Cached, Format] [.] [Format] [(] [Plus1415ms] [)] [)] [;] [Test6] [Assert, Not, Null] [(] [New] [Cached, Date, Format] [(] [New] [Simple, Date, Format] [(] [)] [,] [1000] [)] [.] [Get, Number, Format] [(] [)] [)] [;] [Test8] [Date, Format] [Base, Format] [=] [New] [Simple, Date, Format] [(] ["yyyy-, Mm-dd , Hh:mm:ss,, Sss"] [)] [;] [Base, Format] [.] [Set, Time, Zone] [(] [Gmt] [)] [;] [Date, Format] [Cached, Format] [=] [New] [Cached, Date, Format] [(] [Base, Format] [,] [1000] [)] [;] [Date] [Jul4] [=] [New] [Date] [(] [12603, L] [*] [86400000, L] [)] [;] [Assert, Equals] [(] ["2004-07-04 00:00:00,000"] [,] [Cached, Format] [.] [Format] [(] [Jul4] [)] [)] [;] [Cached, Format] [.] [Set, Time, Zone] [(] [Time, Zone] [.] [Get, Time, Zone] [(] [", Gmt-6"] [)] [)] [;] [Assert, Equals] [(] ["2004-07-03 18:00:00,000"] [,] [Cached, Format] [.] [Format] [(] [Jul4] [)] [)] [;] [Test9] [Date, Format] [Base, Format] [=] [New] [Simple, Date, Format] [(] ["yyyy-, Mmmm-dd , Hh:mm:ss,, Ss z"] [,] [Locale] [.] [Us] [)] [;] [Date, Format] [Cached, Format] [=] [New] [Cached, Date, Format] [(] [Base, Format] [,] [1000] [)] [;] [Time, Zone] [Cet] [=] [Time, Zone] [.] [Get, Time, Zone] [(] [", Gmt+1"] [)] [;] [Cached, Format] [.] [Set, Time, Zone] [(] [Cet] [)] [;] [Calendar] [C] [=] [Calendar] [.] [Get, Instance] [(] [)] [;] [C] [.] [Set] [(] [2004] [,] [Calendar] [.] [December] [,] [12] [,] [20] [,] [0] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [37] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [23] [)] [;] [C] [.] [Set, Time, Zone] [(] [Cet] [)] [;] [String] [Expected] [=] [Base, Format] [.] [Format] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [String] [S] [=] [Cached, Format] [.] [Format] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [Expected] [,] [S] [)] [;] [C] [.] [Set] [(] [2005] [,] [Calendar] [.] [January] [,] [1] [,] [0] [,] [0] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [13] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [905] [)] [;] [Expected] [=] [Base, Format] [.] [Format] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [S] [=] [Cached, Format] [.] [Format] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [Expected] [,] [S] [)] [;] [Test10] [Date, Format] [Base, Format] [=] [New] [Simple, Date, Format] [(] [", Mmmm , Sss , Eeeeee"] [,] [Locale] [.] [Us] [)] [;] [Date, Format] [Cached, Format] [=] [New] [Cached, Date, Format] [(] [Base, Format] [,] [1000] [)] [;] [Time, Zone] [Cet] [=] [Time, Zone] [.] [Get, Time, Zone] [(] [", Gmt+1"] [)] [;] [Cached, Format] [.] [Set, Time, Zone] [(] [Cet] [)] [;] [Calendar] [C] [=] [Calendar] [.] [Get, Instance] [(] [)] [;] [C] [.] [Set] [(] [2004] [,] [Calendar] [.] [October] [,] [5] [,] [20] [,] [0] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Second] [,] [37] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [23] [)] [;] [C] [.] [Set, Time, Zone] [(] [Cet] [)] [;] [String] [Expected] [=] [Base, Format] [.] [Format] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [String] [S] [=] [Cached, Format] [.] [Format] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [Expected] [,] [S] [)] [;] [C] [.] [Set] [(] [2004] [,] [Calendar] [.] [November] [,] [1] [,] [0] [,] [0] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [23] [)] [;] [Expected] [=] [Base, Format] [.] [Format] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [S] [=] [Cached, Format] [.] [Format] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [Expected] [,] [S] [)] [;] [C] [.] [Set] [(] [Calendar] [.] [Millisecond] [,] [984] [)] [;] [Expected] [=] [Base, Format] [.] [Format] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [S] [=] [Cached, Format] [.] [Format] [(] [C] [.] [Get, Time] [(] [)] [)] [;] [Assert, Equals] [(] [Expected] [,] [S] [)] [;] [Test11] [String] [Bad, Pattern] [=] ["ss,, Ss0"] [;] [Simple, Date, Format] [Simple, Format] [=] [New] [Simple, Date, Format] [(] [Bad, Pattern] [)] [;] [Simple, Date, Format] [Base, Format] [=] [New] [Simple, Date, Format] [(] [Bad, Pattern] [)] [;] [Date, Format] [Gmt, Format] [=] [New] [Cached, Date, Format] [(] [Simple, Format] [,] [1000] [)] [;] [Gmt, Format] [.] [Set, Time, Zone] [(] [Gmt] [)] [;] [Base, Format] [.] [Set, Time, Zone] [(] [Gmt] [)] [;] [Long] [Ticks] [=] [11142, L] [*] [86400000, L] [;] [Date] [Jul2] [=] [New] [Date] [(] [Ticks] [+] [120] [)] [;] [String] [Expected] [=] [Base, Format] [.] [Format] [(] [Jul2] [)] [;] [Assert, Equals] [(] [Expected] [,] [Gmt, Format] [.] [Format] [(] [Jul2] [)] [)] [;] [Jul2] [.] [Set, Time] [(] [Ticks] [+] [87] [)] [;] [Expected] [=] [Base, Format] [.] [Format] [(] [Jul2] [)] [;] [Assert, Equals] [(] [Expected] [,] [Gmt, Format] [.] [Format] [(] [Jul2] [)] [)] [;] [Test12] [Simple, Date, Format] [Df] [=] [New] [Simple, Date, Format] [(] ["yyyy-, Mm-dd , Hh:mm:ss,, Sss"] [)] [;] [Long] [Ticks] [=] [11142, L] [*] [86400000, L] [;] [String] [Formatted] [=] [Df] [.] [Format] [(] [New] [Date] [(] [Ticks] [)] [)] [;] [Int] [Millisecond, Start] [=] [Cached, Date, Format] [.] [Find, Millisecond, Start] [(] [Ticks] [,] [Formatted] [,] [Df] [)] [;] [Assert, Equals] [(] [20] [,] [Millisecond, Start] [)] [;] [Test13] [Simple, Date, Format] [Df] [=] [New] [Simple, Date, Format] [(] ["yyyy-, Mm-dd"] [)] [;] [Long] [Ticks] [=] [11142, L] [*] [86400000, L] [;] [String] [Formatted] [=] [Df] [.] [Format] [(] [New] [Date] [(] [Ticks] [)] [)] [;] [Int] [Millisecond, Start] [=] [Cached, Date, Format] [.] [Find, Millisecond, Start] [(] [Ticks] [,] [Formatted] [,] [Df] [)] [;] [Assert, Equals] [(] [Cached, Date, Format] [.] [No, Milliseconds] [,] [Millisecond, Start] [)] [;] [Test14] [Simple, Date, Format] [Df] [=] [New] [Simple, Date, Format] [(] [", Hh:mm:ss,, Sss"] [)] [;] [Long] [Ticks] [=] [11142, L] [*] [86400000, L] [;] [String] [Formatted] [=] [Df] [.] [Format] [(] [New] [Date] [(] [Ticks] [)] [)] [;] [Int] [Millisecond, Start] [=] [Cached, Date, Format] [.] [Find, Millisecond, Start] [(] [Ticks] [,] [Formatted] [,] [Df] [)] [;] [Assert, Equals] [(] [9] [,] [Millisecond, Start] [)] [;] [Test15] [Simple, Date, Format] [Df] [=] [New] [Simple, Date, Format] [(] [", Hh:mm:ss,, S"] [)] [;] [Long] [Ticks] [=] [11142, L] [*] [86400000, L] [;] [String] [Formatted] [=] [Df] [.] [Format] [(] [New] [Date] [(] [Ticks] [)] [)] [;] [Int] [Millisecond, Start] [=] [Cached, Date, Format] [.] [Find, Millisecond, Start] [(] [Ticks] [,] [Formatted] [,] [Df] [)] [;] [Assert, Equals] [(] [Cached, Date, Format] [.] [Unrecognized, Milliseconds] [,] [Millisecond, Start] [)] [;] [Test16] [Simple, Date, Format] [Df] [=] [New] [Simple, Date, Format] [(] [", Hh:mm:ss,, Ss"] [)] [;] [Long] [Ticks] [=] [11142, L] [*] [86400000, L] [;] [String] [Formatted] [=] [Df] [.] [Format] [(] [New] [Date] [(] [Ticks] [)] [)] [;] [Int] [Millisecond, Start] [=] [Cached, Date, Format] [.] [Find, Millisecond, Start] [(] [Ticks] [,] [Formatted] [,] [Df] [)] [;] [Assert, Equals] [(] [Cached, Date, Format] [.] [Unrecognized, Milliseconds] [,] [Millisecond, Start] [)] [;] [Test17] [Date] [Jul2] [=] [New] [Date] [(] [12602, L] [*] [86400000, L] [)] [;] [String] [Bad, Pattern] [=] [", Hh:mm:ss,, Sss , Hh:mm:ss,, Sss"] [;] [Simple, Date, Format] [Simple, Format] [=] [New] [Simple, Date, Format] [(] [Bad, Pattern] [)] [;] [Simple, Format] [.] [Set, Time, Zone] [(] [Gmt] [)] [;] [Date, Format] [Cached, Format] [=] [New] [Cached, Date, Format] [(] [Simple, Format] [,] [1000] [)] [;] [String] [S] [=] [Cached, Format] [.] [Format] [(] [Jul2] [)] [;] [Assert, Equals] [(] ["00:00:00,000 00:00:00,000"] [,] [S] [)] [;] [Jul2] [.] [Set, Time] [(] [Jul2] [.] [Get, Time] [(] [)] [+] [120] [)] [;] [Assert, Equals] [(] ["00:00:00,120 00:00:00,120"] [,] [Simple, Format] [.] [Format] [(] [Jul2] [)] [)] [;] [S] [=] [Cached, Format] [.] [Format] [(] [Jul2] [)] [;] [Int] [Max, Valid] [=] [Cached, Date, Format] [.] [Get, Maximum, Cache, Validity] [(] [Bad, Pattern] [)] [;] [Assert, Equals] [(] [1] [,] [Max, Valid] [)] [;] [Xsuite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Cached, Date, Format, Test] [(] ["test5"] [)] [)] [;] [Return] [Suite] [;]
Class FormattingInfoTest@@ [Test, Get, Default] [Formatting, Info] [Field] [=] [Formatting, Info] [.] [Get, Default] [(] [)] [;] [Assert, Not, Null] [(] [Field] [)] [;] [Assert, Equals] [(] [0] [,] [Field] [.] [Get, Min, Length] [(] [)] [)] [;] [Assert, Equals] [(] [Integer] [.] [Max, Value] [,] [Field] [.] [Get, Max, Length] [(] [)] [)] [;] [Assert, Equals] [(] [False] [,] [Field] [.] [Is, Left, Aligned] [(] [)] [)] [;] [Test, Constructor] [Formatting, Info] [Field] [=] [New] [Formatting, Info] [(] [True] [,] [3] [,] [6] [)] [;] [Assert, Not, Null] [(] [Field] [)] [;] [Assert, Equals] [(] [3] [,] [Field] [.] [Get, Min, Length] [(] [)] [)] [;] [Assert, Equals] [(] [6] [,] [Field] [.] [Get, Max, Length] [(] [)] [)] [;] [Assert, Equals] [(] [True] [,] [Field] [.] [Is, Left, Aligned] [(] [)] [)] [;] [Test, Truncate] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] ["foobar"] [)] [;] [Formatting, Info] [Field] [=] [New] [Formatting, Info] [(] [True] [,] [0] [,] [3] [)] [;] [Field] [.] [Format] [(] [2] [,] [Buf] [)] [;] [Assert, Equals] [(] ["fobar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Test, Pad, Left] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] ["foobar"] [)] [;] [Formatting, Info] [Field] [=] [New] [Formatting, Info] [(] [False] [,] [5] [,] [10] [)] [;] [Field] [.] [Format] [(] [2] [,] [Buf] [)] [;] [Assert, Equals] [(] ["fo obar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Test, Pad, Right] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] ["foobar"] [)] [;] [Formatting, Info] [Field] [=] [New] [Formatting, Info] [(] [True] [,] [5] [,] [10] [)] [;] [Field] [.] [Format] [(] [2] [,] [Buf] [)] [;] [Assert, Equals] [(] ["foobar "] [,] [Buf] [.] [To, String] [(] [)] [)] [;]
Class NameAbbreviatorTest@@ [Test, Get, Default] [Name, Abbreviator] [Abbrev] [=] [Name, Abbreviator] [.] [Get, Default, Abbreviator] [(] [)] [;] [Assert, Not, Null] [(] [Abbrev] [)] [;] [Test, Zero] [Name, Abbreviator] [Abbrev] [=] [Name, Abbreviator] [.] [Get, Abbreviator] [(] ["0"] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [", Debug - "] [)] [;] [Int] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - "] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Test, Blank] [Name, Abbreviator] [Abbrev] [=] [Name, Abbreviator] [.] [Get, Abbreviator] [(] ["   "] [)] [;] [Name, Abbreviator] [Default, Abbrev] [=] [Name, Abbreviator] [.] [Get, Default, Abbreviator] [(] [)] [;] [Assert, True] [(] [Abbrev] [==] [Default, Abbrev] [)] [;] [Test, One] [Name, Abbreviator] [Abbrev] [=] [Name, Abbreviator] [.] [Get, Abbreviator] [(] ["1"] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [", Debug - "] [)] [;] [Int] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - "] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Test, Blank, One] [Name, Abbreviator] [Abbrev] [=] [Name, Abbreviator] [.] [Get, Abbreviator] [(] [" 1 "] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [", Debug - "] [)] [;] [Int] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - "] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Test, Two] [Name, Abbreviator] [Abbrev] [=] [Name, Abbreviator] [.] [Get, Abbreviator] [(] ["2"] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [", Debug - "] [)] [;] [Int] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - foo.bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - foo.bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Test, One, Dot] [Name, Abbreviator] [Abbrev] [=] [Name, Abbreviator] [.] [Get, Abbreviator] [(] ["1."] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [", Debug - "] [)] [;] [Int] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - o.e.f.bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo."] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - o.e.f."] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - f.bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - "] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["."] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - ."] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Test, One, Tilde, Dot] [Name, Abbreviator] [Abbrev] [=] [Name, Abbreviator] [.] [Get, Abbreviator] [(] ["1~."] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [", Debug - "] [)] [;] [Int] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - o~.e~.f~.bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo."] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - o~.e~.f~."] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - f~.bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - "] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["."] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - ."] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["o.e.f.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - o.e.f.bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Test, Multi] [Name, Abbreviator] [Abbrev] [=] [Name, Abbreviator] [.] [Get, Abbreviator] [(] ["1.*.2"] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [", Debug - "] [)] [;] [Int] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - o.example.fo.bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo."] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - o.example.fo."] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - f.bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - "] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["."] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - ."] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Test, Minus, One] [Name, Abbreviator] [Abbrev] [=] [Name, Abbreviator] [.] [Get, Abbreviator] [(] ["-1"] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [", Debug - "] [)] [;] [Int] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["org.example.foo.bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - example.foo.bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["bar"] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - bar"] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - "] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Set, Length] [(] [0] [)] [;] [Buf] [.] [Append] [(] [", Debug - "] [)] [;] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [Buf] [.] [Append] [(] ["."] [)] [;] [Abbrev] [.] [Abbreviate] [(] [Field, Start] [,] [Buf] [)] [;] [Assert, Equals] [(] [", Debug - "] [,] [Buf] [.] [To, String] [(] [)] [)] [;]
Class Num343PatternConverter@@ [Private] [Static] [Final] [Num343, Pattern, Converter] [Instance=new, Num343, Pattern, Converter()] [;] [New, Instance] [Return] [Instance] [;] [Format] [To, Append, To] [.] [Append] [(] ["343"] [)] [;]
Class PatternParserTest@@ [Private] [Final] [Logger] [Logger=, Logger.get, Logger("org.foobar")] [;] [Private] [Final] [Logging, Event] [Event] [;] [Event] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Info] [,] ["msg 1"] [,] [Null] [)] [;] [Convert] [List] [Converters] [=] [New] [Array, List] [(] [)] [;] [List] [Fields] [=] [New] [Array, List] [(] [)] [;] [Pattern, Parser] [.] [Parse] [(] [Pattern] [,] [Converters] [,] [Fields] [,] [Registry] [,] [Pattern, Parser] [.] [Get, Pattern, Layout, Rules] [(] [)] [)] [;] [Assert, Equals] [(] [Converters] [.] [Size] [(] [)] [,] [Fields] [.] [Size] [(] [)] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [)] [;] [Iterator] [Converter, Iter] [=] [Converters] [.] [Iterator] [(] [)] [;] [Iterator] [Field, Iter] [=] [Fields] [.] [Iterator] [(] [)] [;] [While] [(] [Converter, Iter] [.] [Has, Next] [(] [)] [)] [{] [Int] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [(] [(] [Pattern, Converter] [)] [Converter, Iter] [.] [Next] [(] [)] [)] [.] [Format] [(] [Event] [,] [Buf] [)] [;] [(] [(] [Formatting, Info] [)] [Field, Iter] [.] [Next] [(] [)] [)] [.] [Format] [(] [Field, Start] [,] [Buf] [)] [;] [}] [Int] [Field, Start] [=] [Buf] [.] [Length] [(] [)] [;] [(] [(] [Pattern, Converter] [)] [Converter, Iter] [.] [Next] [(] [)] [)] [.] [Format] [(] [Event] [,] [Buf] [)] [;] [(] [(] [Formatting, Info] [)] [Field, Iter] [.] [Next] [(] [)] [)] [.] [Format] [(] [Field, Start] [,] [Buf] [)] [;] [Return] [Buf] [.] [To, String] [(] [)] [;] [Test, New, Word] [Hash, Map] [Rule, Registry] [=] [New] [Hash, Map] [(] [5] [)] [;] [Rule, Registry] [.] [Put] [(] ["z343"] [,] [Num343, Pattern, Converter] [.] [Class] [.] [Get, Name] [(] [)] [)] [;] [String] [Result] [=] [Convert] [(] ["%z343"] [,] [Rule, Registry] [,] [Event] [)] [;] [Assert, Equals] [(] ["343"] [,] [Result] [)] [;] [Test, New, Word2] [Hash, Map] [Rule, Registry] [=] [New] [Hash, Map] [(] [5] [)] [;] [Rule, Registry] [.] [Put] [(] ["n343"] [,] [Num343, Pattern, Converter] [.] [Class] [.] [Get, Name] [(] [)] [)] [;] [String] [Result] [=] [Convert] [(] ["%n343"] [,] [Rule, Registry] [,] [Event] [)] [;] [Assert, Equals] [(] ["343"] [,] [Result] [)] [;] [Test, Bogus, Word1] [String] [Result] [=] [Convert] [(] ["%, foobar"] [,] [Null] [,] [Event] [)] [;] [Assert, Equals] [(] ["%, foobar"] [,] [Result] [)] [;] [Test, Bogus, Word2] [String] [Result] [=] [Convert] [(] ["xyz %, foobar"] [,] [Null] [,] [Event] [)] [;] [Assert, Equals] [(] ["xyz %, foobar"] [,] [Result] [)] [;] [Test, Basic1] [String] [Result] [=] [Convert] [(] ["hello %-5level - %m%n"] [,] [Null] [,] [Event] [)] [;] [Assert, Equals] [(] ["hello , Info  - msg 1"] [+] [Layout] [.] [Line, Sep] [,] [Result] [)] [;] [Test, Basic2] [String] [Result] [=] [Convert] [(] ["%relative %-5level [%thread] %logger - %m%n"] [,] [Null] [,] [Event] [)] [;] [Long] [Expected, Relative, Time] [=] [Event] [.] [Time, Stamp] [-] [Logging, Event] [.] [Get, Start, Time] [(] [)] [;] [Assert, Equals] [(] [Expected, Relative, Time] [+] [" , Info  [main] "] [+] [Logger] [.] [Get, Name] [(] [)] [+] [" - msg 1"] [+] [Layout] [.] [Line, Sep] [,] [Result] [)] [;] [Test, Multi, Option] [String] [Result] [=] [Convert] [(] ["%d{, Hh:mm:ss}{, Gmt} %d{, Hh:mm:ss} %c  - %m"] [,] [Null] [,] [Event] [)] [;] [Simple, Date, Format] [Date, Format] [=] [New] [Simple, Date, Format] [(] [", Hh:mm:ss"] [)] [;] [String] [Local, Time] [=] [Date, Format] [.] [Format] [(] [New] [Date] [(] [Event] [.] [Time, Stamp] [)] [)] [;] [Date, Format] [.] [Set, Time, Zone] [(] [Time, Zone] [.] [Get, Time, Zone] [(] [", Gmt"] [)] [)] [;] [String] [Utc, Time] [=] [Date, Format] [.] [Format] [(] [New] [Date] [(] [Event] [.] [Time, Stamp] [)] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [Utc, Time] [)] [;] [Buf] [.] [Append] [(] [' '] [)] [;] [Buf] [.] [Append] [(] [Local, Time] [)] [;] [Buf] [.] [Append] [(] [" org.foobar  - msg 1"] [)] [;] [Assert, Equals] [(] [Buf] [.] [To, String] [(] [)] [,] [Result] [)] [;] [Test, Bogus] [String] [Result] [=] [Convert] [(] ["%bogus"] [,] [Null] [,] [Event] [)] [;] [Assert, Equals] [(] ["%bogus"] [,] [Result] [)] [;] [Test, More] [String] [Result] [=] [Convert] [(] ["%more"] [,] [Null] [,] [Event] [)] [;] [Assert, Equals] [(] ["msg 1ore"] [,] [Result] [)] [;] [Test, Malformed, Option] [String] [Result] [=] [Convert] [(] ["foo%m{yyyy., Mm.dd"] [,] [Null] [,] [Event] [)] [;] [Assert, Equals] [(] ["foomsg 1{yyyy., Mm.dd"] [,] [Result] [)] [;] [Assert, Factories] [Assert, True] [(] [Rules] [.] [Size] [(] [)] [>] [0] [)] [;] [Iterator] [Iter] [=] [Rules] [.] [Values] [(] [)] [.] [Iterator] [(] [)] [;] [Class] [[] []] [Factory, Sig] [=] [New] [Class] [[] []] [{] [Class] [.] [For, Name] [(] ["[, Ljava.lang., String;"] [)] [}] [;] [Object] [[] []] [Factory, Arg] [=] [New] [Object] [[] []] [{] [Null] [}] [;] [While] [(] [Iter] [.] [Has, Next] [(] [)] [)] [{] [Class] [Rule, Class] [=] [(] [Class] [)] [Iter] [.] [Next] [(] [)] [;] [Method] [Factory] [=] [Rule, Class] [.] [Get, Method] [(] ["new, Instance"] [,] [Factory, Sig] [)] [;] [Object] [Converter] [=] [Factory] [.] [Invoke] [(] [Null] [,] [Factory, Arg] [)] [;] [Assert, True] [(] [Converter] [!=] [Null] [)] [;] [}] [Class] [Rule, Class] [=] [(] [Class] [)] [Iter] [.] [Next] [(] [)] [;] [Method] [Factory] [=] [Rule, Class] [.] [Get, Method] [(] ["new, Instance"] [,] [Factory, Sig] [)] [;] [Object] [Converter] [=] [Factory] [.] [Invoke] [(] [Null] [,] [Factory, Arg] [)] [;] [Assert, True] [(] [Converter] [!=] [Null] [)] [;] [Test, Pattern, Layout, Factories] [Assert, Factories] [(] [Pattern, Parser] [.] [Get, Pattern, Layout, Rules] [(] [)] [)] [;] [Test, File, Name, Pattern, Factories] [Assert, Factories] [(] [Pattern, Parser] [.] [Get, File, Name, Pattern, Rules] [(] [)] [)] [;]
Class PatternLayoutTest@@ [Create, Layout] [Return] [New] [Pattern, Layout] [(] ["[%t] %p %c - %m%n"] [)] [;] [Test, Format] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j., Layout, Test"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Info] [,] [", Hello, , World"] [,] [Null] [)] [;] [Pattern, Layout] [Layout] [=] [(] [Pattern, Layout] [)] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [100] [)] [;] [Buf] [.] [Append] [(] ['['] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Thread, Name] [(] [)] [)] [;] [Buf] [.] [Append] [(] ["] "] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Level] [(] [)] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Append] [(] [' '] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Logger, Name] [(] [)] [)] [;] [Buf] [.] [Append] [(] [" - "] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Message] [(] [)] [)] [;] [Buf] [.] [Append] [(] [System] [.] [Get, Property] [(] ["line.separator"] [)] [)] [;] [Assert, Equals] [(] [Buf] [.] [To, String] [(] [)] [,] [Result] [)] [;] [Test, Get, Pattern, Format] [Pattern, Layout] [Layout] [=] [(] [Pattern, Layout] [)] [Create, Layout] [(] [)] [;] [Assert, Equals] [(] ["[%t] %p %c - %m%n"] [,] [Layout] [.] [Get, Conversion, Pattern] [(] [)] [)] [;] [Test, Default, Conversion, Pattern] [Assert, Equals] [(] ["%m%n"] [,] [Pattern, Layout] [.] [Default, Conversion, Pattern] [)] [;] [Test, Ttcc, Conversion, Pattern] [Assert, Equals] [(] ["%r [%t] %p %c %x - %m%n"] [,] [Pattern, Layout] [.] [Ttcc, Conversion, Pattern] [)] [;] [Test, Format, Resize] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Pattern, Layout, Test"] [)] [;] [Ndc] [.] [Clear] [(] [)] [;] [Char] [[] []] [Msg] [=] [New] [Char] [[] [2000] []] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Msg] [.] [Length] [;] [I] [++] [)] [{] [Msg] [[] [I] []] [=] [', A'] [;] [}] [Msg] [[] [I] []] [=] [', A'] [;] [Logging, Event] [Event1] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Debug] [,] [New] [String] [(] [Msg] [)] [,] [Null] [)] [;] [Pattern, Layout] [Layout] [=] [(] [Pattern, Layout] [)] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event1] [)] [;] [Logging, Event] [Event2] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Warn] [,] [", Hello, , World"] [,] [Null] [)] [;] [Result] [=] [Layout] [.] [Format] [(] [Event2] [)] [;] [Assert, Equals] [(] ["["] [,] [Result] [.] [Substring] [(] [0] [,] [1] [)] [)] [;]
Class DerivedPatternLayout@@ [Get, Buf, Size] [Return] [Buf, Size] [;] [Get, Max, Capacity] [Return] [Max, Capacity] [;]
Class PatternLayoutTestCase@@ [Static] [String] [Temp="output/temp"] [;] [Static] [String] [Filtered="output/filtered"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\(, Native , Method\\)"] [;] [Static] [String] [Exception4="\\s*at .*\\(.*, Compiled , Code\\)"] [;] [Static] [String] [Exception5="\\s*at .*\\(.*libgcj.*\\)"] [;] [Static] [String] [Pat0="\\[main]\\ (, Trace|, Debug|, Info |, Warn |, Error|, Fatal) .* - , Message \\d{1,2}"] [;] [Static] [String] [Pat1=, Filter., Iso8601, Pat+" "+, Pat0] [;] [Static] [String] [Pat2=, Filter., Absolute, Date, And, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat3=, Filter., Absolute, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat4=, Filter., Relative, Time, Pat+" "+, Pat0] [;] [Static] [String] [Pat5="\\[main]\\ (, Trace|, Debug|, Info |, Warn |, Error|, Fatal) .* : , Message \\d{1,2}"] [;] [Static] [String] [Pat6="\\[main]\\ (, Trace|, Debug|, Info |, Warn |, Error|, Fatal) org.apache.log4j., Pattern, Layout, Test, Case.common\\(, Pattern, Layout, Test, Case.java(:\\d{1,4})?\\): , Message \\d{1,2}"] [;] [Static] [String] [Pat11a="^(, Trace|, Debug|, Info |, Warn |, Error|, Fatal) \\[main]\\ log4j., Pattern, Layout, Test, Case: , Message \\d{1,2}"] [;] [Static] [String] [Pat11b="^(, Trace|, Debug|, Info |, Warn |, Error|, Fatal) \\[main]\\ root: , Message \\d{1,2}"] [;] [Static] [String] [Pat12="^\\[main]\\ (, Trace|, Debug|, Info |, Warn |, Error|, Fatal) "+"org.apache.log4j., Pattern, Layout, Test, Case.common\\(, Pattern, Layout, Test, Case.java:\\d{3}\\): "+", Message \\d{1,2}"] [;] [Static] [String] [Pat13="^\\[main]\\ (, Trace|, Debug|, Info |, Warn |, Error|, Fatal) "+"apache.log4j., Pattern, Layout, Test, Case.common\\(, Pattern, Layout, Test, Case.java:\\d{3}\\): "+", Message \\d{1,2}"] [;] [Static] [String] [Pat14="^(, Trace|, Debug| , Info| , Warn|, Error|, Fatal)\\ \\d{1,2}\\ *- , Message \\d{1,2}"] [;] [Set, Up] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Pattern, Layout, Test, Case] [.] [Class] [)] [;] [Tear, Down] [Root] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Test1] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout1.properties"] [)] [;] [Common] [(] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.1"] [)] [)] [;] [Test2] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout2.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat1] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Iso8601, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.2"] [)] [)] [;] [Test3] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout3.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat1] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Iso8601, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.3"] [)] [)] [;] [Test4] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout4.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat2] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Absolute, Date, And, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.4"] [)] [)] [;] [Test5] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout5.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat2] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Absolute, Date, And, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.5"] [)] [)] [;] [Test6] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout6.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat3] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Absolute, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.6"] [)] [)] [;] [Test7] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout7.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat3] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Absolute, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.7"] [)] [)] [;] [Test8] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout8.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat4] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Relative, Time, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.8"] [)] [)] [;] [Test9] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout9.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat5] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.9"] [)] [)] [;] [Test10] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout10.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat6] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.10"] [)] [)] [;] [Test11] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout11.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat11a] [,] [Pat11b] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.11"] [)] [)] [;] [Test12] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout12.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat12] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.12"] [)] [)] [;] [Test13] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout13.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat13] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.13"] [)] [)] [;] [Test14] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout14.properties"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Pat14] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/pattern, Layout.14"] [)] [)] [;] [Test, Mdc1] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout.mdc.1.properties"] [)] [;] [Mdc] [.] [Put] [(] ["key1"] [,] ["va11"] [)] [;] [Mdc] [.] [Put] [(] ["key2"] [,] ["va12"] [)] [;] [Logger] [.] [Debug] [(] [", Hello , World"] [)] [;] [Mdc] [.] [Remove] [(] ["key1"] [)] [;] [Mdc] [.] [Remove] [(] ["key2"] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/pattern, Layout.mdc.1"] [)] [)] [;] [Test, Mdc, Clear] [Property, Configurator] [.] [Configure] [(] ["input/pattern, Layout.mdc.1.properties"] [)] [;] [Mdc] [.] [Put] [(] ["key1"] [,] ["va11"] [)] [;] [Mdc] [.] [Put] [(] ["key2"] [,] ["va12"] [)] [;] [Logger] [.] [Debug] [(] [", Hello , World"] [)] [;] [Mdc] [.] [Clear] [(] [)] [;] [Logger] [.] [Debug] [(] [", Hello , World"] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/pattern, Layout.mdc.clear"] [)] [)] [;] [Common] [String] [Old, Thread, Name] [=] [Thread] [.] [Current, Thread] [(] [)] [.] [Get, Name] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] ["main"] [)] [;] [Int] [I] [=] [-] [1] [;] [Logger] [.] [Trace] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Trace] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Info] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [Exception] [E] [=] [New] [Exception] [(] [", Just testing"] [)] [;] [Logger] [.] [Trace] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Logger] [.] [Info] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Logger] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Old, Thread, Name] [)] [;]
Class PriorityTest@@ [Test, Off, Int] [Assert, Equals] [(] [Integer] [.] [Max, Value] [,] [Priority] [.] [Off, Int] [)] [;] [Test, Fatal, Int] [Assert, Equals] [(] [50000] [,] [Priority] [.] [Fatal, Int] [)] [;] [Test, Error, Int] [Assert, Equals] [(] [40000] [,] [Priority] [.] [Error, Int] [)] [;] [Test, Warn, Int] [Assert, Equals] [(] [30000] [,] [Priority] [.] [Warn, Int] [)] [;] [Test, Info, Int] [Assert, Equals] [(] [20000] [,] [Priority] [.] [Info, Int] [)] [;] [Test, Debug, Int] [Assert, Equals] [(] [10000] [,] [Priority] [.] [Debug, Int] [)] [;] [Test, All, Int] [Assert, Equals] [(] [Integer] [.] [Min, Value] [,] [Priority] [.] [All, Int] [)] [;] [Test, Fatal] [Assert, True] [(] [Priority] [.] [Fatal] [Instanceof] [Level] [)] [;] [Test, Error] [Assert, True] [(] [Priority] [.] [Error] [Instanceof] [Level] [)] [;] [Test, Warn] [Assert, True] [(] [Priority] [.] [Warn] [Instanceof] [Level] [)] [;] [Test, Info] [Assert, True] [(] [Priority] [.] [Info] [Instanceof] [Level] [)] [;] [Test, Debug] [Assert, True] [(] [Priority] [.] [Debug] [Instanceof] [Level] [)] [;] [Test, Equals, Null] [Assert, False] [(] [Priority] [.] [Debug] [.] [Equals] [(] [Null] [)] [)] [;] [Test, Equals, Level] [Assert, True] [(] [Priority] [.] [Debug] [.] [Equals] [(] [Level] [.] [Debug] [)] [)] [;] [Test, Get, All, Possible, Priorities] [Priority] [[] []] [Priorities] [=] [Priority] [.] [Get, All, Possible, Priorities] [(] [)] [;] [Assert, Equals] [(] [5] [,] [Priorities] [.] [Length] [)] [;] [Test, To, Priority, String] [Assert, True] [(] [Priority] [.] [To, Priority] [(] [", Debug"] [)] [==] [Level] [.] [Debug] [)] [;] [Test, To, Priority, Int] [Assert, True] [(] [Priority] [.] [To, Priority] [(] [Priority] [.] [Debug, Int] [)] [==] [Level] [.] [Debug] [)] [;] [Test, To, Priority, String, Priority] [Assert, True] [(] [Priority] [.] [To, Priority] [(] ["foo"] [,] [Priority] [.] [Debug] [)] [==] [Priority] [.] [Debug] [)] [;] [Test, To, Priority, Int, Priority] [Assert, True] [(] [Priority] [.] [To, Priority] [(] [17] [,] [Priority] [.] [Debug] [)] [==] [Priority] [.] [Debug] [)] [;] [Test, Dotless, Lower, I] [Priority] [Level] [=] [Priority] [.] [To, Priority] [(] ["\u0131nfo"] [)] [;] [Assert, Equals] [(] [", Info"] [,] [Level] [.] [To, String] [(] [)] [)] [;] [Test, Dotted, Lower, I] [Locale] [Default, Locale] [=] [Locale] [.] [Get, Default] [(] [)] [;] [Locale] [Turkey] [=] [New] [Locale] [(] ["tr"] [,] [", Tr"] [)] [;] [Locale] [.] [Set, Default] [(] [Turkey] [)] [;] [Priority] [Level] [=] [Priority] [.] [To, Priority] [(] ["info"] [)] [;] [Locale] [.] [Set, Default] [(] [Default, Locale] [)] [;] [Assert, Equals] [(] [", Info"] [,] [Level] [.] [To, String] [(] [)] [)] [;]
Class PropertyConfiguratorTest@@ [Test, Bad, Unicode, Escape] [String] [File, Name] [=] ["output/badescape.properties"] [;] [File, Writer] [Writer] [=] [New] [File, Writer] [(] [File, Name] [)] [;] [Writer] [.] [Write] [(] ["log4j.root, Logger=\\u, Xx41"] [)] [;] [Writer] [.] [Close] [(] [)] [;] [Property, Configurator] [.] [Configure] [(] [File, Name] [)] [;] [File] [File] [=] [New] [File] [(] [File, Name] [)] [;] [Assert, True] [(] [File] [.] [Delete] [(] [)] [)] [;] [Assert, False] [(] [File] [.] [Exists] [(] [)] [)] [;] [Test, Url] [File] [File] [=] [New] [File] [(] ["output/unclosed.properties"] [)] [;] [File, Writer] [Writer] [=] [New] [File, Writer] [(] [File] [)] [;] [Writer] [.] [Write] [(] ["log4j.root, Logger=debug"] [)] [;] [Writer] [.] [Close] [(] [)] [;] [Url] [Url] [=] [File] [.] [To, Url] [(] [)] [;] [Property, Configurator] [.] [Configure] [(] [Url] [)] [;] [Assert, True] [(] [File] [.] [Delete] [(] [)] [)] [;] [Assert, False] [(] [File] [.] [Exists] [(] [)] [)] [;] [Test, Url, Bad, Escape] [File] [File] [=] [New] [File] [(] ["output/urlbadescape.properties"] [)] [;] [File, Writer] [Writer] [=] [New] [File, Writer] [(] [File] [)] [;] [Writer] [.] [Write] [(] ["log4j.root, Logger=\\u, Xx41"] [)] [;] [Writer] [.] [Close] [(] [)] [;] [Url] [Url] [=] [File] [.] [To, Url] [(] [)] [;] [Property, Configurator] [.] [Configure] [(] [Url] [)] [;] [Assert, True] [(] [File] [.] [Delete] [(] [)] [)] [;] [Assert, False] [(] [File] [.] [Exists] [(] [)] [)] [;] [Test, Input, Stream] [File] [File] [=] [New] [File] [(] ["input/filter1.properties"] [)] [;] [Assert, True] [(] [File] [.] [Exists] [(] [)] [)] [;] [File, Input, Stream] [Input, Stream] [=] [New] [File, Input, Stream] [(] [File] [)] [;] [Try] [{] [Property, Configurator] [.] [Configure] [(] [Input, Stream] [)] [;] [}] [Finally] [{] [Input, Stream] [.] [Close] [(] [)] [;] [}] [Property, Configurator] [.] [Configure] [(] [Input, Stream] [)] [;] [Input, Stream] [.] [Close] [(] [)] [;] [This] [.] [Validate, Nested] [(] [)] [;] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Validate, Nested] [Rolling, File, Appender] [Rfa] [=] [(] [Rolling, File, Appender] [)] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j., Property, Configurator, Test"] [)] [.] [Get, Appender] [(] [", Rolling"] [)] [;] [Fixed, Window, Rolling, Policy] [Rolling, Policy] [=] [(] [Fixed, Window, Rolling, Policy] [)] [Rfa] [.] [Get, Rolling, Policy] [(] [)] [;] [Assert, Equals] [(] ["filter, Base-test1.log"] [,] [Rolling, Policy] [.] [Get, Active, File, Name] [(] [)] [)] [;] [Assert, Equals] [(] ["filter, Based-test1.%i"] [,] [Rolling, Policy] [.] [Get, File, Name, Pattern] [(] [)] [)] [;] [Assert, Equals] [(] [0] [,] [Rolling, Policy] [.] [Get, Min, Index] [(] [)] [)] [;] [Assert, True] [(] [Rolling, Policy] [.] [Is, Activated] [(] [)] [)] [;] [Filter, Based, Triggering, Policy] [Triggering, Policy] [=] [(] [Filter, Based, Triggering, Policy] [)] [Rfa] [.] [Get, Triggering, Policy] [(] [)] [;] [Level, Range, Filter] [Filter] [=] [(] [Level, Range, Filter] [)] [Triggering, Policy] [.] [Get, Filter] [(] [)] [;] [Assert, True] [(] [Level] [.] [Info] [.] [Equals] [(] [Filter] [.] [Get, Level, Min] [(] [)] [)] [)] [;] [Test, Jar, Url] [File] [Dir] [=] [New] [File] [(] ["output"] [)] [;] [Dir] [.] [Mkdirs] [(] [)] [;] [File] [File] [=] [New] [File] [(] ["output/properties.jar"] [)] [;] [Zip, Output, Stream] [Zos] [=] [New] [Zip, Output, Stream] [(] [New] [File, Output, Stream] [(] [File] [)] [)] [;] [Zos] [.] [Put, Next, Entry] [(] [New] [Zip, Entry] [(] [Log, Manager] [.] [Default, Configuration, File] [)] [)] [;] [Zos] [.] [Write] [(] ["log4j.root, Logger=debug"] [.] [Get, Bytes] [(] [)] [)] [;] [Zos] [.] [Close, Entry] [(] [)] [;] [Zos] [.] [Close] [(] [)] [;] [Url] [Url] [=] [New] [Url] [(] ["jar:"] [+] [File] [.] [To, Url] [(] [)] [+] ["!/"] [+] [Log, Manager] [.] [Default, Configuration, File] [)] [;] [Property, Configurator] [.] [Configure] [(] [Url] [)] [;] [Assert, True] [(] [File] [.] [Delete] [(] [)] [)] [;] [Assert, False] [(] [File] [.] [Exists] [(] [)] [)] [;] [Test, Reset] [Vector, Appender] [Appender] [=] [New] [Vector, Appender] [(] [)] [;] [Appender] [.] [Set, Name] [(] [", A1"] [)] [;] [Logger] [.] [Get, Root, Logger] [(] [)] [.] [Add, Appender] [(] [Appender] [)] [;] [Properties] [Props] [=] [New] [Properties] [(] [)] [;] [Props] [.] [Put] [(] ["log4j.reset"] [,] ["true"] [)] [;] [Property, Configurator] [.] [Configure] [(] [Props] [)] [;] [Assert, Null] [(] [Logger] [.] [Get, Root, Logger] [(] [)] [.] [Get, Appender] [(] [", A1"] [)] [)] [;] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;]
Class RollingPolicy@@ [Private] [Boolean] [Activated=false] [;] [Activate, Options] [Activated] [=] [True] [;] [Is, Activated] [Return] [Activated] [;]
Class FixedWindowRollingPolicy@@ [Private] [String] [Active, File, Name] [;] [Private] [String] [File, Name, Pattern] [;] [Private] [Int] [Min, Index] [;] [Min, Index] [=] [-] [1] [;] [Get, Active, File, Name] [Return] [Active, File, Name] [;] [Set, Active, File, Name] [Active, File, Name] [=] [Val] [;] [Get, File, Name, Pattern] [Return] [File, Name, Pattern] [;] [Set, File, Name, Pattern] [File, Name, Pattern] [=] [Val] [;] [Get, Min, Index] [Return] [Min, Index] [;] [Set, Min, Index] [Min, Index] [=] [Val] [;]
Class TriggeringPolicy@@ [Private] [Boolean] [Activated=false] [;] [Activate, Options] [Activated] [=] [True] [;] [Is, Activated] [Return] [Activated] [;]
Class FilterBasedTriggeringPolicy@@ [Private] [Filter] [Filter] [;] [Set, Filter] [Filter] [=] [Val] [;] [Get, Filter] [Return] [Filter] [;]
Class RollingFileAppender@@ [Private] [Rolling, Policy] [Rolling, Policy] [;] [Private] [Triggering, Policy] [Triggering, Policy] [;] [Private] [Boolean] [Append] [;] [Get, Rolling, Policy] [Return] [Rolling, Policy] [;] [Set, Rolling, Policy] [Rolling, Policy] [=] [Policy] [;] [Get, Triggering, Policy] [Return] [Triggering, Policy] [;] [Set, Triggering, Policy] [Triggering, Policy] [=] [Policy] [;] [Get, Append] [Return] [Append] [;] [Set, Append] [Append] [=] [Val] [;] [Close] [Requires, Layout] [Return] [True] [;] [Append] [Test, Nested] [Try] [{] [Property, Configurator] [.] [Configure] [(] ["input/filter1.properties"] [)] [;] [This] [.] [Validate, Nested] [(] [)] [;] [}] [Finally] [{] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [}] [Property, Configurator] [.] [Configure] [(] ["input/filter1.properties"] [)] [;] [This] [.] [Validate, Nested] [(] [)] [;] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;]
Class MockThrowableRenderer@@ [Private] [Boolean] [Activated=false] [;] [Private] [Boolean] [Show, Version=true] [;] [Activate, Options] [Activated] [=] [True] [;] [Is, Activated] [Return] [Activated] [;] [Do, Render] [Return] [New] [String] [[] [0] []] [;] [Set, Show, Version] [Show, Version] [=] [V] [;] [Get, Show, Version] [Return] [Show, Version] [;] [Test, Throwable, Renderer] [Properties] [Props] [=] [New] [Properties] [(] [)] [;] [Props] [.] [Put] [(] ["log4j.throwable, Renderer"] [,] ["org.apache.log4j., Property, Configurator, Test$, Mock, Throwable, Renderer"] [)] [;] [Props] [.] [Put] [(] ["log4j.throwable, Renderer.show, Version"] [,] ["false"] [)] [;] [Property, Configurator] [.] [Configure] [(] [Props] [)] [;] [Throwable, Renderer, Support] [Repo] [=] [(] [Throwable, Renderer, Support] [)] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [;] [Mock, Throwable, Renderer] [Renderer] [=] [(] [Mock, Throwable, Renderer] [)] [Repo] [.] [Get, Throwable, Renderer] [(] [)] [;] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Assert, Not, Null] [(] [Renderer] [)] [;] [Assert, Equals] [(] [True] [,] [Renderer] [.] [Is, Activated] [(] [)] [)] [;] [Assert, Equals] [(] [False] [,] [Renderer] [.] [Get, Show, Version] [(] [)] [)] [;]
Class RewriteAppenderTest@@ [Set, Up] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Hashtable] [Context] [=] [Mdc] [.] [Get, Context] [(] [)] [;] [If] [(] [Context] [!=] [Null] [)] [{] [Context] [.] [Clear] [(] [)] [;] [}] [Context] [.] [Clear] [(] [)] [;] [Tear, Down] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [.] [Shutdown] [(] [)] [;] [Configure] [Input, Stream] [Is] [=] [Rewrite, Appender, Test] [.] [Class] [.] [Get, Resource, As, Stream] [(] [Resource, Name] [)] [;] [Document, Builder, Factory] [Factory] [=] [Document, Builder, Factory] [.] [New, Instance] [(] [)] [;] [Factory] [.] [Set, Namespace, Aware] [(] [False] [)] [;] [Document, Builder] [Builder] [=] [Factory] [.] [New, Document, Builder] [(] [)] [;] [Document] [Doc] [=] [Builder] [.] [Parse] [(] [Is] [)] [;] [Dom, Configurator] [.] [Configure] [(] [Doc] [.] [Get, Document, Element] [(] [)] [)] [;] [Test, Map, Policy] [Configure] [(] ["map.xml"] [)] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Rewrite, Appender, Test] [.] [Class] [)] [;] [Logger] [.] [Info] [(] [", Message 0"] [)] [;] [Mdc] [.] [Put] [(] ["p1"] [,] [", Hola"] [)] [;] [Map] [Msg] [=] [New] [Tree, Map] [(] [)] [;] [Msg] [.] [Put] [(] ["p1"] [,] [", Hello"] [)] [;] [Msg] [.] [Put] [(] ["p2"] [,] [", World"] [)] [;] [Msg] [.] [Put] [(] ["x1"] [,] [", Mundo"] [)] [;] [Logger] [.] [Info] [(] [Msg] [)] [;] [Msg] [.] [Put] [(] ["message"] [,] [", Message 1"] [)] [;] [Logger] [.] [Info] [(] [Msg] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Rewrite, Appender, Test] [.] [Class] [,] ["temp"] [,] ["map.log"] [)] [)] [;]
Class BaseBean@@ [Private] [Final] [Object] [P2] [;] [Private] [Final] [Object] [X1] [;] [This] [.] [P2] [=] [P2] [;] [This] [.] [X1] [=] [X1] [;] [Get, P2] [Return] [P2] [;] [Get, X1] [Return] [X1] [;] [To, String] [Return] [", I am bean."] [;]
Class MessageBean@@ [Private] [Final] [Object] [Msg] [;] [This] [.] [Msg] [=] [Msg] [;] [Get, Message] [Return] [Msg] [;] [Test, Reflection, Policy] [Configure] [(] ["reflection.xml"] [)] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Rewrite, Appender, Test] [.] [Class] [)] [;] [Logger] [.] [Info] [(] [", Message 0"] [)] [;] [Logger] [.] [Info] [(] [New] [Base, Bean] [(] [", Hello"] [,] [", World"] [)] [)] [;] [Mdc] [.] [Put] [(] ["p1"] [,] [", Hola"] [)] [;] [Mdc] [.] [Put] [(] ["p2"] [,] ["p2"] [)] [;] [Logger] [.] [Info] [(] [New] [Message, Bean] [(] [", Welcome to , The , Hub"] [,] [", Hello"] [,] [", World"] [)] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Rewrite, Appender, Test] [.] [Class] [,] ["temp"] [,] ["reflection.log"] [)] [)] [;] [Test, Property, Policy] [Configure] [(] ["property.xml"] [)] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Rewrite, Appender, Test] [.] [Class] [)] [;] [Logger] [.] [Info] [(] [", Message 0"] [)] [;] [Mdc] [.] [Put] [(] ["p1"] [,] [", Hola"] [)] [;] [Logger] [.] [Info] [(] [", Message 1"] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Rewrite, Appender, Test] [.] [Class] [,] ["temp"] [,] ["property.log"] [)] [)] [;]
Class RFATestCase@@ [Tear, Down] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Test1] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Rfa, Test, Case] [.] [Class] [)] [;] [Property, Configurator] [.] [Configure] [(] ["input/, Rfa1.properties"] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [25] [;] [I] [++] [)] [{] [If] [(] [I] [<] [10] [)] [{] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [}] [Else] [If] [(] [I] [<] [100] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [}] [If] [(] [I] [<] [10] [)] [{] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [}] [Else] [If] [(] [I] [<] [100] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-test1.log"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-test1.log.1"] [)] [.] [Exists] [(] [)] [)] [;] [Test2] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Rfa, Test, Case] [.] [Class] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Pattern, Layout] [Layout] [=] [New] [Pattern, Layout] [(] ["%m\n"] [)] [;] [Org] [.] [Apache] [.] [Log4j] [.] [Rolling, File, Appender] [Rfa] [=] [New] [Org] [.] [Apache] [.] [Log4j] [.] [Rolling, File, Appender] [(] [)] [;] [Rfa] [.] [Set, Name] [(] [", Rolling"] [)] [;] [Rfa] [.] [Set, Layout] [(] [Layout] [)] [;] [Rfa] [.] [Set, Append] [(] [False] [)] [;] [Rfa] [.] [Set, Max, Backup, Index] [(] [3] [)] [;] [Rfa] [.] [Set, Maximum, File, Size] [(] [100] [)] [;] [Rfa] [.] [Set, File] [(] ["output/, Rfa-test2.log"] [)] [;] [Rfa] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Rfa] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [55] [;] [I] [++] [)] [{] [If] [(] [I] [<] [10] [)] [{] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [}] [Else] [If] [(] [I] [<] [100] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [}] [If] [(] [I] [<] [10] [)] [{] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [}] [Else] [If] [(] [I] [<] [100] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-test2.log"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-test2.log.1"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-test2.log.2"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-test2.log.3"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, False] [(] [New] [File] [(] ["output/, Rfa-test2.log.4"] [)] [.] [Exists] [(] [)] [)] [;] [Test2, Param, Constructor] [Simple, Layout] [Layout] [=] [New] [Simple, Layout] [(] [)] [;] [Rolling, File, Appender] [Appender] [=] [New] [Rolling, File, Appender] [(] [Layout] [,] ["output/rfa2param.log"] [)] [;] [Assert, Equals] [(] [1] [,] [Appender] [.] [Get, Max, Backup, Index] [(] [)] [)] [;] [Assert, Equals] [(] [10] [*] [1024] [*] [1024] [,] [Appender] [.] [Get, Maximum, File, Size] [(] [)] [)] [;] [Test3, Param, Constructor] [Simple, Layout] [Layout] [=] [New] [Simple, Layout] [(] [)] [;] [Rolling, File, Appender] [Appender] [=] [New] [Rolling, File, Appender] [(] [Layout] [,] ["output/rfa3param.log"] [,] [False] [)] [;] [Assert, Equals] [(] [1] [,] [Appender] [.] [Get, Max, Backup, Index] [(] [)] [)] [;] [Test, Lock, Dot, One] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Rfa, Test, Case] [.] [Class] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Pattern, Layout] [Layout] [=] [New] [Pattern, Layout] [(] ["%m\n"] [)] [;] [Org] [.] [Apache] [.] [Log4j] [.] [Rolling, File, Appender] [Rfa] [=] [New] [Org] [.] [Apache] [.] [Log4j] [.] [Rolling, File, Appender] [(] [)] [;] [Rfa] [.] [Set, Name] [(] [", Rolling"] [)] [;] [Rfa] [.] [Set, Layout] [(] [Layout] [)] [;] [Rfa] [.] [Set, Append] [(] [False] [)] [;] [Rfa] [.] [Set, Max, Backup, Index] [(] [10] [)] [;] [Rfa] [.] [Set, Maximum, File, Size] [(] [100] [)] [;] [Rfa] [.] [Set, File] [(] ["output/, Rfa-dot1.log"] [)] [;] [Rfa] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Rfa] [)] [;] [New] [File] [(] ["output/, Rfa-dot1.log.2"] [)] [.] [Delete] [(] [)] [;] [File, Writer] [Dot1] [=] [New] [File, Writer] [(] ["output/, Rfa-dot1.log.1"] [)] [;] [Dot1] [.] [Write] [(] [", Locked file"] [)] [;] [File, Writer] [Dot5] [=] [New] [File, Writer] [(] ["output/, Rfa-dot1.log.5"] [)] [;] [Dot5] [.] [Write] [(] [", Unlocked file"] [)] [;] [Dot5] [.] [Close] [(] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [15] [;] [I] [++] [)] [{] [If] [(] [I] [<] [10] [)] [{] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [}] [Else] [If] [(] [I] [<] [100] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [}] [If] [(] [I] [<] [10] [)] [{] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [}] [Else] [If] [(] [I] [<] [100] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [Dot1] [.] [Close] [(] [)] [;] [For] [(] [Int] [I] [=] [15] [;] [I] [<] [25] [;] [I] [++] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [Rfa] [.] [Close] [(] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot1.log.7"] [)] [.] [Exists] [(] [)] [)] [;] [If] [(] [New] [File] [(] ["output/, Rfa-dot1.log.2"] [)] [.] [Length] [(] [)] [<] [15] [)] [{] [Assert, Equals] [(] [50] [,] [New] [File] [(] ["output/, Rfa-dot1.log"] [)] [.] [Length] [(] [)] [)] [;] [Assert, Equals] [(] [200] [,] [New] [File] [(] ["output/, Rfa-dot1.log.1"] [)] [.] [Length] [(] [)] [)] [;] [}] [Else] [{] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot1.log"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot1.log.1"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot1.log.2"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot1.log.3"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, False] [(] [New] [File] [(] ["output/, Rfa-dot1.log.4"] [)] [.] [Exists] [(] [)] [)] [;] [}] [Assert, Equals] [(] [50] [,] [New] [File] [(] ["output/, Rfa-dot1.log"] [)] [.] [Length] [(] [)] [)] [;] [Assert, Equals] [(] [200] [,] [New] [File] [(] ["output/, Rfa-dot1.log.1"] [)] [.] [Length] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot1.log"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot1.log.1"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot1.log.2"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot1.log.3"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, False] [(] [New] [File] [(] ["output/, Rfa-dot1.log.4"] [)] [.] [Exists] [(] [)] [)] [;] [Test, Lock, Dot, Three] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Rfa, Test, Case] [.] [Class] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Pattern, Layout] [Layout] [=] [New] [Pattern, Layout] [(] ["%m\n"] [)] [;] [Org] [.] [Apache] [.] [Log4j] [.] [Rolling, File, Appender] [Rfa] [=] [New] [Org] [.] [Apache] [.] [Log4j] [.] [Rolling, File, Appender] [(] [)] [;] [Rfa] [.] [Set, Name] [(] [", Rolling"] [)] [;] [Rfa] [.] [Set, Layout] [(] [Layout] [)] [;] [Rfa] [.] [Set, Append] [(] [False] [)] [;] [Rfa] [.] [Set, Max, Backup, Index] [(] [10] [)] [;] [Rfa] [.] [Set, Maximum, File, Size] [(] [100] [)] [;] [Rfa] [.] [Set, File] [(] ["output/, Rfa-dot3.log"] [)] [;] [Rfa] [.] [Activate, Options] [(] [)] [;] [Root] [.] [Add, Appender] [(] [Rfa] [)] [;] [New] [File] [(] ["output/, Rfa-dot3.log.1"] [)] [.] [Delete] [(] [)] [;] [New] [File] [(] ["output/, Rfa-dot3.log.2"] [)] [.] [Delete] [(] [)] [;] [New] [File] [(] ["output/, Rfa-dot3.log.4"] [)] [.] [Delete] [(] [)] [;] [File, Writer] [Dot3] [=] [New] [File, Writer] [(] ["output/, Rfa-dot3.log.3"] [)] [;] [Dot3] [.] [Write] [(] [", Locked file"] [)] [;] [File, Writer] [Dot5] [=] [New] [File, Writer] [(] ["output/, Rfa-dot3.log.5"] [)] [;] [Dot5] [.] [Write] [(] [", Unlocked file"] [)] [;] [Dot5] [.] [Close] [(] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [15] [;] [I] [++] [)] [{] [If] [(] [I] [<] [10] [)] [{] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [}] [Else] [If] [(] [I] [<] [100] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [}] [If] [(] [I] [<] [10] [)] [{] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [}] [Else] [If] [(] [I] [<] [100] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [Dot3] [.] [Close] [(] [)] [;] [For] [(] [Int] [I] [=] [15] [;] [I] [<] [35] [;] [I] [++] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [Rfa] [.] [Close] [(] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot3.log.8"] [)] [.] [Exists] [(] [)] [)] [;] [If] [(] [New] [File] [(] ["output/, Rfa-dot3.log.5"] [)] [.] [Exists] [(] [)] [)] [{] [Assert, Equals] [(] [50] [,] [New] [File] [(] ["output/, Rfa-dot3.log"] [)] [.] [Length] [(] [)] [)] [;] [Assert, Equals] [(] [100] [,] [New] [File] [(] ["output/, Rfa-dot3.log.1"] [)] [.] [Length] [(] [)] [)] [;] [Assert, Equals] [(] [200] [,] [New] [File] [(] ["output/, Rfa-dot3.log.2"] [)] [.] [Length] [(] [)] [)] [;] [}] [Else] [{] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot3.log"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot3.log.1"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot3.log.2"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot3.log.3"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, False] [(] [New] [File] [(] ["output/, Rfa-dot3.log.4"] [)] [.] [Exists] [(] [)] [)] [;] [}] [Assert, Equals] [(] [50] [,] [New] [File] [(] ["output/, Rfa-dot3.log"] [)] [.] [Length] [(] [)] [)] [;] [Assert, Equals] [(] [100] [,] [New] [File] [(] ["output/, Rfa-dot3.log.1"] [)] [.] [Length] [(] [)] [)] [;] [Assert, Equals] [(] [200] [,] [New] [File] [(] ["output/, Rfa-dot3.log.2"] [)] [.] [Length] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot3.log"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot3.log.1"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot3.log.2"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Rfa-dot3.log.3"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, False] [(] [New] [File] [(] ["output/, Rfa-dot3.log.4"] [)] [.] [Exists] [(] [)] [)] [;]
Class LocationInfoTest@@ [Test, Four, Param, Constructor] [Final] [String] [Class, Name] [=] [Location, Info, Test] [.] [Class] [.] [Get, Name] [(] [)] [;] [Final] [String] [Method, Name] [=] ["test, Four, Param, Constructor"] [;] [Final] [String] [File, Name] [=] [", Location, Info, Test.java"] [;] [Final] [String] [Line, Number] [=] ["41"] [;] [Location, Info] [Li] [=] [New] [Location, Info] [(] [File, Name] [,] [Class, Name] [,] [Method, Name] [,] [Line, Number] [)] [;] [Assert, Equals] [(] [Class, Name] [,] [Li] [.] [Get, Class, Name] [(] [)] [)] [;] [Assert, Equals] [(] [Method, Name] [,] [Li] [.] [Get, Method, Name] [(] [)] [)] [;] [Assert, Equals] [(] [File, Name] [,] [Li] [.] [Get, File, Name] [(] [)] [)] [;] [Assert, Equals] [(] [Line, Number] [,] [Li] [.] [Get, Line, Number] [(] [)] [)] [;] [Assert, Equals] [(] [Class, Name] [+] ["."] [+] [Method, Name] [+] ["("] [+] [File, Name] [+] [":"] [+] [Line, Number] [+] [")"] [,] [Li] [.] [Full, Info] [)] [;]
Class NameSubstring@@ [Get, Info] [Return] [New] [Location, Info] [(] [New] [Throwable] [(] [)] [,] [Name, Substring] [.] [Class] [.] [Get, Name] [(] [)] [)] [;]
Class NameSubstringCaller@@ [Get, Info] [Return] [Name, Substring] [.] [Get, Info] [(] [)] [;] [Test, Location, Info] [Location, Info] [Li] [=] [Name, Substring, Caller] [.] [Get, Info] [(] [)] [;] [Assert, Equals] [(] [Name, Substring, Caller] [.] [Class] [.] [Get, Name] [(] [)] [,] [Li] [.] [Get, Class, Name] [(] [)] [)] [;] [Assert, Equals] [(] ["get, Info"] [,] [Li] [.] [Get, Method, Name] [(] [)] [)] [;]
Class LoggingEventTest@@ [Test, Serialization, Simple] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Root] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [,] [Root] [,] [Level] [.] [Info] [,] [", Hello, world."] [,] [Null] [)] [;] [Int] [[] []] [Skip] [=] [New] [Int] [[] []] [{] [352] [,] [353] [,] [354] [,] [355] [,] [356] [}] [;] [Serialization, Test, Helper] [.] [Assert, Serialization, Equals] [(] ["witness/serialization/simple.bin"] [,] [Event] [,] [Skip] [,] [237] [)] [;] [Test, Serialization, With, Exception] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Exception] [Ex] [=] [New] [Exception] [(] [", Don't panic"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Root] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [,] [Root] [,] [Level] [.] [Info] [,] [", Hello, world."] [,] [Ex] [)] [;] [Int] [[] []] [Skip] [=] [New] [Int] [[] []] [{] [352] [,] [353] [,] [354] [,] [355] [,] [356] [}] [;] [Serialization, Test, Helper] [.] [Assert, Serialization, Equals] [(] ["witness/serialization/exception.bin"] [,] [Event] [,] [Skip] [,] [237] [)] [;] [Test, Serialization, With, Location] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Root] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [,] [Root] [,] [Level] [.] [Info] [,] [", Hello, world."] [,] [Null] [)] [;] [Event] [.] [Get, Location, Information] [(] [)] [;] [Int] [[] []] [Skip] [=] [New] [Int] [[] []] [{] [352] [,] [353] [,] [354] [,] [355] [,] [356] [}] [;] [Serialization, Test, Helper] [.] [Assert, Serialization, Equals] [(] ["witness/serialization/location.bin"] [,] [Event] [,] [Skip] [,] [237] [)] [;] [Test, Serialization, Ndc] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Ndc] [.] [Push] [(] ["ndc test"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Root] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [,] [Root] [,] [Level] [.] [Info] [,] [", Hello, world."] [,] [Null] [)] [;] [Int] [[] []] [Skip] [=] [New] [Int] [[] []] [{] [352] [,] [353] [,] [354] [,] [355] [,] [356] [}] [;] [Serialization, Test, Helper] [.] [Assert, Serialization, Equals] [(] ["witness/serialization/ndc.bin"] [,] [Event] [,] [Skip] [,] [237] [)] [;] [Test, Serialization, Mdc] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Mdc] [.] [Put] [(] ["mdckey"] [,] ["mdcvalue"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Root] [.] [Get, Class] [(] [)] [.] [Get, Name] [(] [)] [,] [Root] [,] [Level] [.] [Info] [,] [", Hello, world."] [,] [Null] [)] [;] [Int] [[] []] [Skip] [=] [New] [Int] [[] []] [{] [352] [,] [353] [,] [354] [,] [355] [,] [356] [}] [;] [Serialization, Test, Helper] [.] [Assert, Serialization, Equals] [(] ["witness/serialization/mdc.bin"] [,] [Event] [,] [Skip] [,] [237] [)] [;] [Test, Deserialization, Simple] [Object] [Obj] [=] [Serialization, Test, Helper] [.] [Deserialize, Stream] [(] ["witness/serialization/simple.bin"] [)] [;] [Assert, True] [(] [Obj] [Instanceof] [Logging, Event] [)] [;] [Logging, Event] [Event] [=] [(] [Logging, Event] [)] [Obj] [;] [Assert, Equals] [(] [", Hello, world."] [,] [Event] [.] [Get, Message] [(] [)] [)] [;] [Assert, Equals] [(] [Level] [.] [Info] [,] [Event] [.] [Get, Level] [(] [)] [)] [;] [Test, Deserialization, With, Exception] [Object] [Obj] [=] [Serialization, Test, Helper] [.] [Deserialize, Stream] [(] ["witness/serialization/exception.bin"] [)] [;] [Assert, True] [(] [Obj] [Instanceof] [Logging, Event] [)] [;] [Logging, Event] [Event] [=] [(] [Logging, Event] [)] [Obj] [;] [Assert, Equals] [(] [", Hello, world."] [,] [Event] [.] [Get, Message] [(] [)] [)] [;] [Assert, Equals] [(] [Level] [.] [Info] [,] [Event] [.] [Get, Level] [(] [)] [)] [;] [Test, Deserialization, With, Location] [Object] [Obj] [=] [Serialization, Test, Helper] [.] [Deserialize, Stream] [(] ["witness/serialization/location.bin"] [)] [;] [Assert, True] [(] [Obj] [Instanceof] [Logging, Event] [)] [;] [Logging, Event] [Event] [=] [(] [Logging, Event] [)] [Obj] [;] [Assert, Equals] [(] [", Hello, world."] [,] [Event] [.] [Get, Message] [(] [)] [)] [;] [Assert, Equals] [(] [Level] [.] [Info] [,] [Event] [.] [Get, Level] [(] [)] [)] [;] [Test, Fqn, Of, Category, Class] [Category] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Priority] [Info] [=] [Level] [.] [Info] [;] [String] [Cat, Name] [=] [Logger] [.] [Class] [.] [To, String] [(] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Cat, Name] [,] [Root] [,] [Info] [,] [", Hello, world."] [,] [Null] [)] [;] [Assert, Equals] [(] [Cat, Name] [,] [Event] [.] [Fqn, Of, Category, Class] [)] [;] [Test, Level] [Category] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Priority] [Info] [=] [Level] [.] [Info] [;] [String] [Cat, Name] [=] [Logger] [.] [Class] [.] [To, String] [(] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Cat, Name] [,] [Root] [,] [0, L] [,] [Info] [,] [", Hello, world."] [,] [Null] [)] [;] [Priority] [Error] [=] [Level] [.] [Error] [;] [Event] [.] [Level] [=] [Error] [;] [Assert, Equals] [(] [Level] [.] [Error] [,] [Event] [.] [Level] [)] [;] [Test, Location, Info, No, Fqcn] [Category] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Priority] [Level] [=] [Level] [.] [Info] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Null] [,] [Root] [,] [0, L] [,] [Level] [,] [", Hello, world."] [,] [Null] [)] [;] [Location, Info] [Info] [=] [Event] [.] [Get, Location, Information] [(] [)] [;] [Assert, Not, Null] [(] [Info] [)] [;] [If] [(] [Info] [!=] [Null] [)] [{] [Assert, Equals] [(] ["?"] [,] [Info] [.] [Get, Line, Number] [(] [)] [)] [;] [Assert, Equals] [(] ["?"] [,] [Info] [.] [Get, Class, Name] [(] [)] [)] [;] [Assert, Equals] [(] ["?"] [,] [Info] [.] [Get, File, Name] [(] [)] [)] [;] [Assert, Equals] [(] ["?"] [,] [Info] [.] [Get, Method, Name] [(] [)] [)] [;] [}] [Assert, Equals] [(] ["?"] [,] [Info] [.] [Get, Line, Number] [(] [)] [)] [;] [Assert, Equals] [(] ["?"] [,] [Info] [.] [Get, Class, Name] [(] [)] [)] [;] [Assert, Equals] [(] ["?"] [,] [Info] [.] [Get, File, Name] [(] [)] [)] [;] [Assert, Equals] [(] ["?"] [,] [Info] [.] [Get, Method, Name] [(] [)] [)] [;]
Class BadMessage@@ [To, String] [Throw] [New] [Runtime, Exception] [(] [)] [;] [Test, Bad, Message] [Category] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Priority] [Info] [=] [Level] [.] [Info] [;] [String] [Cat, Name] [=] [Logger] [.] [Class] [.] [To, String] [(] [)] [;] [Bad, Message] [Msg] [=] [New] [Bad, Message] [(] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Cat, Name] [,] [Root] [,] [0, L] [,] [Info] [,] [Msg] [,] [Null] [)] [;] [Event] [.] [Get, Rendered, Message] [(] [)] [;]
Class ThrowableInformationTest@@
Class OverriddenThrowable@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Print, Stack, Trace] [S] [.] [Print] [(] [(] [Object] [)] ["print(, Object)"] [)] [;] [S] [.] [Print] [(] ["print(char[])"] [.] [To, Char, Array] [(] [)] [)] [;] [S] [.] [Print] [(] ["print(, String)"] [)] [;] [S] [.] [Println] [(] [(] [Object] [)] ["println(, Object)"] [)] [;] [S] [.] [Println] [(] ["println(char[])"] [.] [To, Char, Array] [(] [)] [)] [;] [S] [.] [Println] [(] ["println(, String)"] [)] [;] [S] [.] [Write] [(] ["write(char[])"] [.] [To, Char, Array] [(] [)] [)] [;] [S] [.] [Write] [(] ["write(char[], int, int)"] [.] [To, Char, Array] [(] [)] [,] [2] [,] [8] [)] [;] [S] [.] [Write] [(] ["write(, String, int, int)"] [,] [2] [,] [8] [)] [;] [Test, Overridden, Behavior] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [New] [Overridden, Throwable] [(] [)] [)] [;] [String] [[] []] [Rep] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [4] [,] [Rep] [.] [Length] [)] [;] [Assert, Equals] [(] ["print(, Object)print(char[])print(, String)println(, Object)"] [,] [Rep] [[] [0] []] [)] [;] [Assert, Equals] [(] ["println(char[])"] [,] [Rep] [[] [1] []] [)] [;] [Assert, Equals] [(] ["println(, String)"] [,] [Rep] [[] [2] []] [)] [;] [Assert, Equals] [(] ["write(char[])ite(charite(, Stri"] [,] [Rep] [[] [3] []] [)] [;]
Class NotOverriddenThrowable@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Print, Stack, Trace] [S] [.] [Print] [(] [True] [)] [;] [S] [.] [Print] [(] ['a'] [)] [;] [S] [.] [Print] [(] [1] [)] [;] [S] [.] [Print] [(] [2, L] [)] [;] [S] [.] [Print] [(] [Float] [.] [Max, Value] [)] [;] [S] [.] [Print] [(] [Double] [.] [Min, Value] [)] [;] [S] [.] [Println] [(] [True] [)] [;] [S] [.] [Println] [(] ['a'] [)] [;] [S] [.] [Println] [(] [1] [)] [;] [S] [.] [Println] [(] [2, L] [)] [;] [S] [.] [Println] [(] [Float] [.] [Max, Value] [)] [;] [S] [.] [Println] [(] [Double] [.] [Min, Value] [)] [;] [S] [.] [Write] [(] [', C'] [)] [;] [Test, Not, Overridden, Behavior] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [New] [Not, Overridden, Throwable] [(] [)] [)] [;] [String] [[] []] [Rep] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [7] [,] [Rep] [.] [Length] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [String] [.] [Value, Of] [(] [True] [)] [)] [;] [Buf] [.] [Append] [(] ['a'] [)] [;] [Buf] [.] [Append] [(] [String] [.] [Value, Of] [(] [1] [)] [)] [;] [Buf] [.] [Append] [(] [String] [.] [Value, Of] [(] [2, L] [)] [)] [;] [Buf] [.] [Append] [(] [String] [.] [Value, Of] [(] [Float] [.] [Max, Value] [)] [)] [;] [Buf] [.] [Append] [(] [String] [.] [Value, Of] [(] [Double] [.] [Min, Value] [)] [)] [;] [Buf] [.] [Append] [(] [String] [.] [Value, Of] [(] [True] [)] [)] [;] [Assert, Equals] [(] [Buf] [.] [To, String] [(] [)] [,] [Rep] [[] [0] []] [)] [;] [Assert, Equals] [(] ["a"] [,] [Rep] [[] [1] []] [)] [;] [Assert, Equals] [(] [String] [.] [Value, Of] [(] [1] [)] [,] [Rep] [[] [2] []] [)] [;] [Assert, Equals] [(] [String] [.] [Value, Of] [(] [2, L] [)] [,] [Rep] [[] [3] []] [)] [;] [Assert, Equals] [(] [String] [.] [Value, Of] [(] [Float] [.] [Max, Value] [)] [,] [Rep] [[] [4] []] [)] [;] [Assert, Equals] [(] [String] [.] [Value, Of] [(] [Double] [.] [Min, Value] [)] [,] [Rep] [[] [5] []] [)] [;] [Assert, Equals] [(] [", C"] [,] [Rep] [[] [6] []] [)] [;]
Class NullThrowable@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Print, Stack, Trace] [S] [.] [Print] [(] [(] [Object] [)] [Null] [)] [;] [S] [.] [Print] [(] [(] [String] [)] [Null] [)] [;] [S] [.] [Println] [(] [(] [Object] [)] [Null] [)] [;] [S] [.] [Println] [(] [(] [String] [)] [Null] [)] [;] [Test, Null] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [New] [Null, Throwable] [(] [)] [)] [;] [String] [[] []] [Rep] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [2] [,] [Rep] [.] [Length] [)] [;] [String] [Null, Str] [=] [String] [.] [Value, Of] [(] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [Null, Str] [+] [Null, Str] [+] [Null, Str] [,] [Rep] [[] [0] []] [)] [;] [Assert, Equals] [(] [Null, Str] [,] [Rep] [[] [1] []] [)] [;]
Class EmptyThrowable@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Print, Stack, Trace] [Test, Empty] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [New] [Empty, Throwable] [(] [)] [)] [;] [String] [[] []] [Rep] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [0] [,] [Rep] [.] [Length] [)] [;]
Class StringThrowable@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Private] [Final] [String] [Stack, Trace] [;] [Stack, Trace] [=] [Trace] [;] [Print, Stack, Trace] [S] [.] [Print] [(] [Stack, Trace] [)] [;] [Test, Line, Feed] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [New] [String, Throwable] [(] ["\n"] [)] [)] [;] [String] [[] []] [Rep] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [1] [,] [Rep] [.] [Length] [)] [;] [Assert, Equals] [(] [""] [,] [Rep] [[] [0] []] [)] [;] [Test, Carriage, Return] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [New] [String, Throwable] [(] ["\r"] [)] [)] [;] [String] [[] []] [Rep] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [1] [,] [Rep] [.] [Length] [)] [;] [Assert, Equals] [(] [""] [,] [Rep] [[] [0] []] [)] [;] [Test, Parsing] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [New] [String, Throwable] [(] [", Line1\r, Line2\n, Line3\r\n, Line4\n\r, Line6"] [)] [)] [;] [String] [[] []] [Rep] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [6] [,] [Rep] [.] [Length] [)] [;] [Assert, Equals] [(] [", Line1"] [,] [Rep] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Line2"] [,] [Rep] [[] [1] []] [)] [;] [Assert, Equals] [(] [", Line3"] [,] [Rep] [[] [2] []] [)] [;] [Assert, Equals] [(] [", Line4"] [,] [Rep] [[] [3] []] [)] [;] [Assert, Equals] [(] [""] [,] [Rep] [[] [4] []] [)] [;] [Assert, Equals] [(] [", Line6"] [,] [Rep] [[] [5] []] [)] [;] [Test, Line, Feed, Blank] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [New] [String, Throwable] [(] ["\n "] [)] [)] [;] [String] [[] []] [Rep] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [2] [,] [Rep] [.] [Length] [)] [;] [Assert, Equals] [(] [""] [,] [Rep] [[] [0] []] [)] [;] [Assert, Equals] [(] [" "] [,] [Rep] [[] [1] []] [)] [;] [Test, Get, Throwable] [Throwable] [T] [=] [New] [String, Throwable] [(] [", Hello, , World"] [)] [;] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [T] [)] [;] [Assert, Same] [(] [T] [,] [Ti] [.] [Get, Throwable] [(] [)] [)] [;] [Test, Isolation] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [New] [String, Throwable] [(] [", Hello, , World"] [)] [)] [;] [String] [[] []] [Rep] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Rep] [[] [0] []] [)] [;] [Rep] [[] [0] []] [=] [", Bonjour, , Monde"] [;] [String] [[] []] [Rep2] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Rep2] [[] [0] []] [)] [;]
Class NastyThrowable@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Print, Stack, Trace] [S] [.] [Print] [(] [", Nasty, Exception"] [)] [;] [Throw] [New] [Runtime, Exception] [(] [", Intentional exception"] [)] [;] [Test, Nasty, Exception] [Throwable, Information] [Ti] [=] [New] [Throwable, Information] [(] [New] [Nasty, Throwable] [(] [)] [)] [;] [String] [[] []] [Rep] [=] [Ti] [.] [Get, Throwable, Str, Rep] [(] [)] [;] [Assert, Equals] [(] [", Nasty, Exception"] [,] [Rep] [[] [0] []] [)] [;]
Class StressCategory@@ [Static] [Level[]] [Level=new, Level[]{, Level., Debug,, Level., Info,, Level., Warn,, Level., Error,, Level., Fatal}] [;] [Static] [Level] [Default, Level=, Logger.get, Root, Logger().get, Level()] [;] [Static] [Int] [Length] [;] [Static] [String[]] [Names] [;] [Static] [Logger[]] [Cat] [;] [Static] [Ct[]] [Ct] [;] [Static] [Random] [Random=new, Random(10)] [;] [Main] [Length] [=] [Args] [.] [Length] [;] [If] [(] [Length] [==] [0] [)] [{] [System] [.] [Err] [.] [Println] [(] [", Usage: java "] [+] [Stress, Category] [.] [Class] [.] [Get, Name] [(] [)] [+] [" name1 ... name, N\n."] [)] [;] [System] [.] [Exit] [(] [1] [)] [;] [}] [System] [.] [Err] [.] [Println] [(] [", Usage: java "] [+] [Stress, Category] [.] [Class] [.] [Get, Name] [(] [)] [+] [" name1 ... name, N\n."] [)] [;] [System] [.] [Exit] [(] [1] [)] [;] [If] [(] [Length] [>=] [7] [)] [{] [System] [.] [Err] [.] [Println] [(] [", This stress test suffers from combinatorial explosion.\n"] [+] [", Invoking with seven arguments takes about 90 minutes even on fast machines"] [)] [;] [}] [System] [.] [Err] [.] [Println] [(] [", This stress test suffers from combinatorial explosion.\n"] [+] [", Invoking with seven arguments takes about 90 minutes even on fast machines"] [)] [;] [Names] [=] [New] [String] [[] [Length] []] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Length] [;] [I] [++] [)] [{] [Names] [[] [I] []] [=] [Args] [[] [I] []] [;] [}] [Names] [[] [I] []] [=] [Args] [[] [I] []] [;] [Cat] [=] [New] [Logger] [[] [Length] []] [;] [Ct] [=] [New] [Ct] [[] [Length] []] [;] [Permute] [(] [0] [)] [;] [Permute] [If] [(] [N] [==] [Length] [)] [Create, Loop] [(] [0] [)] [;] [Else] [For] [(] [Int] [I] [=] [N] [;] [I] [<] [Length] [;] [I] [++] [)] [{] [Swap] [(] [Names] [,] [N] [,] [I] [)] [;] [Permute] [(] [N] [+] [1] [)] [;] [Swap] [(] [Names] [,] [N] [,] [I] [)] [;] [}] [Swap] [(] [Names] [,] [N] [,] [I] [)] [;] [Permute] [(] [N] [+] [1] [)] [;] [Swap] [(] [Names] [,] [N] [,] [I] [)] [;] [Swap] [String] [T] [=] [Names] [[] [I] []] [;] [Names] [[] [I] []] [=] [Names] [[] [J] []] [;] [Names] [[] [J] []] [=] [T] [;] [Permutation, Dump] [System] [.] [Out] [.] [Print] [(] [", Current permutation is - "] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Length] [;] [I] [++] [)] [{] [System] [.] [Out] [.] [Print] [(] [Names] [[] [I] []] [+] [" "] [)] [;] [}] [System] [.] [Out] [.] [Print] [(] [Names] [[] [I] []] [+] [" "] [)] [;] [System] [.] [Out] [.] [Println] [(] [)] [;] [Create, Loop] [If] [(] [N] [==] [Length] [)] [{] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Length] [;] [I] [++] [)] [{] [If] [(] [Ct] [[] [I] []] [==] [Null] [)] [Cat] [[] [I] []] [=] [Null] [;] [Else] [{] [Cat] [[] [I] []] [=] [Logger] [.] [Get, Logger] [(] [Ct] [[] [I] []] [.] [Catstr] [)] [;] [Cat] [[] [I] []] [.] [Set, Level] [(] [Ct] [[] [I] []] [.] [Level] [)] [;] [}] [}] [Test] [(] [)] [;] [Hierarchy] [H] [=] [(] [Hierarchy] [)] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [;] [H] [.] [Clear] [(] [)] [;] [}] [Else] [{] [Ct] [[] [N] []] [=] [Null] [;] [Create, Loop] [(] [N] [+] [1] [)] [;] [Ct] [[] [N] []] [=] [New] [Ct] [(] [Names] [[] [N] []] [,] [Null] [)] [;] [Create, Loop] [(] [N] [+] [1] [)] [;] [Int] [R] [=] [Random] [.] [Next, Int] [(] [)] [;] [If] [(] [R] [<] [0] [)] [R] [=] [-] [R] [;] [Ct] [[] [N] []] [=] [New] [Ct] [(] [Names] [[] [N] []] [,] [Level] [[] [R] [%] [5] []] [)] [;] [Create, Loop] [(] [N] [+] [1] [)] [;] [}] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Length] [;] [I] [++] [)] [{] [If] [(] [Ct] [[] [I] []] [==] [Null] [)] [Cat] [[] [I] []] [=] [Null] [;] [Else] [{] [Cat] [[] [I] []] [=] [Logger] [.] [Get, Logger] [(] [Ct] [[] [I] []] [.] [Catstr] [)] [;] [Cat] [[] [I] []] [.] [Set, Level] [(] [Ct] [[] [I] []] [.] [Level] [)] [;] [}] [}] [If] [(] [Ct] [[] [I] []] [==] [Null] [)] [Cat] [[] [I] []] [=] [Null] [;] [Else] [{] [Cat] [[] [I] []] [=] [Logger] [.] [Get, Logger] [(] [Ct] [[] [I] []] [.] [Catstr] [)] [;] [Cat] [[] [I] []] [.] [Set, Level] [(] [Ct] [[] [I] []] [.] [Level] [)] [;] [}] [Cat] [[] [I] []] [=] [Logger] [.] [Get, Logger] [(] [Ct] [[] [I] []] [.] [Catstr] [)] [;] [Cat] [[] [I] []] [.] [Set, Level] [(] [Ct] [[] [I] []] [.] [Level] [)] [;] [Test] [(] [)] [;] [Hierarchy] [H] [=] [(] [Hierarchy] [)] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [;] [H] [.] [Clear] [(] [)] [;] [Ct] [[] [N] []] [=] [Null] [;] [Create, Loop] [(] [N] [+] [1] [)] [;] [Ct] [[] [N] []] [=] [New] [Ct] [(] [Names] [[] [N] []] [,] [Null] [)] [;] [Create, Loop] [(] [N] [+] [1] [)] [;] [Int] [R] [=] [Random] [.] [Next, Int] [(] [)] [;] [If] [(] [R] [<] [0] [)] [R] [=] [-] [R] [;] [Ct] [[] [N] []] [=] [New] [Ct] [(] [Names] [[] [N] []] [,] [Level] [[] [R] [%] [5] []] [)] [;] [Create, Loop] [(] [N] [+] [1] [)] [;] [Test] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Length] [;] [I] [++] [)] [{] [If] [(] [!] [Check, Correctness] [(] [I] [)] [)] [{] [System] [.] [Out] [.] [Println] [(] [", Failed stress test."] [)] [;] [Permutation, Dump] [(] [)] [;] [Ct, Dump] [(] [)] [;] [Cat, Dump] [(] [)] [;] [System] [.] [Exit] [(] [1] [)] [;] [}] [}] [If] [(] [!] [Check, Correctness] [(] [I] [)] [)] [{] [System] [.] [Out] [.] [Println] [(] [", Failed stress test."] [)] [;] [Permutation, Dump] [(] [)] [;] [Ct, Dump] [(] [)] [;] [Cat, Dump] [(] [)] [;] [System] [.] [Exit] [(] [1] [)] [;] [}] [System] [.] [Out] [.] [Println] [(] [", Failed stress test."] [)] [;] [Permutation, Dump] [(] [)] [;] [Ct, Dump] [(] [)] [;] [Cat, Dump] [(] [)] [;] [System] [.] [Exit] [(] [1] [)] [;] [Ct, Dump] [For] [(] [Int] [J] [=] [0] [;] [J] [<] [Length] [;] [J] [++] [)] [{] [If] [(] [Ct] [[] [J] []] [!=] [Null] [)] [System] [.] [Out] [.] [Println] [(] ["ct ["] [+] [J] [+] ["] = ("] [+] [Ct] [[] [J] []] [.] [Catstr] [+] [","] [+] [Ct] [[] [J] []] [.] [Level] [+] [")"] [)] [;] [Else] [System] [.] [Out] [.] [Println] [(] ["ct ["] [+] [J] [+] ["] = undefined"] [)] [;] [}] [If] [(] [Ct] [[] [J] []] [!=] [Null] [)] [System] [.] [Out] [.] [Println] [(] ["ct ["] [+] [J] [+] ["] = ("] [+] [Ct] [[] [J] []] [.] [Catstr] [+] [","] [+] [Ct] [[] [J] []] [.] [Level] [+] [")"] [)] [;] [Else] [System] [.] [Out] [.] [Println] [(] ["ct ["] [+] [J] [+] ["] = undefined"] [)] [;] [Cat, Dump] [For] [(] [Int] [J] [=] [0] [;] [J] [<] [Length] [;] [J] [++] [)] [{] [If] [(] [Cat] [[] [J] []] [!=] [Null] [)] [System] [.] [Out] [.] [Println] [(] ["cat["] [+] [J] [+] ["] = ("] [+] [Cat] [[] [J] []] [.] [Name] [+] [","] [+] [Cat] [[] [J] []] [.] [Get, Level] [(] [)] [+] [")"] [)] [;] [Else] [System] [.] [Out] [.] [Println] [(] ["cat["] [+] [J] [+] ["] = undefined"] [)] [;] [}] [If] [(] [Cat] [[] [J] []] [!=] [Null] [)] [System] [.] [Out] [.] [Println] [(] ["cat["] [+] [J] [+] ["] = ("] [+] [Cat] [[] [J] []] [.] [Name] [+] [","] [+] [Cat] [[] [J] []] [.] [Get, Level] [(] [)] [+] [")"] [)] [;] [Else] [System] [.] [Out] [.] [Println] [(] ["cat["] [+] [J] [+] ["] = undefined"] [)] [;] [Check, Correctness] [Ct] [Local, Ct] [=] [Ct] [[] [I] []] [;] [If] [(] [Local, Ct] [==] [Null] [)] [Return] [True] [;] [Level] [Expected] [=] [Get, Expected, Prioriy] [(] [Local, Ct] [)] [;] [Level] [Purported] [=] [Cat] [[] [I] []] [.] [Get, Effective, Level] [(] [)] [;] [If] [(] [Expected] [!=] [Purported] [)] [{] [System] [.] [Out] [.] [Println] [(] [", Expected level for "] [+] [Local, Ct] [.] [Catstr] [+] [" is "] [+] [Expected] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Purported level for "] [+] [Cat] [[] [I] []] [.] [Name] [+] [" is "] [+] [Purported] [)] [;] [Return] [False] [;] [}] [System] [.] [Out] [.] [Println] [(] [", Expected level for "] [+] [Local, Ct] [.] [Catstr] [+] [" is "] [+] [Expected] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Purported level for "] [+] [Cat] [[] [I] []] [.] [Name] [+] [" is "] [+] [Purported] [)] [;] [Return] [False] [;] [Return] [True] [;] [Get, Expected, Prioriy] [Level] [Level] [=] [Ct, Param] [.] [Level] [;] [If] [(] [Level] [!=] [Null] [)] [Return] [Level] [;] [String] [Catstr] [=] [Ct, Param] [.] [Catstr] [;] [For] [(] [Int] [I] [=] [Catstr] [.] [Last, Index, Of] [(] ['.'] [,] [Catstr] [.] [Length] [(] [)] [-] [1] [)] [;] [I] [>=] [0] [;] [I] [=] [Catstr] [.] [Last, Index, Of] [(] ['.'] [,] [I] [-] [1] [)] [)] [{] [String] [Substr] [=] [Catstr] [.] [Substring] [(] [0] [,] [I] [)] [;] [For] [(] [Int] [J] [=] [0] [;] [J] [<] [Length] [;] [J] [++] [)] [{] [If] [(] [Ct] [[] [J] []] [!=] [Null] [&&] [Substr] [.] [Equals] [(] [Ct] [[] [J] []] [.] [Catstr] [)] [)] [{] [Level] [P] [=] [Ct] [[] [J] []] [.] [Level] [;] [If] [(] [P] [!=] [Null] [)] [Return] [P] [;] [}] [}] [}] [String] [Substr] [=] [Catstr] [.] [Substring] [(] [0] [,] [I] [)] [;] [For] [(] [Int] [J] [=] [0] [;] [J] [<] [Length] [;] [J] [++] [)] [{] [If] [(] [Ct] [[] [J] []] [!=] [Null] [&&] [Substr] [.] [Equals] [(] [Ct] [[] [J] []] [.] [Catstr] [)] [)] [{] [Level] [P] [=] [Ct] [[] [J] []] [.] [Level] [;] [If] [(] [P] [!=] [Null] [)] [Return] [P] [;] [}] [}] [If] [(] [Ct] [[] [J] []] [!=] [Null] [&&] [Substr] [.] [Equals] [(] [Ct] [[] [J] []] [.] [Catstr] [)] [)] [{] [Level] [P] [=] [Ct] [[] [J] []] [.] [Level] [;] [If] [(] [P] [!=] [Null] [)] [Return] [P] [;] [}] [Level] [P] [=] [Ct] [[] [J] []] [.] [Level] [;] [If] [(] [P] [!=] [Null] [)] [Return] [P] [;] [Return] [Default, Level] [;]
Class CT@@ [Public] [String] [Catstr] [;] [Public] [Level] [Level] [;] [This] [.] [Catstr] [=] [Catstr] [;] [This] [.] [Level] [=] [Level] [;]
Class TestLogMF@@ [Private] [Static] [Final] [Level] [Trace=get, Trace, Level()] [;] [Get, Trace, Level] [Try] [{] [Return] [(] [Level] [)] [Level] [.] [Class] [.] [Get, Field] [(] [", Trace"] [)] [.] [Get] [(] [Null] [)] [;] [}] [Catch] [(] [Exception] [Ex] [)] [{] [Return] [New] [Level] [(] [5000] [,] [", Trace"] [,] [7] [)] [;] [}] [Return] [(] [Level] [)] [Level] [.] [Class] [.] [Get, Field] [(] [", Trace"] [)] [.] [Get] [(] [Null] [)] [;] [Return] [New] [Level] [(] [5000] [,] [", Trace"] [,] [7] [)] [;] [Private] [Final] [Logger] [Logger=, Logger.get, Logger("org.apache.log4j.formatter., Test, Log, Mf")] [;] [Tear, Down] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Test, Class, Name] [Char, Array, Writer] [Writer] [=] [New] [Char, Array, Writer] [(] [)] [;] [Pattern, Layout] [Layout] [=] [New] [Pattern, Layout] [(] ["%, C"] [)] [;] [Writer, Appender] [Appender] [=] [New] [Writer, Appender] [(] [Layout] [,] [Writer] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [.] [Get, Root, Logger] [(] [)] [.] [Add, Appender] [(] [Appender] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [Test, Log, Mf] [.] [Class] [.] [Get, Name] [(] [)] [,] [Writer] [.] [To, String] [(] [)] [)] [;] [Test, Trace, Null, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Hello, , World"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Hello, {."] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Hello, {0}, World"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {0}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Hello, {0}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Hello, {0}"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Int] [Val] [=] [42] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Short] [Val] [=] [42] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Long] [Val] [=] [42] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Float] [Val] [=] [3.14f] [;] [Number, Format] [Format] [=] [Number, Format] [.] [Get, Instance] [(] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration "] [+] [Format] [.] [Format] [(] [Val] [)] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Double] [Val] [=] [3.14] [;] [Number, Format] [Format] [=] [Number, Format] [.] [Get, Instance] [(] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration "] [+] [Format] [.] [Format] [(] [Val] [)] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] ["{1}, {0}."] [,] [", World"] [,] [", Hello"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] ["{1}{2} {0}."] [,] [", World"] [,] [", Hello"] [,] [","] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] ["{1}{2} {0}{3}"] [,] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [}] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] ["{1}{2} {0}{3}"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Null, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Object] [[] []] [Args] [=] [Null] [;] [Log, Mf] [.] [Trace] [(] [Logger] [,] ["{1}{2} {0}{3}"] [,] [Args] [)] [;] [Assert, Equals] [(] ["{1}{2} {0}{3}"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Null, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [Null] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Hello, , World"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Hello, {."] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Hello, {0}, World"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {0}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Hello, {0}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Hello, {0}"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Int] [Val] [=] [42] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Short] [Val] [=] [42] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Long] [Val] [=] [42] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Iteration {0}"] [,] [(] [Float] [)] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [New] [Float] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Iteration {0}"] [,] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [New] [Double] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] ["{1}, {0}."] [,] [", World"] [,] [", Hello"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] ["{1}{2} {0}."] [,] [", World"] [,] [", Hello"] [,] [","] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] ["{1}{2} {0}{3}"] [,] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [}] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] ["{1}{2} {0}{3}"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Date] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Date] [Epoch] [=] [New] [Date] [(] [0] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] [", Iteration {0}"] [,] [Epoch] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [Epoch] [}] [)] [;] [String] [Expected2] [=] [", Iteration "] [+] [Date, Format] [.] [Get, Date, Time, Instance] [(] [Date, Format] [.] [Short] [,] [Date, Format] [.] [Short] [)] [.] [Format] [(] [Epoch] [)] [;] [String] [Actual] [=] [Capture] [.] [Get, Message] [(] [)] [;] [If] [(] [System] [.] [Get, Property] [(] ["java.vendor"] [)] [.] [Index, Of] [(] [", Free"] [)] [==] [-] [1] [)] [{] [Assert, Equals] [(] [Expected] [,] [Actual] [)] [;] [}] [Assert, Equals] [(] [Expected] [,] [Actual] [)] [;] [Assert, Equals] [(] [Expected2] [,] [Actual] [)] [;] [Test, Debug, Null, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Object] [[] []] [Args] [=] [Null] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] ["{1}{2} {0}{3}"] [,] [Args] [)] [;] [Assert, Equals] [(] ["{1}{2} {0}{3}"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Percent] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] ["{0, number, percent}"] [,] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] ["{0, number, percent}"] [,] [New] [Object] [[] []] [{] [New] [Double] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Full, Precision, And, Percent] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] ["{0}{0, number, percent}"] [,] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] ["{0}{0, number, percent}"] [,] [New] [Object] [[] []] [{] [New] [Double] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Quoted] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Mf] [.] [Debug] [(] [Logger] [,] ["'{0}'"] [,] [", World"] [)] [;] [Assert, Equals] [(] ["{0}"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Null, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Hello, , World"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Hello, {."] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Hello, {0}, World"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {0}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Hello, {0}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Hello, {0}"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Int] [Val] [=] [42] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Short] [Val] [=] [42] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Long] [Val] [=] [42] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Iteration {0}"] [,] [(] [Float] [)] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [New] [Float] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Iteration {0}"] [,] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [New] [Double] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] ["{1}, {0}."] [,] [", World"] [,] [", Hello"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] ["{1}{2} {0}."] [,] [", World"] [,] [", Hello"] [,] [","] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] ["{1}{2} {0}{3}"] [,] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [}] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] ["{1}{2} {0}{3}"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Null, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Hello, , World"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Hello, {."] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Hello, {0}, World"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {0}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Hello, {0}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Hello, {0}"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Int] [Val] [=] [42] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Short] [Val] [=] [42] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Long] [Val] [=] [42] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Iteration {0}"] [,] [(] [Float] [)] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [New] [Float] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] [", Iteration {0}"] [,] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [New] [Double] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] ["{1}, {0}."] [,] [", World"] [,] [", Hello"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] ["{1}{2} {0}."] [,] [", World"] [,] [", Hello"] [,] [","] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] ["{1}{2} {0}{3}"] [,] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [}] [;] [Log, Mf] [.] [Warn] [(] [Logger] [,] ["{1}{2} {0}{3}"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Null, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Hello, , World"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Hello, {."] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Hello, {0}, World"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {0}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Hello, {0}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Hello, {0}"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Int] [Val] [=] [42] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Short] [Val] [=] [42] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Long] [Val] [=] [42] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {0}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {0}"] [,] [(] [Float] [)] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [New] [Float] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {0}"] [,] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [New] [Double] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] ["{1}, {0}."] [,] [", World"] [,] [", Hello"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] ["{1}{2} {0}."] [,] [", World"] [,] [", Hello"] [,] [","] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] ["{1}{2} {0}{3}"] [,] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [}] [;] [Log, Mf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] ["{1}{2} {0}{3}"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Private] [Static] [Final] [String] [Bundle, Name="org.apache.log4j., Test, Log, Mf, Patterns"] [;] [Test, Logrb, Null, Bundle] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Null] [,] [", Iteration0"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Iteration0"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Null, Key] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello1"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Malformed"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello2"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {0}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello3"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello3"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Int] [Val] [=] [42] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Short] [Val] [=] [42] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Long] [Val] [=] [42] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [(] [Float] [)] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [New] [Float] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [Message, Format] [.] [Format] [(] [", Iteration {0}"] [,] [New] [Object] [[] []] [{] [New] [Double] [(] [Math] [.] [Pi] [)] [}] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello4"] [,] [", World"] [,] [", Hello"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello5"] [,] [", World"] [,] [", Hello"] [,] [","] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello6"] [,] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", World"] [,] [", Hello"] [,] [","] [,] ["."] [}] [;] [Log, Mf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello6"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info1, Param, Brace9] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [", Hello, {9}{0}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, {9}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info2, Param, Brace9] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] ["{1}, {9}{0}"] [,] [", World"] [,] [", Hello"] [)] [;] [Assert, Equals] [(] [", Hello, {9}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info10, Param, Brace9] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] ["{1}, {9}{0}"] [,] [New] [Object] [[] []] [{] [", World"] [,] [", Hello"] [,] [Null] [,] [Null] [,] [Null] [,] [Null] [,] [Null] [,] [Null] [,] [Null] [,] [", New "] [}] [)] [;] [Assert, Equals] [(] [", Hello, , New , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info1, Param, Brace, Slash, Colon] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [String] [Pattern] [=] [", Hello, {/}{0}{:}"] [;] [Log, Mf] [.] [Info] [(] [Logger] [,] [Pattern] [,] [", World"] [)] [;] [Assert, Equals] [(] [Pattern] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;]
Class TestLogSF@@ [Private] [Static] [Final] [Level] [Trace=get, Trace, Level()] [;] [Get, Trace, Level] [Try] [{] [Return] [(] [Level] [)] [Level] [.] [Class] [.] [Get, Field] [(] [", Trace"] [)] [.] [Get] [(] [Null] [)] [;] [}] [Catch] [(] [Exception] [Ex] [)] [{] [Return] [New] [Level] [(] [5000] [,] [", Trace"] [,] [7] [)] [;] [}] [Return] [(] [Level] [)] [Level] [.] [Class] [.] [Get, Field] [(] [", Trace"] [)] [.] [Get] [(] [Null] [)] [;] [Return] [New] [Level] [(] [5000] [,] [", Trace"] [,] [7] [)] [;] [Private] [Final] [Logger] [Logger=, Logger.get, Logger("org.apache.log4j.formatter., Test, Log, Sf")] [;] [Tear, Down] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Test, Class, Name] [Char, Array, Writer] [Writer] [=] [New] [Char, Array, Writer] [(] [)] [;] [Pattern, Layout] [Layout] [=] [New] [Pattern, Layout] [(] ["%, C"] [)] [;] [Writer, Appender] [Appender] [=] [New] [Writer, Appender] [(] [Layout] [,] [Writer] [)] [;] [Appender] [.] [Activate, Options] [(] [)] [;] [Logger] [.] [Get, Root, Logger] [(] [)] [.] [Add, Appender] [(] [Appender] [)] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [Test, Log, Sf] [.] [Class] [.] [Get, Name] [(] [)] [,] [Writer] [.] [To, String] [(] [)] [)] [;] [Test, Trace, Null, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Hello, , World"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Hello, {."] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Hello, {}, World"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Hello, {}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Hello, {}"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Int] [Val] [=] [42] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Short] [Val] [=] [42] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Long] [Val] [=] [42] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Float] [Val] [=] [3.14f] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration "] [+] [String] [.] [Value, Of] [(] [Val] [)] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Double] [Val] [=] [3.14] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration "] [+] [String] [.] [Value, Of] [(] [Val] [)] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] ["{}, {}."] [,] [", Hello"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] ["{}{} {}."] [,] [", Hello"] [,] [","] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] ["{}{} {}{}"] [,] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [}] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] ["{}{} {}{}"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Trace, Null, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Trace] [)] [;] [Logger] [.] [Set, Level] [(] [Trace] [)] [;] [Object] [[] []] [Args] [=] [Null] [;] [Log, Sf] [.] [Trace] [(] [Logger] [,] ["{}{} {}{}"] [,] [Args] [)] [;] [Assert, Equals] [(] ["{}{} {}{}"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Null, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Hello, , World"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Hello, {."] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Hello, {}, World"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Hello, {}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Hello, {}"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Int] [Val] [=] [42] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Short] [Val] [=] [42] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Long] [Val] [=] [42] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Float] [Val] [=] [3.14f] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration "] [+] [String] [.] [Value, Of] [(] [Val] [)] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Double] [Val] [=] [3.14] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration "] [+] [String] [.] [Value, Of] [(] [Val] [)] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] ["{}, {}."] [,] [", Hello"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] ["{}{} {}."] [,] [", Hello"] [,] [","] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] ["{}{} {}{}"] [,] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [}] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] ["{}{} {}{}"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Debug, Null, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Object] [[] []] [Args] [=] [Null] [;] [Log, Sf] [.] [Debug] [(] [Logger] [,] ["{}{} {}{}"] [,] [Args] [)] [;] [Assert, Equals] [(] ["{}{} {}{}"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Null, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Hello, , World"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Hello, {."] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Hello, {}, World"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Hello, {}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Hello, {}"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Int] [Val] [=] [42] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Short] [Val] [=] [42] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Long] [Val] [=] [42] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Float] [Val] [=] [3.14f] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration "] [+] [String] [.] [Value, Of] [(] [Val] [)] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Double] [Val] [=] [3.14] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration "] [+] [String] [.] [Value, Of] [(] [Val] [)] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] ["{}, {}."] [,] [", Hello"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] ["{}{} {}."] [,] [", Hello"] [,] [","] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Info, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [}] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] ["{}{} {}{}"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Null, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Hello, , World"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Hello, {."] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Hello, {}, World"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Hello, {}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Hello, {}"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Int] [Val] [=] [42] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Short] [Val] [=] [42] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Long] [Val] [=] [42] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Float] [Val] [=] [3.14f] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration "] [+] [String] [.] [Value, Of] [(] [Val] [)] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Double] [Val] [=] [3.14] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration "] [+] [String] [.] [Value, Of] [(] [Val] [)] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] ["{}, {}."] [,] [", Hello"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] ["{}{} {}."] [,] [", Hello"] [,] [","] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] ["{}{} {}{}"] [,] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Warn, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Warn] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [}] [;] [Log, Sf] [.] [Warn] [(] [Logger] [,] ["{}{} {}{}"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Null, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Hello, , World"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Hello, {."] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Hello, {}, World"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Hello, {}"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Hello, {}"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Int] [Val] [=] [42] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Short] [Val] [=] [42] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Long] [Val] [=] [42] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {}"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {}"] [,] [(] [Float] [)] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [", Iteration "] [+] [String] [.] [Value, Of] [(] [New] [Float] [(] [Math] [.] [Pi] [)] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] [", Iteration {}"] [,] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [", Iteration "] [+] [String] [.] [Value, Of] [(] [New] [Double] [(] [Math] [.] [Pi] [)] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] ["{}, {}."] [,] [", Hello"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] ["{}{} {}."] [,] [", Hello"] [,] [","] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] ["{}{} {}{}"] [,] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Log, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [}] [;] [Log, Sf] [.] [Log] [(] [Logger] [,] [Level] [.] [Error] [,] ["{}{} {}{}"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Private] [Static] [Final] [String] [Bundle, Name="org.apache.log4j., Test, Log, Sf, Patterns"] [;] [Test, Logrb, Null, Bundle] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Null] [,] [", Iteration0"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Iteration0"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Null, Key] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [Null] [,] [Math] [.] [Pi] [)] [;] [Assert, Null] [(] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, No, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello1"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Bad, Pattern] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Malformed"] [,] [Math] [.] [Pi] [)] [;] [Assert, Equals] [(] [", Hello, {."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Missing, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello2"] [,] [New] [Object] [[] [0] []] [)] [;] [Assert, Equals] [(] [", Hello, {}, World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, String] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello3"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello3"] [,] [(] [Object] [)] [Null] [)] [;] [Assert, Equals] [(] [", Hello, null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Int] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Int] [Val] [=] [42] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Byte] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Byte] [Val] [=] [42] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Short] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Short] [Val] [=] [42] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Long] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Long] [Val] [=] [42] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration 42"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Char] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Char] [Val] [=] [', C'] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration , C"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Boolean] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Boolean] [Val] [=] [True] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Val] [)] [;] [Assert, Equals] [(] [", Iteration true"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Float] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [(] [Float] [)] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [", Iteration "] [+] [String] [.] [Value, Of] [(] [New] [Float] [(] [Math] [.] [Pi] [)] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Double] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Iteration0"] [,] [Math] [.] [Pi] [)] [;] [String] [Expected] [=] [", Iteration "] [+] [String] [.] [Value, Of] [(] [New] [Double] [(] [Math] [.] [Pi] [)] [)] [;] [Assert, Equals] [(] [Expected] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Two, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello4"] [,] [", Hello"] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Three, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello5"] [,] [", Hello"] [,] [","] [,] [", World"] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Four, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello6"] [,] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Logrb, Array, Arg] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Error] [)] [;] [Object] [[] []] [Args] [=] [New] [Object] [[] []] [{] [", Hello"] [,] [","] [,] [", World"] [,] ["."] [}] [;] [Log, Sf] [.] [Logrb] [(] [Logger] [,] [Level] [.] [Error] [,] [Bundle, Name] [,] [", Hello6"] [,] [Args] [)] [;] [Assert, Equals] [(] [", Hello, , World."] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Escape, One, Param] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] ["\\{}\\{{}}, , World}\\{"] [,] [", Hello"] [)] [;] [Assert, Equals] [(] ["{}{, Hello}, , World}{"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Escape, Two, Param] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Info] [)] [;] [Log, Sf] [.] [Info] [(] [Logger] [,] ["\\{}\\{{}}, {}}{}\\{"] [,] [", Hello"] [,] [", World"] [)] [;] [Assert, Equals] [(] ["{}{, Hello}, , World}{}{"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;]
Class TestLogXF@@ [Private] [Final] [Logger] [Logger=, Logger.get, Logger("org.apache.log4j.formatter., Test, Log, Xf")] [;] [Tear, Down] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;]
Class BadStringifier@@ [Public] [Static] [Bad, Stringifier] [Instance=new, Bad, Stringifier()] [;] [To, String] [Throw] [New] [Null, Pointer, Exception] [(] [)] [;] [Test, Entering, Null, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Entering] [(] [Logger] [,] [Null] [,] [Null] [)] [;] [Assert, Equals] [(] ["null.null , Entry"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Entering, Null, Null, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Entering] [(] [Logger] [,] [Null] [,] [Null] [,] [(] [String] [)] [Null] [)] [;] [Assert, Equals] [(] ["null.null , Entry null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Entering, Null, Null, Null, Array] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Entering] [(] [Logger] [,] [Null] [,] [Null] [,] [(] [Object] [[] []] [)] [Null] [)] [;] [Assert, Equals] [(] ["null.null , Entry {}"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Entering] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Entering] [(] [Logger] [,] [", Some, Class"] [,] ["some, Method"] [)] [;] [Assert, Equals] [(] [", Some, Class.some, Method , Entry"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Entering, With, Param] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Entering] [(] [Logger] [,] [", Some, Class"] [,] ["some, Method"] [,] ["some, Param"] [)] [;] [Assert, Equals] [(] [", Some, Class.some, Method , Entry some, Param"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Entering, With, Bad, Param] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Entering] [(] [Logger] [,] [", Some, Class"] [,] ["some, Method"] [,] [Bad, Stringifier] [.] [Instance] [)] [;] [Assert, Equals] [(] [", Some, Class.some, Method , Entry ?"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Entering, With, Bad, Params] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Entering] [(] [Logger] [,] [", Some, Class"] [,] ["some, Method"] [,] [New] [Object] [[] []] [{] ["param1"] [,] [Bad, Stringifier] [.] [Instance] [}] [)] [;] [Assert, Equals] [(] [", Some, Class.some, Method , Entry {param1,?}"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Exiting, Null, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Exiting] [(] [Logger] [,] [Null] [,] [Null] [)] [;] [Assert, Equals] [(] ["null.null , Return"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Exiting, Null, Null, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Exiting] [(] [Logger] [,] [Null] [,] [Null] [,] [(] [String] [)] [Null] [)] [;] [Assert, Equals] [(] ["null.null , Return null"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Exiting] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Exiting] [(] [Logger] [,] [", Some, Class"] [,] ["some, Method"] [)] [;] [Assert, Equals] [(] [", Some, Class.some, Method , Return"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Exiting, With, Value] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Exiting] [(] [Logger] [,] [", Some, Class"] [,] ["some, Method"] [,] ["some, Value"] [)] [;] [Assert, Equals] [(] [", Some, Class.some, Method , Return some, Value"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Exiting, With, Bad, Value] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Exiting] [(] [Logger] [,] [", Some, Class"] [,] ["some, Method"] [,] [Bad, Stringifier] [.] [Instance] [)] [;] [Assert, Equals] [(] [", Some, Class.some, Method , Return ?"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Throwing, Null, Null, Null] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Throwing] [(] [Logger] [,] [Null] [,] [Null] [,] [Null] [)] [;] [Assert, Equals] [(] ["null.null , Throw"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;] [Test, Throwing] [Log, Capture] [Capture] [=] [New] [Log, Capture] [(] [Level] [.] [Debug] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Debug] [)] [;] [Log, Xf] [.] [Throwing] [(] [Logger] [,] [", Some, Class"] [,] ["some, Method"] [,] [New] [Illegal, Argument, Exception] [(] [)] [)] [;] [Assert, Equals] [(] [", Some, Class.some, Method , Throw"] [,] [Capture] [.] [Get, Message] [(] [)] [)] [;]
Class TTCCLayoutTest@@ [Create, Layout] [Return] [New] [Ttcc, Layout] [(] [)] [;] [Test, Format] [Ndc] [.] [Clear] [(] [)] [;] [Ndc] [.] [Push] [(] [", Ndc goes here"] [)] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j., Layout, Test"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Info] [,] [", Hello, , World"] [,] [Null] [)] [;] [Ttcc, Layout] [Layout] [=] [(] [Ttcc, Layout] [)] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [Ndc] [.] [Pop] [(] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [100] [)] [;] [Layout] [.] [Date, Format] [(] [Buf] [,] [Event] [)] [;] [Buf] [.] [Append] [(] ['['] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Thread, Name] [(] [)] [)] [;] [Buf] [.] [Append] [(] ["] "] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Level] [(] [)] [.] [To, String] [(] [)] [)] [;] [Buf] [.] [Append] [(] [' '] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Logger, Name] [(] [)] [)] [;] [Buf] [.] [Append] [(] [' '] [)] [;] [Buf] [.] [Append] [(] [", Ndc goes here"] [)] [;] [Buf] [.] [Append] [(] [" - "] [)] [;] [Buf] [.] [Append] [(] [Event] [.] [Get, Message] [(] [)] [)] [;] [Buf] [.] [Append] [(] [System] [.] [Get, Property] [(] ["line.separator"] [)] [)] [;] [Assert, Equals] [(] [Buf] [.] [To, String] [(] [)] [,] [Result] [)] [;] [Test, Get, Set, Thread, Printing] [Ttcc, Layout] [Layout] [=] [New] [Ttcc, Layout] [(] [)] [;] [Assert, Equals] [(] [True] [,] [Layout] [.] [Get, Thread, Printing] [(] [)] [)] [;] [Layout] [.] [Set, Thread, Printing] [(] [False] [)] [;] [Assert, Equals] [(] [False] [,] [Layout] [.] [Get, Thread, Printing] [(] [)] [)] [;] [Layout] [.] [Set, Thread, Printing] [(] [True] [)] [;] [Assert, Equals] [(] [True] [,] [Layout] [.] [Get, Thread, Printing] [(] [)] [)] [;] [Test, Get, Set, Category, Prefixing] [Ttcc, Layout] [Layout] [=] [New] [Ttcc, Layout] [(] [)] [;] [Assert, Equals] [(] [True] [,] [Layout] [.] [Get, Category, Prefixing] [(] [)] [)] [;] [Layout] [.] [Set, Category, Prefixing] [(] [False] [)] [;] [Assert, Equals] [(] [False] [,] [Layout] [.] [Get, Category, Prefixing] [(] [)] [)] [;] [Layout] [.] [Set, Category, Prefixing] [(] [True] [)] [;] [Assert, Equals] [(] [True] [,] [Layout] [.] [Get, Category, Prefixing] [(] [)] [)] [;] [Test, Get, Set, Context, Printing] [Ttcc, Layout] [Layout] [=] [New] [Ttcc, Layout] [(] [)] [;] [Assert, Equals] [(] [True] [,] [Layout] [.] [Get, Context, Printing] [(] [)] [)] [;] [Layout] [.] [Set, Context, Printing] [(] [False] [)] [;] [Assert, Equals] [(] [False] [,] [Layout] [.] [Get, Context, Printing] [(] [)] [)] [;] [Layout] [.] [Set, Context, Printing] [(] [True] [)] [;] [Assert, Equals] [(] [True] [,] [Layout] [.] [Get, Context, Printing] [(] [)] [)] [;]
Class AbsoluteDateAndTimeFilter@@ [Perl5, Util] [Util=new, Perl5, Util()] [;] [Filter] [String] [Pat] [=] ["/"] [+] [Filter] [.] [Absolute, Date, And, Time, Pat] [+] ["/"] [;] [If] [(] [Util] [.] [Match] [(] [Pat] [,] [In] [)] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/"] [+] [Filter] [.] [Absolute, Date, And, Time, Pat] [+] ["//"] [,] [In] [)] [;] [}] [Else] [{] [Return] [In] [;] [}] [Return] [Util] [.] [Substitute] [(] ["s/"] [+] [Filter] [.] [Absolute, Date, And, Time, Pat] [+] ["//"] [,] [In] [)] [;] [Return] [In] [;]
Class AbsoluteTimeFilter@@ [Perl5, Util] [Util=new, Perl5, Util()] [;] [Filter] [String] [Pat] [=] ["/"] [+] [Filter] [.] [Absolute, Time, Pat] [+] ["/"] [;] [If] [(] [Util] [.] [Match] [(] [Pat] [,] [In] [)] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/"] [+] [Filter] [.] [Absolute, Time, Pat] [+] ["//"] [,] [In] [)] [;] [}] [Else] [{] [Return] [In] [;] [}] [Return] [Util] [.] [Substitute] [(] ["s/"] [+] [Filter] [.] [Absolute, Time, Pat] [+] ["//"] [,] [In] [)] [;] [Return] [In] [;]
Class Compare@@ [Static] [Final] [Int] [B1, Null=-1] [;] [Static] [Final] [Int] [B2, Null=-2] [;] [Compare] [Buffered, Reader] [In1] [=] [New] [Buffered, Reader] [(] [New] [File, Reader] [(] [File1] [)] [)] [;] [Buffered, Reader] [In2] [=] [New] [Buffered, Reader] [(] [New] [File, Reader] [(] [File2] [)] [)] [;] [String] [S1] [;] [Int] [Line, Counter] [=] [0] [;] [While] [(] [(] [S1] [=] [In1] [.] [Read, Line] [(] [)] [)] [!=] [Null] [)] [{] [Line, Counter] [++] [;] [String] [S2] [=] [In2] [.] [Read, Line] [(] [)] [;] [If] [(] [!] [S1] [.] [Equals] [(] [S2] [)] [)] [{] [System] [.] [Out] [.] [Println] [(] [", Files ["] [+] [File1] [+] ["] and ["] [+] [File2] [+] ["] differ on line "] [+] [Line, Counter] [)] [;] [System] [.] [Out] [.] [Println] [(] [", One reads:  ["] [+] [S1] [+] ["]."] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Other reads:["] [+] [S2] [+] ["]."] [)] [;] [Return] [False] [;] [}] [}] [Line, Counter] [++] [;] [String] [S2] [=] [In2] [.] [Read, Line] [(] [)] [;] [If] [(] [!] [S1] [.] [Equals] [(] [S2] [)] [)] [{] [System] [.] [Out] [.] [Println] [(] [", Files ["] [+] [File1] [+] ["] and ["] [+] [File2] [+] ["] differ on line "] [+] [Line, Counter] [)] [;] [System] [.] [Out] [.] [Println] [(] [", One reads:  ["] [+] [S1] [+] ["]."] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Other reads:["] [+] [S2] [+] ["]."] [)] [;] [Return] [False] [;] [}] [System] [.] [Out] [.] [Println] [(] [", Files ["] [+] [File1] [+] ["] and ["] [+] [File2] [+] ["] differ on line "] [+] [Line, Counter] [)] [;] [System] [.] [Out] [.] [Println] [(] [", One reads:  ["] [+] [S1] [+] ["]."] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Other reads:["] [+] [S2] [+] ["]."] [)] [;] [Return] [False] [;] [If] [(] [In2] [.] [Read] [(] [)] [!=] [-] [1] [)] [{] [System] [.] [Out] [.] [Println] [(] [", File ["] [+] [File2] [+] ["] longer than file ["] [+] [File1] [+] ["]."] [)] [;] [Return] [False] [;] [}] [System] [.] [Out] [.] [Println] [(] [", File ["] [+] [File2] [+] ["] longer than file ["] [+] [File1] [+] ["]."] [)] [;] [Return] [False] [;] [Return] [True] [;] [Open] [String] [Resource, Name] [=] [File, Name] [;] [If] [(] [File, Name] [.] [Starts, With] [(] ["witness/"] [)] [)] [{] [Resource, Name] [=] [File, Name] [.] [Substring] [(] [File, Name] [.] [Last, Index, Of] [(] ['/'] [)] [+] [1] [)] [;] [}] [Resource, Name] [=] [File, Name] [.] [Substring] [(] [File, Name] [.] [Last, Index, Of] [(] ['/'] [)] [+] [1] [)] [;] [Input, Stream] [Is] [=] [Test, Class] [.] [Get, Resource, As, Stream] [(] [Resource, Name] [)] [;] [If] [(] [Is] [==] [Null] [)] [{] [File] [File] [=] [New] [File] [(] [File, Name] [)] [;] [If] [(] [File] [.] [Exists] [(] [)] [)] [{] [Is] [=] [New] [File, Input, Stream] [(] [File] [)] [;] [}] [Else] [{] [Throw] [New] [File, Not, Found, Exception] [(] [", Resource "] [+] [Resource, Name] [+] [" not found"] [)] [;] [}] [}] [File] [File] [=] [New] [File] [(] [File, Name] [)] [;] [If] [(] [File] [.] [Exists] [(] [)] [)] [{] [Is] [=] [New] [File, Input, Stream] [(] [File] [)] [;] [}] [Else] [{] [Throw] [New] [File, Not, Found, Exception] [(] [", Resource "] [+] [Resource, Name] [+] [" not found"] [)] [;] [}] [Is] [=] [New] [File, Input, Stream] [(] [File] [)] [;] [Throw] [New] [File, Not, Found, Exception] [(] [", Resource "] [+] [Resource, Name] [+] [" not found"] [)] [;] [Return] [Is] [;] [Compare] [Buffered, Reader] [In1] [=] [New] [Buffered, Reader] [(] [New] [File, Reader] [(] [File1] [)] [)] [;] [Buffered, Reader] [In2] [=] [New] [Buffered, Reader] [(] [New] [Input, Stream, Reader] [(] [Open] [(] [Test, Class] [,] [File2] [)] [)] [)] [;] [Try] [{] [Return] [Compare] [(] [Test, Class] [,] [File1] [,] [File2] [,] [In1] [,] [In2] [)] [;] [}] [Finally] [{] [In1] [.] [Close] [(] [)] [;] [In2] [.] [Close] [(] [)] [;] [}] [Return] [Compare] [(] [Test, Class] [,] [File1] [,] [File2] [,] [In1] [,] [In2] [)] [;] [In1] [.] [Close] [(] [)] [;] [In2] [.] [Close] [(] [)] [;] [Compare] [String] [S1] [;] [Int] [Line, Counter] [=] [0] [;] [While] [(] [(] [S1] [=] [In1] [.] [Read, Line] [(] [)] [)] [!=] [Null] [)] [{] [Line, Counter] [++] [;] [String] [S2] [=] [In2] [.] [Read, Line] [(] [)] [;] [If] [(] [!] [S1] [.] [Equals] [(] [S2] [)] [)] [{] [System] [.] [Out] [.] [Println] [(] [", Files ["] [+] [File1] [+] ["] and ["] [+] [File2] [+] ["] differ on line "] [+] [Line, Counter] [)] [;] [System] [.] [Out] [.] [Println] [(] [", One reads:  ["] [+] [S1] [+] ["]."] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Other reads:["] [+] [S2] [+] ["]."] [)] [;] [Output, File] [(] [Test, Class] [,] [File1] [)] [;] [Output, File] [(] [Test, Class] [,] [File2] [)] [;] [Return] [False] [;] [}] [}] [Line, Counter] [++] [;] [String] [S2] [=] [In2] [.] [Read, Line] [(] [)] [;] [If] [(] [!] [S1] [.] [Equals] [(] [S2] [)] [)] [{] [System] [.] [Out] [.] [Println] [(] [", Files ["] [+] [File1] [+] ["] and ["] [+] [File2] [+] ["] differ on line "] [+] [Line, Counter] [)] [;] [System] [.] [Out] [.] [Println] [(] [", One reads:  ["] [+] [S1] [+] ["]."] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Other reads:["] [+] [S2] [+] ["]."] [)] [;] [Output, File] [(] [Test, Class] [,] [File1] [)] [;] [Output, File] [(] [Test, Class] [,] [File2] [)] [;] [Return] [False] [;] [}] [System] [.] [Out] [.] [Println] [(] [", Files ["] [+] [File1] [+] ["] and ["] [+] [File2] [+] ["] differ on line "] [+] [Line, Counter] [)] [;] [System] [.] [Out] [.] [Println] [(] [", One reads:  ["] [+] [S1] [+] ["]."] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Other reads:["] [+] [S2] [+] ["]."] [)] [;] [Output, File] [(] [Test, Class] [,] [File1] [)] [;] [Output, File] [(] [Test, Class] [,] [File2] [)] [;] [Return] [False] [;] [If] [(] [In2] [.] [Read] [(] [)] [!=] [-] [1] [)] [{] [System] [.] [Out] [.] [Println] [(] [", File ["] [+] [File2] [+] ["] longer than file ["] [+] [File1] [+] ["]."] [)] [;] [Output, File] [(] [Test, Class] [,] [File1] [)] [;] [Output, File] [(] [Test, Class] [,] [File2] [)] [;] [Return] [False] [;] [}] [System] [.] [Out] [.] [Println] [(] [", File ["] [+] [File2] [+] ["] longer than file ["] [+] [File1] [+] ["]."] [)] [;] [Output, File] [(] [Test, Class] [,] [File1] [)] [;] [Output, File] [(] [Test, Class] [,] [File2] [)] [;] [Return] [False] [;] [Return] [True] [;] [Output, File] [Input, Stream] [Is] [=] [Open] [(] [Test, Class] [,] [File] [)] [;] [Buffered, Reader] [In1] [=] [New] [Buffered, Reader] [(] [New] [Input, Stream, Reader] [(] [Is] [)] [)] [;] [String] [S1] [;] [Int] [Line, Counter] [=] [0] [;] [System] [.] [Out] [.] [Println] [(] ["--------------------------------"] [)] [;] [System] [.] [Out] [.] [Println] [(] [", Contents of "] [+] [File] [+] [":"] [)] [;] [While] [(] [(] [S1] [=] [In1] [.] [Read, Line] [(] [)] [)] [!=] [Null] [)] [{] [Line, Counter] [++] [;] [System] [.] [Out] [.] [Print] [(] [Line, Counter] [)] [;] [If] [(] [Line, Counter] [<] [10] [)] [{] [System] [.] [Out] [.] [Print] [(] ["   : "] [)] [;] [}] [Else] [If] [(] [Line, Counter] [<] [100] [)] [{] [System] [.] [Out] [.] [Print] [(] ["  : "] [)] [;] [}] [Else] [If] [(] [Line, Counter] [<] [1000] [)] [{] [System] [.] [Out] [.] [Print] [(] [" : "] [)] [;] [}] [Else] [{] [System] [.] [Out] [.] [Print] [(] [": "] [)] [;] [}] [System] [.] [Out] [.] [Println] [(] [S1] [)] [;] [}] [Line, Counter] [++] [;] [System] [.] [Out] [.] [Print] [(] [Line, Counter] [)] [;] [If] [(] [Line, Counter] [<] [10] [)] [{] [System] [.] [Out] [.] [Print] [(] ["   : "] [)] [;] [}] [Else] [If] [(] [Line, Counter] [<] [100] [)] [{] [System] [.] [Out] [.] [Print] [(] ["  : "] [)] [;] [}] [Else] [If] [(] [Line, Counter] [<] [1000] [)] [{] [System] [.] [Out] [.] [Print] [(] [" : "] [)] [;] [}] [Else] [{] [System] [.] [Out] [.] [Print] [(] [": "] [)] [;] [}] [System] [.] [Out] [.] [Print] [(] ["   : "] [)] [;] [System] [.] [Out] [.] [Print] [(] ["  : "] [)] [;] [System] [.] [Out] [.] [Print] [(] [" : "] [)] [;] [System] [.] [Out] [.] [Print] [(] [": "] [)] [;] [System] [.] [Out] [.] [Println] [(] [S1] [)] [;] [In1] [.] [Close] [(] [)] [;]
Class ControlFilter@@ [Perl5, Util] [Util=new, Perl5, Util()] [;] [String[]] [Allowed, Patterns] [;] [This] [.] [Allowed, Patterns] [=] [Allowed, Patterns] [;] [Filter] [Int] [Len] [=] [Allowed, Patterns] [.] [Length] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Len] [;] [I] [++] [)] [{] [If] [(] [Util] [.] [Match] [(] ["/"] [+] [Allowed, Patterns] [[] [I] []] [+] ["/"] [,] [In] [)] [)] [{] [Return] [In] [;] [}] [}] [If] [(] [Util] [.] [Match] [(] ["/"] [+] [Allowed, Patterns] [[] [I] []] [+] ["/"] [,] [In] [)] [)] [{] [Return] [In] [;] [}] [Return] [In] [;] [Throw] [New] [Unexpected, Format, Exception] [(] ["["] [+] [In] [+] ["]"] [)] [;]
Class EnhancedJunitTestRunnerFilter@@ [Private] [Perl5, Util] [Util=new, Perl5, Util()] [;] [Private] [Static] [Final] [String[]] [Patterns={"at org.eclipse.jdt.internal.junit.runner., Remote, Test, Runner","at org.apache.tools.ant","at junit.textui., Test, Runner","at com.intellij.rt.execution.junit","at java.lang.reflect., Method.invoke","at org.apache.maven.","at org.codehaus.","at org.junit.internal.runners.","at junit.framework., J, Unit4, Test, Adapter"}] [;] [Filter] [If] [(] [In] [==] [Null] [)] [{] [Return] [Null] [;] [}] [Return] [Null] [;] [If] [(] [In] [.] [Index, Of] [(] ["at junit.framework., Test, Case.run, Test"] [)] [!=] [-] [1] [)] [{] [Return] ["\tat java.lang.reflect., Method.invoke(, X)\n\t"] [+] [In] [.] [Trim] [(] [)] [;] [}] [Return] ["\tat java.lang.reflect., Method.invoke(, X)\n\t"] [+] [In] [.] [Trim] [(] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Patterns] [.] [Length] [;] [I] [++] [)] [{] [If] [(] [In] [.] [Index, Of] [(] [Patterns] [[] [I] []] [)] [!=] [-] [1] [)] [{] [Return] [Null] [;] [}] [}] [If] [(] [In] [.] [Index, Of] [(] [Patterns] [[] [I] []] [)] [!=] [-] [1] [)] [{] [Return] [Null] [;] [}] [Return] [Null] [;] [If] [(] [Util] [.] [Match] [(] ["/\\sat /"] [,] [In] [)] [)] [{] [Return] ["\t"] [+] [In] [.] [Trim] [(] [)] [;] [}] [Return] ["\t"] [+] [In] [.] [Trim] [(] [)] [;] [Return] [In] [;]
Class EnhancedLineNumberFilter@@ [Private] [Pattern] [Line, Pattern] [;] [Private] [Pattern] [Native, Pattern] [;] [Line, Pattern] [=] [Pattern] [.] [Compile] [(] ["\\(.*:\\d{1,4}\\)"] [)] [;] [Native, Pattern] [=] [Pattern] [.] [Compile] [(] ["\\(, Native , Method\\)"] [)] [;] [Filter] [If] [(] [Line, Pattern] [.] [Matcher] [(] [In] [)] [.] [Find] [(] [)] [)] [{] [Return] [Line, Pattern] [.] [Matcher] [(] [In] [)] [.] [Replace, All] [(] ["(, X)"] [)] [;] [}] [Else] [If] [(] [Native, Pattern] [.] [Matcher] [(] [In] [)] [.] [Find] [(] [)] [)] [{] [Return] [Native, Pattern] [.] [Matcher] [(] [In] [)] [.] [Replace, All] [(] ["(, X)"] [)] [;] [}] [Else] [{] [Return] [In] [;] [}] [Return] [Line, Pattern] [.] [Matcher] [(] [In] [)] [.] [Replace, All] [(] ["(, X)"] [)] [;] [Return] [Native, Pattern] [.] [Matcher] [(] [In] [)] [.] [Replace, All] [(] ["(, X)"] [)] [;] [Return] [In] [;] [Filter]
Class ISO8601Filter@@ [Perl5, Util] [Util=new, Perl5, Util()] [;] [Filter] [String] [Pat] [=] ["/"] [+] [Iso8601, Pat] [+] ["/"] [;] [If] [(] [Util] [.] [Match] [(] [Pat] [,] [In] [)] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/"] [+] [Iso8601, Pat] [+] ["//"] [,] [In] [)] [;] [}] [Else] [{] [Return] [In] [;] [}] [Return] [Util] [.] [Substitute] [(] ["s/"] [+] [Iso8601, Pat] [+] ["//"] [,] [In] [)] [;] [Return] [In] [;]
Class JunitTestRunnerFilter@@ [Perl5, Util] [Util=new, Perl5, Util()] [;] [Filter] [If] [(] [In] [==] [Null] [)] [{] [Return] [Null] [;] [}] [Return] [Null] [;] [If] [(] [Util] [.] [Match] [(] ["/at org.eclipse.jdt.internal.junit.runner., Remote, Test, Runner/"] [,] [In] [)] [)] [{] [Return] [Null] [;] [}] [Else] [If] [(] [Util] [.] [Match] [(] ["/at org.apache.tools.ant.taskdefs.optional.junit., J, Unit, Test, Runner/"] [,] [In] [)] [)] [{] [Return] [Null] [;] [}] [Else] [If] [(] [Util] [.] [Match] [(] ["/at com.intellij/"] [,] [In] [)] [)] [{] [Return] [Null] [;] [}] [Else] [If] [(] [In] [.] [Index, Of] [(] ["at junit."] [)] [>=] [0] [&&] [In] [.] [Index, Of] [(] ["ui., Test, Runner"] [)] [>=] [0] [)] [{] [Return] [Null] [;] [}] [Else] [If] [(] [In] [.] [Index, Of] [(] ["org.apache.maven"] [)] [>=] [0] [)] [{] [Return] [Null] [;] [}] [Else] [If] [(] [In] [.] [Index, Of] [(] ["junit.internal"] [)] [>=] [0] [)] [{] [Return] [Null] [;] [}] [Else] [If] [(] [In] [.] [Index, Of] [(] [", J, Unit4, Test, Adapter"] [)] [>=] [0] [)] [{] [Return] [Null] [;] [}] [Else] [If] [(] [Util] [.] [Match] [(] ["/\\sat /"] [,] [In] [)] [)] [{] [Return] ["\t"] [+] [In] [.] [Trim] [(] [)] [;] [}] [Else] [{] [Return] [In] [;] [}] [Return] [Null] [;] [Return] [Null] [;] [Return] [Null] [;] [Return] [Null] [;] [Return] [Null] [;] [Return] [Null] [;] [Return] [Null] [;] [Return] ["\t"] [+] [In] [.] [Trim] [(] [)] [;] [Return] [In] [;]
Class LineNumberFilter@@ [Perl5, Util] [Util=new, Perl5, Util()] [;] [Filter] [If] [(] [Util] [.] [Match] [(] ["/\\(.*:\\d{1,4}\\)/"] [,] [In] [)] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/:\\d{1,4}\\)/:, Xxx)/"] [,] [In] [)] [;] [}] [Else] [{] [If] [(] [In] [.] [Index, Of] [(] [", , Compiled , Code"] [)] [>=] [0] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/, , Compiled , Code/:, Xxx/"] [,] [In] [)] [;] [}] [Return] [In] [;] [}] [Return] [Util] [.] [Substitute] [(] ["s/:\\d{1,4}\\)/:, Xxx)/"] [,] [In] [)] [;] [If] [(] [In] [.] [Index, Of] [(] [", , Compiled , Code"] [)] [>=] [0] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/, , Compiled , Code/:, Xxx/"] [,] [In] [)] [;] [}] [Return] [Util] [.] [Substitute] [(] ["s/, , Compiled , Code/:, Xxx/"] [,] [In] [)] [;] [Return] [In] [;]
Class RelativeTimeFilter@@ [Perl5, Util] [Util=new, Perl5, Util()] [;] [Filter] [String] [Pat] [=] ["/"] [+] [Filter] [.] [Relative, Time, Pat] [+] ["/"] [;] [If] [(] [Util] [.] [Match] [(] [Pat] [,] [In] [)] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/"] [+] [Filter] [.] [Relative, Time, Pat] [+] ["//"] [,] [In] [)] [;] [}] [Else] [{] [Return] [In] [;] [}] [Return] [Util] [.] [Substitute] [(] ["s/"] [+] [Filter] [.] [Relative, Time, Pat] [+] ["//"] [,] [In] [)] [;] [Return] [In] [;]
Class SerializationTestHelper@@ [Serialize, Clone] [Byte, Array, Output, Stream] [Mem, Out] [=] [New] [Byte, Array, Output, Stream] [(] [)] [;] [Object, Output, Stream] [Obj, Out] [=] [New] [Object, Output, Stream] [(] [Mem, Out] [)] [;] [Obj, Out] [.] [Write, Object] [(] [Obj] [)] [;] [Obj, Out] [.] [Close] [(] [)] [;] [Byte, Array, Input, Stream] [Src] [=] [New] [Byte, Array, Input, Stream] [(] [Mem, Out] [.] [To, Byte, Array] [(] [)] [)] [;] [Object, Input, Stream] [Obj, Is] [=] [New] [Object, Input, Stream] [(] [Src] [)] [;] [Return] [Obj, Is] [.] [Read, Object] [(] [)] [;] [Deserialize, Stream] [File, Input, Stream] [File, Is] [=] [New] [File, Input, Stream] [(] [Witness] [)] [;] [Object, Input, Stream] [Obj, Is] [=] [New] [Object, Input, Stream] [(] [File, Is] [)] [;] [Return] [Obj, Is] [.] [Read, Object] [(] [)] [;] [Assert, Serialization, Equals] [Byte, Array, Output, Stream] [Mem, Out] [=] [New] [Byte, Array, Output, Stream] [(] [)] [;] [Object, Output, Stream] [Obj, Out] [=] [New] [Object, Output, Stream] [(] [Mem, Out] [)] [;] [Obj, Out] [.] [Write, Object] [(] [Obj] [)] [;] [Obj, Out] [.] [Close] [(] [)] [;] [Assert, Stream, Equals] [(] [Witness] [,] [Mem, Out] [.] [To, Byte, Array] [(] [)] [,] [Skip] [,] [End, Compare] [)] [;] [Assert, Stream, Equals] [File] [Witness, File] [=] [New] [File] [(] [Witness] [)] [;] [If] [(] [Witness, File] [.] [Exists] [(] [)] [)] [{] [Int] [Skip, Index] [=] [0] [;] [Byte] [[] []] [Expected] [=] [New] [Byte] [[] [Actual] [.] [Length] []] [;] [File, Input, Stream] [Is] [=] [New] [File, Input, Stream] [(] [Witness, File] [)] [;] [Int] [Bytes, Read] [=] [Is] [.] [Read] [(] [Expected] [)] [;] [Is] [.] [Close] [(] [)] [;] [If] [(] [Bytes, Read] [<] [End, Compare] [)] [{] [Test, Case] [.] [Assert, Equals] [(] [Bytes, Read] [,] [Actual] [.] [Length] [)] [;] [}] [Int] [End, Scan] [=] [Actual] [.] [Length] [;] [If] [(] [End, Scan] [>] [End, Compare] [)] [{] [End, Scan] [=] [End, Compare] [;] [}] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [End, Scan] [;] [I] [++] [)] [{] [If] [(] [(] [Skip, Index] [<] [Skip] [.] [Length] [)] [&&] [(] [Skip] [[] [Skip, Index] []] [==] [I] [)] [)] [{] [Skip, Index] [++] [;] [}] [Else] [{] [If] [(] [Expected] [[] [I] []] [!=] [Actual] [[] [I] []] [)] [{] [Test, Case] [.] [Assert, Equals] [(] [", Difference at offset "] [+] [I] [,] [Expected] [[] [I] []] [,] [Actual] [[] [I] []] [)] [;] [}] [}] [}] [}] [Else] [{] [File, Output, Stream] [Os] [=] [New] [File, Output, Stream] [(] [Witness, File] [)] [;] [Os] [.] [Write] [(] [Actual] [)] [;] [Os] [.] [Close] [(] [)] [;] [Test, Case] [.] [Fail] [(] [", Writing witness file "] [+] [Witness] [)] [;] [}] [Int] [Skip, Index] [=] [0] [;] [Byte] [[] []] [Expected] [=] [New] [Byte] [[] [Actual] [.] [Length] []] [;] [File, Input, Stream] [Is] [=] [New] [File, Input, Stream] [(] [Witness, File] [)] [;] [Int] [Bytes, Read] [=] [Is] [.] [Read] [(] [Expected] [)] [;] [Is] [.] [Close] [(] [)] [;] [If] [(] [Bytes, Read] [<] [End, Compare] [)] [{] [Test, Case] [.] [Assert, Equals] [(] [Bytes, Read] [,] [Actual] [.] [Length] [)] [;] [}] [Test, Case] [.] [Assert, Equals] [(] [Bytes, Read] [,] [Actual] [.] [Length] [)] [;] [Int] [End, Scan] [=] [Actual] [.] [Length] [;] [If] [(] [End, Scan] [>] [End, Compare] [)] [{] [End, Scan] [=] [End, Compare] [;] [}] [End, Scan] [=] [End, Compare] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [End, Scan] [;] [I] [++] [)] [{] [If] [(] [(] [Skip, Index] [<] [Skip] [.] [Length] [)] [&&] [(] [Skip] [[] [Skip, Index] []] [==] [I] [)] [)] [{] [Skip, Index] [++] [;] [}] [Else] [{] [If] [(] [Expected] [[] [I] []] [!=] [Actual] [[] [I] []] [)] [{] [Test, Case] [.] [Assert, Equals] [(] [", Difference at offset "] [+] [I] [,] [Expected] [[] [I] []] [,] [Actual] [[] [I] []] [)] [;] [}] [}] [}] [If] [(] [(] [Skip, Index] [<] [Skip] [.] [Length] [)] [&&] [(] [Skip] [[] [Skip, Index] []] [==] [I] [)] [)] [{] [Skip, Index] [++] [;] [}] [Else] [{] [If] [(] [Expected] [[] [I] []] [!=] [Actual] [[] [I] []] [)] [{] [Test, Case] [.] [Assert, Equals] [(] [", Difference at offset "] [+] [I] [,] [Expected] [[] [I] []] [,] [Actual] [[] [I] []] [)] [;] [}] [}] [Skip, Index] [++] [;] [If] [(] [Expected] [[] [I] []] [!=] [Actual] [[] [I] []] [)] [{] [Test, Case] [.] [Assert, Equals] [(] [", Difference at offset "] [+] [I] [,] [Expected] [[] [I] []] [,] [Actual] [[] [I] []] [)] [;] [}] [Test, Case] [.] [Assert, Equals] [(] [", Difference at offset "] [+] [I] [,] [Expected] [[] [I] []] [,] [Actual] [[] [I] []] [)] [;] [File, Output, Stream] [Os] [=] [New] [File, Output, Stream] [(] [Witness, File] [)] [;] [Os] [.] [Write] [(] [Actual] [)] [;] [Os] [.] [Close] [(] [)] [;] [Test, Case] [.] [Fail] [(] [", Writing witness file "] [+] [Witness] [)] [;]
Class SunReflectFilter@@ [Perl5, Util] [Util=new, Perl5, Util()] [;] [Filter] [If] [(] [In] [==] [Null] [)] [{] [Return] [Null] [;] [}] [Return] [Null] [;] [If] [(] [Util] [.] [Match] [(] ["/at sun.reflect/"] [,] [In] [)] [)] [{] [Return] [Null] [;] [}] [Return] [Null] [;] [If] [(] [In] [.] [Index, Of] [(] ["at java.lang.reflect."] [)] [>=] [0] [)] [{] [Return] [Null] [;] [}] [Return] [Null] [;] [If] [(] [In] [.] [Index, Of] [(] [", Compiled , Code"] [)] [>=] [0] [)] [{] [If] [(] [In] [.] [Index, Of] [(] ["junit.framework., Test, Suite"] [)] [>=] [0] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/, Compiled , Code/, Test, Suite.java:, Xxx/"] [,] [In] [)] [;] [}] [}] [If] [(] [In] [.] [Index, Of] [(] ["junit.framework., Test, Suite"] [)] [>=] [0] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/, Compiled , Code/, Test, Suite.java:, Xxx/"] [,] [In] [)] [;] [}] [Return] [Util] [.] [Substitute] [(] ["s/, Compiled , Code/, Test, Suite.java:, Xxx/"] [,] [In] [)] [;] [If] [(] [Util] [.] [Match] [(] ["/\\(, Method.java:.*\\)/"] [,] [In] [)] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/\\(, Method.java:.*\\)/(, Native , Method)/"] [,] [In] [)] [;] [}] [Return] [Util] [.] [Substitute] [(] ["s/\\(, Method.java:.*\\)/(, Native , Method)/"] [,] [In] [)] [;] [Return] [In] [;]
Class Transformer@@ [Transform] [String] [Line] [;] [Buffered, Reader] [Input] [=] [New] [Buffered, Reader] [(] [New] [File, Reader] [(] [In] [)] [)] [;] [Print, Stream] [Output] [=] [New] [Print, Stream] [(] [New] [File, Output, Stream] [(] [Out] [,] [False] [)] [)] [;] [While] [(] [(] [Line] [=] [Input] [.] [Read, Line] [(] [)] [)] [!=] [Null] [)] [{] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Filters] [.] [Length] [;] [I] [++] [)] [{] [Line] [=] [Filters] [[] [I] []] [.] [Filter] [(] [Line] [)] [;] [}] [If] [(] [Line] [!=] [Null] [)] [{] [Output] [.] [Println] [(] [Line] [)] [;] [}] [}] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [Filters] [.] [Length] [;] [I] [++] [)] [{] [Line] [=] [Filters] [[] [I] []] [.] [Filter] [(] [Line] [)] [;] [}] [Line] [=] [Filters] [[] [I] []] [.] [Filter] [(] [Line] [)] [;] [If] [(] [Line] [!=] [Null] [)] [{] [Output] [.] [Println] [(] [Line] [)] [;] [}] [Output] [.] [Println] [(] [Line] [)] [;] [Transform] [String] [Line] [;] [Buffered, Reader] [Input] [=] [New] [Buffered, Reader] [(] [New] [File, Reader] [(] [In] [)] [)] [;] [Print, Stream] [Output] [=] [New] [Print, Stream] [(] [New] [File, Output, Stream] [(] [Out] [)] [)] [;] [While] [(] [(] [Line] [=] [Input] [.] [Read, Line] [(] [)] [)] [!=] [Null] [)] [{] [Line] [=] [Filter] [.] [Filter] [(] [Line] [)] [;] [Output] [.] [Println] [(] [Line] [)] [;] [}] [Line] [=] [Filter] [.] [Filter] [(] [Line] [)] [;] [Output] [.] [Println] [(] [Line] [)] [;]
Class UnexpectedFormatException@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1787725660780924147, L] [;]
Class XMLLineAttributeFilter@@ [Perl5, Util] [Util=new, Perl5, Util()] [;] [Filter] [If] [(] [Util] [.] [Match] [(] ["/line=\"\\d{1,3}\"/"] [,] [In] [)] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/line=\"\\d{1,3}\"/line=\", X\"/"] [,] [In] [)] [;] [}] [Else] [If] [(] [Util] [.] [Match] [(] ["/line=\"?\"/"] [,] [In] [)] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/line=\"?\"/line=\", X\"/"] [,] [In] [)] [;] [}] [Else] [{] [Return] [In] [;] [}] [Return] [Util] [.] [Substitute] [(] ["s/line=\"\\d{1,3}\"/line=\", X\"/"] [,] [In] [)] [;] [Return] [Util] [.] [Substitute] [(] ["s/line=\"?\"/line=\", X\"/"] [,] [In] [)] [;] [Return] [In] [;]
Class XMLTimestampFilter@@ [Perl5, Util] [Util=new, Perl5, Util()] [;] [Filter] [If] [(] [Util] [.] [Match] [(] ["/timestamp=\"\\d{10,13}\"/"] [,] [In] [)] [)] [{] [Return] [Util] [.] [Substitute] [(] ["s/timestamp=\"\\d{10,13}\"/timestamp=\", Xxx\"/"] [,] [In] [)] [;] [}] [Else] [{] [Return] [In] [;] [}] [Return] [Util] [.] [Substitute] [(] ["s/timestamp=\"\\d{10,13}\"/timestamp=\", Xxx\"/"] [,] [In] [)] [;] [Return] [In] [;]
Class ERFATestCase@@ [Tear, Down] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Test, Constructor] [Externally, Rolled, File, Appender] [Appender] [=] [New] [Externally, Rolled, File, Appender] [(] [)] [;] [Assert, Equals] [(] [0] [,] [Appender] [.] [Get, Port] [(] [)] [)] [;] [Send, Message] [Socket] [Socket] [=] [New] [Socket] [(] [(] [String] [)] [Null] [,] [Port] [)] [;] [Data, Input, Stream] [Reader] [=] [New] [Data, Input, Stream] [(] [Socket] [.] [Get, Input, Stream] [(] [)] [)] [;] [Data, Output, Stream] [Writer] [=] [New] [Data, Output, Stream] [(] [Socket] [.] [Get, Output, Stream] [(] [)] [)] [;] [Writer] [.] [Write, Utf] [(] [Msg] [)] [;] [String] [Response] [=] [Reader] [.] [Read, Utf] [(] [)] [;] [Assert, Equals] [(] [Expected, Response] [,] [Response] [)] [;] [Reader] [.] [Close] [(] [)] [;] [Writer] [.] [Close] [(] [)] [;] [Socket] [.] [Close] [(] [)] [;] [Test, Rollover] [Externally, Rolled, File, Appender] [Erfa] [=] [New] [Externally, Rolled, File, Appender] [(] [)] [;] [Int] [Port] [=] [5500] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Rfa, Test, Case] [.] [Class] [)] [;] [Logger] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Pattern, Layout] [Layout] [=] [New] [Pattern, Layout] [(] ["%m\n"] [)] [;] [Erfa] [.] [Set, Layout] [(] [Layout] [)] [;] [Erfa] [.] [Set, Append] [(] [False] [)] [;] [Erfa] [.] [Set, Max, Backup, Index] [(] [2] [)] [;] [Erfa] [.] [Set, Port] [(] [Port] [)] [;] [Erfa] [.] [Set, File] [(] ["output/, Erfa-test2.log"] [)] [;] [Try] [{] [Erfa] [.] [Activate, Options] [(] [)] [;] [}] [Catch] [(] [Security, Exception] [Ex] [)] [{] [Return] [;] [}] [Erfa] [.] [Activate, Options] [(] [)] [;] [Return] [;] [Try] [{] [Thread] [.] [Sleep] [(] [100] [)] [;] [}] [Catch] [(] [Interrupted, Exception] [Ex] [)] [{] [}] [Thread] [.] [Sleep] [(] [100] [)] [;] [Root] [.] [Add, Appender] [(] [Erfa] [)] [;] [For] [(] [Int] [I] [=] [0] [;] [I] [<] [55] [;] [I] [++] [)] [{] [If] [(] [I] [<] [10] [)] [{] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [}] [Else] [If] [(] [I] [<] [100] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [If] [(] [(] [I] [%] [10] [)] [==] [9] [)] [{] [Try] [{] [Send, Message] [(] [Port] [,] [", Roll, Over"] [,] [", Ok"] [)] [;] [}] [Catch] [(] [Security, Exception] [Ex] [)] [{] [Return] [;] [}] [}] [}] [If] [(] [I] [<] [10] [)] [{] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [}] [Else] [If] [(] [I] [<] [100] [)] [{] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [}] [Logger] [.] [Debug] [(] [", Hello---"] [+] [I] [)] [;] [Logger] [.] [Debug] [(] [", Hello--"] [+] [I] [)] [;] [If] [(] [(] [I] [%] [10] [)] [==] [9] [)] [{] [Try] [{] [Send, Message] [(] [Port] [,] [", Roll, Over"] [,] [", Ok"] [)] [;] [}] [Catch] [(] [Security, Exception] [Ex] [)] [{] [Return] [;] [}] [}] [Try] [{] [Send, Message] [(] [Port] [,] [", Roll, Over"] [,] [", Ok"] [)] [;] [}] [Catch] [(] [Security, Exception] [Ex] [)] [{] [Return] [;] [}] [Send, Message] [(] [Port] [,] [", Roll, Over"] [,] [", Ok"] [)] [;] [Return] [;] [Try] [{] [Send, Message] [(] [Port] [,] [", That's all folks."] [,] [", Expecting [, Roll, Over] string."] [)] [;] [}] [Catch] [(] [Security, Exception] [Ex] [)] [{] [Return] [;] [}] [Send, Message] [(] [Port] [,] [", That's all folks."] [,] [", Expecting [, Roll, Over] string."] [)] [;] [Return] [;] [Assert, True] [(] [New] [File] [(] ["output/, Erfa-test2.log"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Erfa-test2.log.1"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, True] [(] [New] [File] [(] ["output/, Erfa-test2.log.2"] [)] [.] [Exists] [(] [)] [)] [;] [Assert, False] [(] [New] [File] [(] ["output/, Erfa-test2.log.3"] [)] [.] [Exists] [(] [)] [)] [;]
Class ErrorHandlerTestCase@@ [Static] [String] [Temp="output/temp"] [;] [Static] [String] [Filtered="output/filtered"] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\(, Native , Method\\)"] [;] [Static] [String] [Test1, Pat=", Fallback - (root|test) - , Message \\d"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Set, Up] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["test"] [)] [;] [Tear, Down] [Root] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Test1] [Dom, Configurator] [.] [Configure] [(] ["input/xml/fallback1.xml"] [)] [;] [Appender] [Primary] [=] [Root] [.] [Get, Appender] [(] [", Primary"] [)] [;] [Error, Handler] [Eh] [=] [Primary] [.] [Get, Error, Handler] [(] [)] [;] [Assert, Not, Null] [(] [Eh] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Test1, Pat] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/fallback1"] [)] [)] [;] [Test2] [Property, Configurator] [.] [Configure] [(] ["input/fallback1.properties"] [)] [;] [Appender] [Primary] [=] [Root] [.] [Get, Appender] [(] [", Primary"] [)] [;] [Error, Handler] [Eh] [=] [Primary] [.] [Get, Error, Handler] [(] [)] [;] [Assert, Not, Null] [(] [Eh] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Test1, Pat] [,] [Exception1] [,] [Exception2] [,] [Exception3] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [Cf] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/fallback1"] [)] [)] [;] [Common] [Int] [I] [=] [-] [1] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Info] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [Exception] [E] [=] [New] [Exception] [(] [", Just testing"] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Root] [.] [Debug] [(] [", Message "] [+] [I] [,] [E] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Root] [.] [Error] [(] [", Message "] [+] [I] [,] [E] [)] [;]
Class LevelMatchFilterTestCase@@ [Static] [String] [Accept, File="output/, Level, Match, FilterAccept"] [;] [Static] [String] [Accept, Filtered="output/, Level, Match, FilterAcceptFiltered"] [;] [Static] [String] [Accept, Witness="witness/, Level, Match, FilterAccept"] [;] [Static] [String] [Deny, File="output/, Level, Match, FilterDeny"] [;] [Static] [String] [Deny, Filtered="output/, Level, Match, FilterDenyFiltered"] [;] [Static] [String] [Deny, Witness="witness/, Level, Match, FilterDeny"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Set, Up] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Remove, All, Appenders] [(] [)] [;] [Tear, Down] [Root] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Accept] [Layout] [Layout] [=] [New] [Simple, Layout] [(] [)] [;] [Appender] [Appender] [=] [New] [File, Appender] [(] [Layout] [,] [Accept, File] [,] [False] [)] [;] [Level, Match, Filter] [Match, Filter] [=] [New] [Level, Match, Filter] [(] [)] [;] [Appender] [.] [Add, Filter] [(] [Match, Filter] [)] [;] [Appender] [.] [Add, Filter] [(] [New] [Deny, All, Filter] [(] [)] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Root] [.] [Set, Level] [(] [Level] [.] [Trace] [)] [;] [Level] [[] []] [Level, Array] [=] [New] [Level] [[] []] [{] [Level] [.] [Trace] [,] [Level] [.] [Debug] [,] [Level] [.] [Info] [,] [Level] [.] [Warn] [,] [Level] [.] [Error] [,] [Level] [.] [Fatal] [}] [;] [For] [(] [Int] [X] [=] [0] [;] [X] [<] [Level, Array] [.] [Length] [;] [X] [++] [)] [{] [Match, Filter] [.] [Set, Level, To, Match] [(] [Level, Array] [[] [X] []] [.] [To, String] [(] [)] [)] [;] [Common] [(] ["pass "] [+] [X] [+] ["; filter set to accept only "] [+] [Level, Array] [[] [X] []] [.] [To, String] [(] [)] [+] [" msgs"] [)] [;] [}] [Match, Filter] [.] [Set, Level, To, Match] [(] [Level, Array] [[] [X] []] [.] [To, String] [(] [)] [)] [;] [Common] [(] ["pass "] [+] [X] [+] ["; filter set to accept only "] [+] [Level, Array] [[] [X] []] [.] [To, String] [(] [)] [+] [" msgs"] [)] [;] [Transformer] [.] [Transform] [(] [Accept, File] [,] [Accept, Filtered] [,] [New] [Line, Number, Filter] [(] [)] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Accept, Filtered] [,] [Accept, Witness] [)] [)] [;] [Deny] [Layout] [Layout] [=] [New] [Simple, Layout] [(] [)] [;] [Appender] [Appender] [=] [New] [File, Appender] [(] [Layout] [,] [Deny, File] [,] [False] [)] [;] [Level, Match, Filter] [Match, Filter] [=] [New] [Level, Match, Filter] [(] [)] [;] [Match, Filter] [.] [Set, Accept, On, Match] [(] [False] [)] [;] [Appender] [.] [Add, Filter] [(] [Match, Filter] [)] [;] [Root] [.] [Add, Appender] [(] [Appender] [)] [;] [Root] [.] [Set, Level] [(] [Level] [.] [Trace] [)] [;] [Level] [[] []] [Level, Array] [=] [New] [Level] [[] []] [{] [Level] [.] [Trace] [,] [Level] [.] [Debug] [,] [Level] [.] [Info] [,] [Level] [.] [Warn] [,] [Level] [.] [Error] [,] [Level] [.] [Fatal] [}] [;] [For] [(] [Int] [X] [=] [0] [;] [X] [<] [Level, Array] [.] [Length] [;] [X] [++] [)] [{] [Match, Filter] [.] [Set, Level, To, Match] [(] [Level, Array] [[] [X] []] [.] [To, String] [(] [)] [)] [;] [Common] [(] ["pass "] [+] [X] [+] ["; filter set to deny only "] [+] [Level, Array] [[] [X] []] [.] [To, String] [(] [)] [+] [" msgs"] [)] [;] [}] [Match, Filter] [.] [Set, Level, To, Match] [(] [Level, Array] [[] [X] []] [.] [To, String] [(] [)] [)] [;] [Common] [(] ["pass "] [+] [X] [+] ["; filter set to deny only "] [+] [Level, Array] [[] [X] []] [.] [To, String] [(] [)] [+] [" msgs"] [)] [;] [Transformer] [.] [Transform] [(] [Deny, File] [,] [Deny, Filtered] [,] [New] [Line, Number, Filter] [(] [)] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Deny, Filtered] [,] [Deny, Witness] [)] [)] [;] [Common] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["test"] [)] [;] [Logger] [.] [Trace] [(] [Msg] [)] [;] [Logger] [.] [Debug] [(] [Msg] [)] [;] [Logger] [.] [Info] [(] [Msg] [)] [;] [Logger] [.] [Warn] [(] [Msg] [)] [;] [Logger] [.] [Error] [(] [Msg] [)] [;] [Logger] [.] [Fatal] [(] [Msg] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Level, Match, Filter, Test, Case] [(] ["accept"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Level, Match, Filter, Test, Case] [(] ["deny"] [)] [)] [;] [Return] [Suite] [;]
Class VectorAppender@@ [Public] [Vector] [Vector] [;] [Vector] [=] [New] [Vector] [(] [)] [;] [Activate, Options] [Append] [Try] [{] [Thread] [.] [Sleep] [(] [100] [)] [;] [}] [Catch] [(] [Exception] [E] [)] [{] [}] [Thread] [.] [Sleep] [(] [100] [)] [;] [Vector] [.] [Add, Element] [(] [Event] [)] [;] [Get, Vector] [Return] [Vector] [;] [Close] [If] [(] [This] [.] [Closed] [)] [Return] [;] [This] [.] [Closed] [=] [True] [;] [Is, Closed] [Return] [Closed] [;] [Requires, Layout] [Return] [False] [;]
Class VectorErrorHandler@@ [Private] [Logger] [Logger] [;] [Private] [Appender] [Appender] [;] [Private] [Appender] [Backup, Appender] [;] [Private] [Final] [Vector] [Errors=new, Vector()] [;] [Set, Logger] [This] [.] [Logger] [=] [Logger] [;] [Get, Logger] [Return] [Logger] [;] [Activate, Options] [Error] [Error] [(] [Message] [,] [E] [,] [Error, Code] [,] [Null] [)] [;] [Error] [Error] [(] [Message] [,] [Null] [,] [-] [1] [,] [Null] [)] [;] [Error] [Errors] [.] [Add, Element] [(] [New] [Object] [[] []] [{] [Message] [,] [E] [,] [New] [Integer] [(] [Error, Code] [)] [,] [Event] [}] [)] [;] [Get, Message] [Return] [(] [String] [)] [(] [(] [Object] [[] []] [)] [Errors] [.] [Element, At] [(] [Index] [)] [)] [[] [0] []] [;] [Get, Exception] [Return] [(] [Exception] [)] [(] [(] [Object] [[] []] [)] [Errors] [.] [Element, At] [(] [Index] [)] [)] [[] [1] []] [;] [Get, Error, Code] [Return] [(] [(] [Integer] [)] [(] [(] [Object] [[] []] [)] [Errors] [.] [Element, At] [(] [Index] [)] [)] [[] [2] []] [)] [.] [Int, Value] [(] [)] [;] [Get, Event] [Return] [(] [Logging, Event] [)] [(] [(] [Object] [[] []] [)] [Errors] [.] [Element, At] [(] [Index] [)] [)] [[] [3] []] [;] [Size] [Return] [Errors] [.] [Size] [(] [)] [;] [Set, Appender] [This] [.] [Appender] [=] [Appender] [;] [Get, Appender] [Return] [Appender] [;] [Set, Backup, Appender] [This] [.] [Backup, Appender] [=] [Appender] [;] [Get, Backup, Appender] [Return] [Backup, Appender] [;]
Class CustomLevelTestCase@@ [Static] [String] [Temp="output/temp"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Set, Up] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Custom, Level, Test, Case] [.] [Class] [)] [;] [Tear, Down] [Root] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Test1] [Dom, Configurator] [.] [Configure] [(] ["input/xml/custom, Level1.xml"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/custom, Level.1"] [)] [)] [;] [Test2] [Dom, Configurator] [.] [Configure] [(] ["input/xml/custom, Level2.xml"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/custom, Level.2"] [)] [)] [;] [Test3] [Dom, Configurator] [.] [Configure] [(] ["input/xml/custom, Level3.xml"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/custom, Level.3"] [)] [)] [;] [Test4] [Dom, Configurator] [.] [Configure] [(] ["input/xml/custom, Level4.xml"] [)] [;] [Common] [(] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Temp] [,] ["witness/custom, Level.4"] [)] [)] [;] [Common] [Int] [I] [=] [0] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Info] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [)] [;] [Logger] [.] [Log] [(] [X, Level] [.] [Trace] [,] [", Message "] [+] [++] [I] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Custom, Level, Test, Case] [(] ["test1"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Custom, Level, Test, Case] [(] ["test2"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Custom, Level, Test, Case] [(] ["test3"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Custom, Level, Test, Case] [(] ["test4"] [)] [)] [;] [Return] [Suite] [;]
Class DOMTestCase@@ [Static] [String] [Temp, A1="output/temp., A1"] [;] [Static] [String] [Temp, A2="output/temp., A2"] [;] [Static] [String] [Filtered, A1="output/filtered., A1"] [;] [Static] [String] [Filtered, A2="output/filtered., A2"] [;] [Static] [String] [Exception1="java.lang., Exception: , Just testing"] [;] [Static] [String] [Exception2="\\s*at .*\\(.*\\)"] [;] [Static] [String] [Exception3="\\s*at .*\\(, Native , Method\\)"] [;] [Static] [String] [Exception4="\\s*at .*\\(.*, Compiled , Code\\)"] [;] [Static] [String] [Exception5="\\s*at .*\\(.*libgcj.*\\)"] [;] [Static] [String] [Test11, A, Pat="(, Trace|, Debug|, Info |, Warn |, Error|, Fatal) \\w*\\.\\w* - , Message \\d"] [;] [Static] [String] [Test11, B, Pat="(, Trace|, Debug|, Info |, Warn |, Error|, Fatal) root - , Message \\d"] [;] [Static] [String] [Test12, Pat="^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3} "+"\\[main]\\ (, Trace|, Debug|, Info|, Warn|, Error|, Fatal) .* - , Message \\d"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Set, Up] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Dom, Test, Case] [.] [Class] [)] [;] [Tear, Down] [Root] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Test1] [Dom, Configurator] [.] [Configure] [(] ["input/xml/, Dom, Test, Case1.xml"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Test11, A, Pat] [,] [Test11, B, Pat] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Control, Filter] [Cf2] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Test12, Pat] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp, A1] [,] [Filtered, A1] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp, A2] [,] [Filtered, A2] [,] [New] [Filter] [[] []] [{] [Cf2] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Iso8601, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered, A1] [,] ["witness/dom., A1.1"] [)] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered, A2] [,] ["witness/dom., A2.1"] [)] [)] [;] [Test4] [Dom, Configurator] [.] [Configure] [(] ["input/xml/, Dom, Test4.xml"] [)] [;] [Common] [(] [)] [;] [Control, Filter] [Cf1] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Test11, A, Pat] [,] [Test11, B, Pat] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Control, Filter] [Cf2] [=] [New] [Control, Filter] [(] [New] [String] [[] []] [{] [Test12, Pat] [,] [Exception1] [,] [Exception2] [,] [Exception3] [,] [Exception4] [,] [Exception5] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp, A1] [+] [".4"] [,] [Filtered, A1] [+] [".4"] [,] [New] [Filter] [[] []] [{] [Cf1] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp, A2] [+] [".4"] [,] [Filtered, A2] [+] [".4"] [,] [New] [Filter] [[] []] [{] [Cf2] [,] [New] [Line, Number, Filter] [(] [)] [,] [New] [Iso8601, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered, A1] [+] [".4"] [,] ["witness/dom., A1.4"] [)] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered, A2] [+] [".4"] [,] ["witness/dom., A2.4"] [)] [)] [;] [Common] [String] [Old, Thread, Name] [=] [Thread] [.] [Current, Thread] [(] [)] [.] [Get, Name] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] ["main"] [)] [;] [Int] [I] [=] [-] [1] [;] [Logger] [.] [Trace] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Trace] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Info] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [Exception] [E] [=] [New] [Exception] [(] [", Just testing"] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Root] [.] [Debug] [(] [", Message "] [+] [I] [,] [E] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Root] [.] [Error] [(] [", Message "] [+] [I] [,] [E] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Old, Thread, Name] [)] [;]
Class CustomLogger@@
Class CustomLoggerFactory@@ [Private] [Boolean] [Additivity] [;] [Additivity] [=] [True] [;] [Make, New, Logger, Instance] [Logger] [Logger] [=] [New] [Custom, Logger] [(] [Name] [)] [;] [Assert, False] [(] [Additivity] [)] [;] [Return] [Logger] [;] [Set, Additivity] [Additivity] [=] [New, Val] [;]
Class CustomErrorHandler@@ [Activate, Options] [Set, Logger] [Error] [Error] [Error] [Set, Appender] [Set, Backup, Appender] [Test, Category, Factory1] [Dom, Configurator] [.] [Configure] [(] ["input/xml/categoryfactory1.xml"] [)] [;] [Logger] [Logger1] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Dom, Test, Case.test, Category, Factory1.1"] [)] [;] [Assert, True] [(] [Logger1] [Instanceof] [Custom, Logger] [)] [;] [Logger] [Logger2] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Dom, Test, Case.test, Category, Factory1.2"] [)] [;] [Assert, False] [(] [Logger2] [Instanceof] [Custom, Logger] [)] [;] [Test, Category, Factory2] [Dom, Configurator] [.] [Configure] [(] ["input/xml/categoryfactory2.xml"] [)] [;] [Logger] [Logger1] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Dom, Test, Case.test, Category, Factory2.1"] [)] [;] [Assert, True] [(] [Logger1] [Instanceof] [Custom, Logger] [)] [;] [Logger] [Logger2] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Dom, Test, Case.test, Category, Factory2.2"] [)] [;] [Assert, False] [(] [Logger2] [Instanceof] [Custom, Logger] [)] [;] [Test, Logger, Factory1] [Dom, Configurator] [.] [Configure] [(] ["input/xml/loggerfactory1.xml"] [)] [;] [Logger] [Logger1] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Dom, Test, Case.test, Logger, Factory1.1"] [)] [;] [Assert, True] [(] [Logger1] [Instanceof] [Custom, Logger] [)] [;] [Logger] [Logger2] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Dom, Test, Case.test, Logger, Factory1.2"] [)] [;] [Assert, False] [(] [Logger2] [Instanceof] [Custom, Logger] [)] [;] [Test, Reset] [Vector, Appender] [Appender] [=] [New] [Vector, Appender] [(] [)] [;] [Appender] [.] [Set, Name] [(] [", V1"] [)] [;] [Logger] [.] [Get, Root, Logger] [(] [)] [.] [Add, Appender] [(] [Appender] [)] [;] [Dom, Configurator] [.] [Configure] [(] ["input/xml/test, Reset.xml"] [)] [;] [Assert, Null] [(] [Logger] [.] [Get, Root, Logger] [(] [)] [.] [Get, Appender] [(] [", V1"] [)] [)] [;] [Test, Configure, And, Watch] [Dom, Configurator] [.] [Configure, And, Watch] [(] ["input/xml/, Dom, Test, Case1.xml"] [)] [;] [Assert, Not, Null] [(] [Logger] [.] [Get, Root, Logger] [(] [)] [.] [Get, Appender] [(] [", A1"] [)] [)] [;] [Test, Override, Subst] [Dom, Configurator] [Configurator] [=] [New] [Dom, Configurator] [(] [)] [{] [Protected] [String] [Subst] [(] [Final] [String] [Value] [)] [{] [If] [(] ["output/temp., A1"] [.] [Equals] [(] [Value] [)] [)] [{] [Return] ["output/subst-test., A1"] [;] [}] [Return] [Value] [;] [}] [}] [;] [Subst] [If] [(] ["output/temp., A1"] [.] [Equals] [(] [Value] [)] [)] [{] [Return] ["output/subst-test., A1"] [;] [}] [Return] ["output/subst-test., A1"] [;] [Return] [Value] [;] [Configurator] [.] [Do, Configure] [(] ["input/xml/, Dom, Test, Case1.xml"] [,] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [)] [;] [File, Appender] [A1] [=] [(] [File, Appender] [)] [Logger] [.] [Get, Root, Logger] [(] [)] [.] [Get, Appender] [(] [", A1"] [)] [;] [String] [File] [=] [A1] [.] [Get, File] [(] [)] [;] [Assert, Equals] [(] ["output/subst-test., A1"] [,] [File] [)] [;]
Class MockThrowableRenderer@@ [Private] [Boolean] [Activated=false] [;] [Private] [Boolean] [Show, Version=true] [;] [Activate, Options] [Activated] [=] [True] [;] [Is, Activated] [Return] [Activated] [;] [Do, Render] [Return] [New] [String] [[] [0] []] [;] [Set, Show, Version] [Show, Version] [=] [V] [;] [Get, Show, Version] [Return] [Show, Version] [;] [Test, Throwable, Renderer1] [Dom, Configurator] [.] [Configure] [(] ["input/xml/throwable, Renderer1.xml"] [)] [;] [Throwable, Renderer, Support] [Repo] [=] [(] [Throwable, Renderer, Support] [)] [Log, Manager] [.] [Get, Logger, Repository] [(] [)] [;] [Mock, Throwable, Renderer] [Renderer] [=] [(] [Mock, Throwable, Renderer] [)] [Repo] [.] [Get, Throwable, Renderer] [(] [)] [;] [Log, Manager] [.] [Reset, Configuration] [(] [)] [;] [Assert, Not, Null] [(] [Renderer] [)] [;] [Assert, Equals] [(] [True] [,] [Renderer] [.] [Is, Activated] [(] [)] [)] [;] [Assert, Equals] [(] [False] [,] [Renderer] [.] [Get, Show, Version] [(] [)] [)] [;] [Test, Jar, Url] [File] [Input] [=] [New] [File] [(] ["input/xml/default, Init.xml"] [)] [;] [System] [.] [Out] [.] [Println] [(] [Input] [.] [Get, Absolute, Path] [(] [)] [)] [;] [Input, Stream] [Is] [=] [New] [File, Input, Stream] [(] [Input] [)] [;] [File] [Dir] [=] [New] [File] [(] ["output"] [)] [;] [Dir] [.] [Mkdirs] [(] [)] [;] [File] [File] [=] [New] [File] [(] ["output/xml.jar"] [)] [;] [Zip, Output, Stream] [Zos] [=] [New] [Zip, Output, Stream] [(] [New] [File, Output, Stream] [(] [File] [)] [)] [;] [Zos] [.] [Put, Next, Entry] [(] [New] [Zip, Entry] [(] ["log4j.xml"] [)] [)] [;] [Int] [Len] [;] [Byte] [[] []] [Buf] [=] [New] [Byte] [[] [1024] []] [;] [While] [(] [(] [Len] [=] [Is] [.] [Read] [(] [Buf] [)] [)] [>] [0] [)] [{] [Zos] [.] [Write] [(] [Buf] [,] [0] [,] [Len] [)] [;] [}] [Zos] [.] [Write] [(] [Buf] [,] [0] [,] [Len] [)] [;] [Zos] [.] [Close, Entry] [(] [)] [;] [Zos] [.] [Close] [(] [)] [;] [Url] [Url] [=] [New] [Url] [(] ["jar:"] [+] [File] [.] [To, Url] [(] [)] [+] ["!/log4j.xml"] [)] [;] [Dom, Configurator] [.] [Configure] [(] [Url] [)] [;] [Assert, True] [(] [File] [.] [Delete] [(] [)] [)] [;] [Assert, False] [(] [File] [.] [Exists] [(] [)] [)] [;]
Class XLevel@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=7288304330257085144, L] [;] [Static] [Public] [Final] [Int] [Trace, Int=, Level., Debug, Int-1] [;] [Static] [Public] [Final] [Int] [Lethal, Int=, Level., Fatal, Int+1] [;] [Private] [Static] [String] [Trace, Str=", Trace"] [;] [Private] [Static] [String] [Lethal, Str=", Lethal"] [;] [Public] [Static] [Final] [X, Level] [Trace=new, X, Level(, Trace, Int,, Trace, Str,7)] [;] [Public] [Static] [Final] [X, Level] [Lethal=new, X, Level(, Lethal, Int,, Lethal, Str,0)] [;] [To, Level] [Return] [(] [Level] [)] [To, Level] [(] [S, Arg] [,] [X, Level] [.] [Trace] [)] [;] [To, Level] [If] [(] [S, Arg] [==] [Null] [)] [{] [Return] [Default, Value] [;] [}] [Return] [Default, Value] [;] [String] [String, Val] [=] [S, Arg] [.] [To, Upper, Case] [(] [)] [;] [If] [(] [String, Val] [.] [Equals] [(] [Trace, Str] [)] [)] [{] [Return] [X, Level] [.] [Trace] [;] [}] [Else] [If] [(] [String, Val] [.] [Equals] [(] [Lethal, Str] [)] [)] [{] [Return] [X, Level] [.] [Lethal] [;] [}] [Return] [X, Level] [.] [Trace] [;] [Return] [X, Level] [.] [Lethal] [;] [Return] [Level] [.] [To, Level] [(] [S, Arg] [,] [(] [Level] [)] [Default, Value] [)] [;] [To, Level] [Switch] [(] [I] [)] [{] [Case] [Trace, Int] [:] [Return] [X, Level] [.] [Trace] [;] [Case] [Lethal, Int] [:] [Return] [X, Level] [.] [Lethal] [;] [}] [Return] [X, Level] [.] [Trace] [;] [Return] [X, Level] [.] [Lethal] [;] [Return] [Level] [.] [To, Level] [(] [I] [)] [;]
Class XMLLayoutTest@@ [Set, Up] [Ndc] [.] [Clear] [(] [)] [;] [If] [(] [Mdc] [.] [Get, Context] [(] [)] [!=] [Null] [)] [{] [Mdc] [.] [Get, Context] [(] [)] [.] [Clear] [(] [)] [;] [}] [Mdc] [.] [Get, Context] [(] [)] [.] [Clear] [(] [)] [;] [Tear, Down] [Set, Up] [(] [)] [;] [Create, Layout] [Return] [New] [Xml, Layout] [(] [)] [;] [Parse] [Document, Builder, Factory] [Factory] [=] [Document, Builder, Factory] [.] [New, Instance] [(] [)] [;] [Factory] [.] [Set, Namespace, Aware] [(] [False] [)] [;] [Factory] [.] [Set, Coalescing] [(] [True] [)] [;] [Document, Builder] [Builder] [=] [Factory] [.] [New, Document, Builder] [(] [)] [;] [Reader] [Reader] [=] [New] [String, Reader] [(] [Source] [)] [;] [Document] [Doc] [=] [Builder] [.] [Parse] [(] [New] [Input, Source] [(] [Reader] [)] [)] [;] [Return] [Doc] [.] [Get, Document, Element] [(] [)] [;] [Check, Event, Element] [Assert, Equals] [(] ["log4j:event"] [,] [Element] [.] [Get, Tag, Name] [(] [)] [)] [;] [Assert, Equals] [(] [Event] [.] [Get, Logger, Name] [(] [)] [,] [Element] [.] [Get, Attribute] [(] ["logger"] [)] [)] [;] [Assert, Equals] [(] [Long] [.] [To, String] [(] [Event] [.] [Time, Stamp] [)] [,] [Element] [.] [Get, Attribute] [(] ["timestamp"] [)] [)] [;] [Assert, Equals] [(] [Event] [.] [Get, Level] [(] [)] [.] [To, String] [(] [)] [,] [Element] [.] [Get, Attribute] [(] ["level"] [)] [)] [;] [Assert, Equals] [(] [Event] [.] [Get, Thread, Name] [(] [)] [,] [Element] [.] [Get, Attribute] [(] ["thread"] [)] [)] [;] [Check, Message, Element] [Assert, Equals] [(] ["log4j:message"] [,] [Element] [.] [Get, Tag, Name] [(] [)] [)] [;] [Node] [Message, Node] [=] [Element] [.] [Get, First, Child] [(] [)] [;] [Assert, Not, Null] [(] [Message, Node] [)] [;] [Assert, Equals] [(] [Node] [.] [Text, Node] [,] [Message, Node] [.] [Get, Node, Type] [(] [)] [)] [;] [Assert, Equals] [(] [Message] [,] [Message, Node] [.] [Get, Node, Value] [(] [)] [)] [;] [Assert, Null] [(] [Message, Node] [.] [Get, Next, Sibling] [(] [)] [)] [;] [Check, Ndc, Element] [Assert, Equals] [(] ["log4j:, Ndc"] [,] [Element] [.] [Get, Tag, Name] [(] [)] [)] [;] [Node] [Message, Node] [=] [Element] [.] [Get, First, Child] [(] [)] [;] [Assert, Not, Null] [(] [Message, Node] [)] [;] [Assert, Equals] [(] [Node] [.] [Text, Node] [,] [Message, Node] [.] [Get, Node, Type] [(] [)] [)] [;] [Assert, Equals] [(] [Message] [,] [Message, Node] [.] [Get, Node, Value] [(] [)] [)] [;] [Assert, Null] [(] [Message, Node] [.] [Get, Next, Sibling] [(] [)] [)] [;] [Check, Throwable, Element] [Assert, Equals] [(] ["log4j:throwable"] [,] [Element] [.] [Get, Tag, Name] [(] [)] [)] [;] [Node] [Message, Node] [=] [Element] [.] [Get, First, Child] [(] [)] [;] [Assert, Not, Null] [(] [Message, Node] [)] [;] [Assert, Equals] [(] [Node] [.] [Text, Node] [,] [Message, Node] [.] [Get, Node, Type] [(] [)] [)] [;] [String] [Msg] [=] [Ex] [.] [To, String] [(] [)] [;] [Assert, Equals] [(] [Msg] [,] [Message, Node] [.] [Get, Node, Value] [(] [)] [.] [Substring] [(] [0] [,] [Msg] [.] [Length] [(] [)] [)] [)] [;] [Assert, Null] [(] [Message, Node] [.] [Get, Next, Sibling] [(] [)] [)] [;] [Check, Properties, Element] [Assert, Equals] [(] ["log4j:properties"] [,] [Element] [.] [Get, Tag, Name] [(] [)] [)] [;] [Int] [Child, Node, Count] [=] [0] [;] [For] [(] [Node] [Child] [=] [Element] [.] [Get, First, Child] [(] [)] [;] [Child] [!=] [Null] [;] [Child] [=] [Child] [.] [Get, Next, Sibling] [(] [)] [)] [{] [If] [(] [Child] [.] [Get, Node, Type] [(] [)] [==] [Node] [.] [Element, Node] [)] [{] [Assert, Equals] [(] ["log4j:data"] [,] [Child] [.] [Get, Node, Name] [(] [)] [)] [;] [Element] [Child, Element] [=] [(] [Element] [)] [Child] [;] [Assert, Equals] [(] [Key] [,] [Child, Element] [.] [Get, Attribute] [(] ["name"] [)] [)] [;] [Assert, Equals] [(] [Value] [,] [Child, Element] [.] [Get, Attribute] [(] ["value"] [)] [)] [;] [Child, Node, Count] [++] [;] [}] [}] [If] [(] [Child] [.] [Get, Node, Type] [(] [)] [==] [Node] [.] [Element, Node] [)] [{] [Assert, Equals] [(] ["log4j:data"] [,] [Child] [.] [Get, Node, Name] [(] [)] [)] [;] [Element] [Child, Element] [=] [(] [Element] [)] [Child] [;] [Assert, Equals] [(] [Key] [,] [Child, Element] [.] [Get, Attribute] [(] ["name"] [)] [)] [;] [Assert, Equals] [(] [Value] [,] [Child, Element] [.] [Get, Attribute] [(] ["value"] [)] [)] [;] [Child, Node, Count] [++] [;] [}] [Assert, Equals] [(] ["log4j:data"] [,] [Child] [.] [Get, Node, Name] [(] [)] [)] [;] [Element] [Child, Element] [=] [(] [Element] [)] [Child] [;] [Assert, Equals] [(] [Key] [,] [Child, Element] [.] [Get, Attribute] [(] ["name"] [)] [)] [;] [Assert, Equals] [(] [Value] [,] [Child, Element] [.] [Get, Attribute] [(] ["value"] [)] [)] [;] [Child, Node, Count] [++] [;] [Assert, Equals] [(] [1] [,] [Child, Node, Count] [)] [;] [Test, Format] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Xml, Layout, Test"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Info] [,] [", Hello, , World"] [,] [Null] [)] [;] [Xml, Layout] [Layout] [=] [(] [Xml, Layout] [)] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [Element] [Parsed, Result] [=] [Parse] [(] [Result] [)] [;] [Check, Event, Element] [(] [Parsed, Result] [,] [Event] [)] [;] [Int] [Child, Element, Count] [=] [0] [;] [For] [(] [Node] [Node] [=] [Parsed, Result] [.] [Get, First, Child] [(] [)] [;] [Node] [!=] [Null] [;] [Node] [=] [Node] [.] [Get, Next, Sibling] [(] [)] [)] [{] [Switch] [(] [Node] [.] [Get, Node, Type] [(] [)] [)] [{] [Case] [Node] [.] [Element, Node] [:] [Child, Element, Count] [++] [;] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [Break] [;] [Case] [Node] [.] [Comment, Node] [:] [Break] [;] [Case] [Node] [.] [Text, Node] [:] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [}] [}] [Switch] [(] [Node] [.] [Get, Node, Type] [(] [)] [)] [{] [Case] [Node] [.] [Element, Node] [:] [Child, Element, Count] [++] [;] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [Break] [;] [Case] [Node] [.] [Comment, Node] [:] [Break] [;] [Case] [Node] [.] [Text, Node] [:] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [}] [Child, Element, Count] [++] [;] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [Break] [;] [Break] [;] [Break] [;] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [Assert, Equals] [(] [1] [,] [Child, Element, Count] [)] [;] [Test, Format, With, Exception] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Xml, Layout, Test"] [)] [;] [Exception] [Ex] [=] [New] [Illegal, Argument, Exception] [(] ["'foo' is not a valid name"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Info] [,] [", Hello, , World"] [,] [Ex] [)] [;] [Xml, Layout] [Layout] [=] [(] [Xml, Layout] [)] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [Element] [Parsed, Result] [=] [Parse] [(] [Result] [)] [;] [Check, Event, Element] [(] [Parsed, Result] [,] [Event] [)] [;] [Int] [Child, Element, Count] [=] [0] [;] [For] [(] [Node] [Node] [=] [Parsed, Result] [.] [Get, First, Child] [(] [)] [;] [Node] [!=] [Null] [;] [Node] [=] [Node] [.] [Get, Next, Sibling] [(] [)] [)] [{] [Switch] [(] [Node] [.] [Get, Node, Type] [(] [)] [)] [{] [Case] [Node] [.] [Element, Node] [:] [Child, Element, Count] [++] [;] [If] [(] [Child, Element, Count] [==] [1] [)] [{] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [}] [Else] [{] [Check, Throwable, Element] [(] [(] [Element] [)] [Node] [,] [Ex] [)] [;] [}] [Break] [;] [Case] [Node] [.] [Comment, Node] [:] [Break] [;] [Case] [Node] [.] [Text, Node] [:] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [}] [}] [Switch] [(] [Node] [.] [Get, Node, Type] [(] [)] [)] [{] [Case] [Node] [.] [Element, Node] [:] [Child, Element, Count] [++] [;] [If] [(] [Child, Element, Count] [==] [1] [)] [{] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [}] [Else] [{] [Check, Throwable, Element] [(] [(] [Element] [)] [Node] [,] [Ex] [)] [;] [}] [Break] [;] [Case] [Node] [.] [Comment, Node] [:] [Break] [;] [Case] [Node] [.] [Text, Node] [:] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [}] [Child, Element, Count] [++] [;] [If] [(] [Child, Element, Count] [==] [1] [)] [{] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [}] [Else] [{] [Check, Throwable, Element] [(] [(] [Element] [)] [Node] [,] [Ex] [)] [;] [}] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [Check, Throwable, Element] [(] [(] [Element] [)] [Node] [,] [Ex] [)] [;] [Break] [;] [Break] [;] [Break] [;] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [Assert, Equals] [(] [2] [,] [Child, Element, Count] [)] [;] [Test, Format, With, Ndc] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["org.apache.log4j.xml., Xml, Layout, Test"] [)] [;] [Ndc] [.] [Push] [(] [", Ndc goes here"] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] ["org.apache.log4j., Logger"] [,] [Logger] [,] [Level] [.] [Info] [,] [", Hello, , World"] [,] [Null] [)] [;] [Xml, Layout] [Layout] [=] [(] [Xml, Layout] [)] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [Ndc] [.] [Pop] [(] [)] [;] [Element] [Parsed, Result] [=] [Parse] [(] [Result] [)] [;] [Check, Event, Element] [(] [Parsed, Result] [,] [Event] [)] [;] [Int] [Child, Element, Count] [=] [0] [;] [For] [(] [Node] [Node] [=] [Parsed, Result] [.] [Get, First, Child] [(] [)] [;] [Node] [!=] [Null] [;] [Node] [=] [Node] [.] [Get, Next, Sibling] [(] [)] [)] [{] [Switch] [(] [Node] [.] [Get, Node, Type] [(] [)] [)] [{] [Case] [Node] [.] [Element, Node] [:] [Child, Element, Count] [++] [;] [If] [(] [Child, Element, Count] [==] [1] [)] [{] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [}] [Else] [{] [Check, Ndc, Element] [(] [(] [Element] [)] [Node] [,] [", Ndc goes here"] [)] [;] [}] [Break] [;] [Case] [Node] [.] [Comment, Node] [:] [Break] [;] [Case] [Node] [.] [Text, Node] [:] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [}] [}] [Switch] [(] [Node] [.] [Get, Node, Type] [(] [)] [)] [{] [Case] [Node] [.] [Element, Node] [:] [Child, Element, Count] [++] [;] [If] [(] [Child, Element, Count] [==] [1] [)] [{] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [}] [Else] [{] [Check, Ndc, Element] [(] [(] [Element] [)] [Node] [,] [", Ndc goes here"] [)] [;] [}] [Break] [;] [Case] [Node] [.] [Comment, Node] [:] [Break] [;] [Case] [Node] [.] [Text, Node] [:] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [}] [Child, Element, Count] [++] [;] [If] [(] [Child, Element, Count] [==] [1] [)] [{] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [}] [Else] [{] [Check, Ndc, Element] [(] [(] [Element] [)] [Node] [,] [", Ndc goes here"] [)] [;] [}] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [", Hello, , World"] [)] [;] [Check, Ndc, Element] [(] [(] [Element] [)] [Node] [,] [", Ndc goes here"] [)] [;] [Break] [;] [Break] [;] [Break] [;] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [Assert, Equals] [(] [2] [,] [Child, Element, Count] [)] [;] [Test, Get, Set, Location, Info] [Xml, Layout] [Layout] [=] [New] [Xml, Layout] [(] [)] [;] [Assert, Equals] [(] [False] [,] [Layout] [.] [Get, Location, Info] [(] [)] [)] [;] [Layout] [.] [Set, Location, Info] [(] [True] [)] [;] [Assert, Equals] [(] [True] [,] [Layout] [.] [Get, Location, Info] [(] [)] [)] [;] [Layout] [.] [Set, Location, Info] [(] [False] [)] [;] [Assert, Equals] [(] [False] [,] [Layout] [.] [Get, Location, Info] [(] [)] [)] [;] [Test, Activate, Options] [Xml, Layout] [Layout] [=] [New] [Xml, Layout] [(] [)] [;] [Layout] [.] [Activate, Options] [(] [)] [;]
Class ProblemLevel@@ [Private] [Static] [Final] [Long] [Serial, Version, Uid=1, L] [;] [Test, Problem, Characters] [String] [Problem, Name] [=] ["com.example.bar<>&\"'"] [;] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Problem, Name] [)] [;] [Level] [Level] [=] [New] [Problem, Level] [(] [Problem, Name] [)] [;] [Exception] [Ex] [=] [New] [Illegal, Argument, Exception] [(] [Problem, Name] [)] [;] [String] [Thread, Name] [=] [Thread] [.] [Current, Thread] [(] [)] [.] [Get, Name] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Problem, Name] [)] [;] [Ndc] [.] [Push] [(] [Problem, Name] [)] [;] [Hashtable] [Mdc, Map] [=] [Mdc] [.] [Get, Context] [(] [)] [;] [If] [(] [Mdc, Map] [!=] [Null] [)] [{] [Mdc, Map] [.] [Clear] [(] [)] [;] [}] [Mdc, Map] [.] [Clear] [(] [)] [;] [Mdc] [.] [Put] [(] [Problem, Name] [,] [Problem, Name] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] [Problem, Name] [,] [Logger] [,] [Level] [,] [Problem, Name] [,] [Ex] [)] [;] [Xml, Layout] [Layout] [=] [(] [Xml, Layout] [)] [Create, Layout] [(] [)] [;] [Layout] [.] [Set, Properties] [(] [True] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [Mdc, Map] [=] [Mdc] [.] [Get, Context] [(] [)] [;] [If] [(] [Mdc, Map] [!=] [Null] [)] [{] [Mdc, Map] [.] [Clear] [(] [)] [;] [}] [Mdc, Map] [.] [Clear] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Thread, Name] [)] [;] [Element] [Parsed, Result] [=] [Parse] [(] [Result] [)] [;] [Check, Event, Element] [(] [Parsed, Result] [,] [Event] [)] [;] [Int] [Child, Element, Count] [=] [0] [;] [For] [(] [Node] [Node] [=] [Parsed, Result] [.] [Get, First, Child] [(] [)] [;] [Node] [!=] [Null] [;] [Node] [=] [Node] [.] [Get, Next, Sibling] [(] [)] [)] [{] [Switch] [(] [Node] [.] [Get, Node, Type] [(] [)] [)] [{] [Case] [Node] [.] [Element, Node] [:] [Child, Element, Count] [++] [;] [Switch] [(] [Child, Element, Count] [)] [{] [Case] [1] [:] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [)] [;] [Break] [;] [Case] [2] [:] [Check, Ndc, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [)] [;] [Break] [;] [Case] [3] [:] [Check, Throwable, Element] [(] [(] [Element] [)] [Node] [,] [Ex] [)] [;] [Break] [;] [Case] [4] [:] [Check, Properties, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [,] [Problem, Name] [)] [;] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected element"] [)] [;] [Break] [;] [}] [Break] [;] [Case] [Node] [.] [Comment, Node] [:] [Break] [;] [Case] [Node] [.] [Text, Node] [:] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [}] [}] [Switch] [(] [Node] [.] [Get, Node, Type] [(] [)] [)] [{] [Case] [Node] [.] [Element, Node] [:] [Child, Element, Count] [++] [;] [Switch] [(] [Child, Element, Count] [)] [{] [Case] [1] [:] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [)] [;] [Break] [;] [Case] [2] [:] [Check, Ndc, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [)] [;] [Break] [;] [Case] [3] [:] [Check, Throwable, Element] [(] [(] [Element] [)] [Node] [,] [Ex] [)] [;] [Break] [;] [Case] [4] [:] [Check, Properties, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [,] [Problem, Name] [)] [;] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected element"] [)] [;] [Break] [;] [}] [Break] [;] [Case] [Node] [.] [Comment, Node] [:] [Break] [;] [Case] [Node] [.] [Text, Node] [:] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [}] [Child, Element, Count] [++] [;] [Switch] [(] [Child, Element, Count] [)] [{] [Case] [1] [:] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [)] [;] [Break] [;] [Case] [2] [:] [Check, Ndc, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [)] [;] [Break] [;] [Case] [3] [:] [Check, Throwable, Element] [(] [(] [Element] [)] [Node] [,] [Ex] [)] [;] [Break] [;] [Case] [4] [:] [Check, Properties, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [,] [Problem, Name] [)] [;] [Break] [;] [Default] [:] [Fail] [(] [", Unexpected element"] [)] [;] [Break] [;] [}] [Check, Message, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [)] [;] [Break] [;] [Check, Ndc, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [)] [;] [Break] [;] [Check, Throwable, Element] [(] [(] [Element] [)] [Node] [,] [Ex] [)] [;] [Break] [;] [Check, Properties, Element] [(] [(] [Element] [)] [Node] [,] [Problem, Name] [,] [Problem, Name] [)] [;] [Break] [;] [Fail] [(] [", Unexpected element"] [)] [;] [Break] [;] [Break] [;] [Break] [;] [Break] [;] [Fail] [(] [", Unexpected node type"] [)] [;] [Break] [;] [Test, Ndc, With, Cdata] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["com.example.bar"] [)] [;] [Level] [Level] [=] [Level] [.] [Info] [;] [String] [Ndc, Message] [=] ["<envelope><faultstring><![, Cdata[, The , Effective, Date]]></faultstring><envelope>"] [;] [Ndc] [.] [Push] [(] [Ndc, Message] [)] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] ["com.example.bar"] [,] [Logger] [,] [Level] [,] [", Hello, , World"] [,] [Null] [)] [;] [Layout] [Layout] [=] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [Ndc] [.] [Clear] [(] [)] [;] [Element] [Parsed, Result] [=] [Parse] [(] [Result] [)] [;] [Node, List] [Ndcs] [=] [Parsed, Result] [.] [Get, Elements, By, Tag, Name] [(] ["log4j:, Ndc"] [)] [;] [Assert, Equals] [(] [1] [,] [Ndcs] [.] [Get, Length] [(] [)] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [)] [;] [For] [(] [Node] [Child] [=] [Ndcs] [.] [Item] [(] [0] [)] [.] [Get, First, Child] [(] [)] [;] [Child] [!=] [Null] [;] [Child] [=] [Child] [.] [Get, Next, Sibling] [(] [)] [)] [{] [Buf] [.] [Append] [(] [Child] [.] [Get, Node, Value] [(] [)] [)] [;] [}] [Buf] [.] [Append] [(] [Child] [.] [Get, Node, Value] [(] [)] [)] [;] [Assert, Equals] [(] [Ndc, Message] [,] [Buf] [.] [To, String] [(] [)] [)] [;] [Test, Exception, With, Cdata] [Logger] [Logger] [=] [Logger] [.] [Get, Logger] [(] ["com.example.bar"] [)] [;] [Level] [Level] [=] [Level] [.] [Info] [;] [String] [Exception, Message] [=] ["<envelope><faultstring><![, Cdata[, The , Effective, Date]]></faultstring><envelope>"] [;] [Logging, Event] [Event] [=] [New] [Logging, Event] [(] ["com.example.bar"] [,] [Logger] [,] [Level] [,] [", Hello, , World"] [,] [New] [Exception] [(] [Exception, Message] [)] [)] [;] [Layout] [Layout] [=] [Create, Layout] [(] [)] [;] [String] [Result] [=] [Layout] [.] [Format] [(] [Event] [)] [;] [Element] [Parsed, Result] [=] [Parse] [(] [Result] [)] [;] [Node, List] [Throwables] [=] [Parsed, Result] [.] [Get, Elements, By, Tag, Name] [(] ["log4j:throwable"] [)] [;] [Assert, Equals] [(] [1] [,] [Throwables] [.] [Get, Length] [(] [)] [)] [;] [String, Buffer] [Buf] [=] [New] [String, Buffer] [(] [)] [;] [For] [(] [Node] [Child] [=] [Throwables] [.] [Item] [(] [0] [)] [.] [Get, First, Child] [(] [)] [;] [Child] [!=] [Null] [;] [Child] [=] [Child] [.] [Get, Next, Sibling] [(] [)] [)] [{] [Buf] [.] [Append] [(] [Child] [.] [Get, Node, Value] [(] [)] [)] [;] [}] [Buf] [.] [Append] [(] [Child] [.] [Get, Node, Value] [(] [)] [)] [;] [Assert, True] [(] [Buf] [.] [To, String] [(] [)] [.] [Index, Of] [(] [Exception, Message] [)] [!=] [-] [1] [)] [;]
Class XMLLayoutTestCase@@ [Static] [String] [Temp="output/temp"] [;] [Static] [String] [Filtered="output/filtered"] [;] [Logger] [Root] [;] [Logger] [Logger] [;] [Set, Up] [Root] [=] [Logger] [.] [Get, Root, Logger] [(] [)] [;] [Root] [.] [Set, Level] [(] [Level] [.] [Trace] [)] [;] [Logger] [=] [Logger] [.] [Get, Logger] [(] [Xml, Layout, Test, Case] [.] [Class] [)] [;] [Logger] [.] [Set, Level] [(] [Level] [.] [Trace] [)] [;] [Tear, Down] [Root] [.] [Get, Logger, Repository] [(] [)] [.] [Reset, Configuration] [(] [)] [;] [Basic] [Xml, Layout] [Xml, Layout] [=] [New] [Xml, Layout] [(] [)] [;] [Root] [.] [Add, Appender] [(] [New] [File, Appender] [(] [Xml, Layout] [,] [Temp] [,] [False] [)] [)] [;] [Common] [(] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Line, Number, Filter] [(] [)] [,] [New] [Xml, Timestamp, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/xml, Layout.1"] [)] [)] [;] [Location, Info] [Xml, Layout] [Xml, Layout] [=] [New] [Xml, Layout] [(] [)] [;] [Xml, Layout] [.] [Set, Location, Info] [(] [True] [)] [;] [Root] [.] [Add, Appender] [(] [New] [File, Appender] [(] [Xml, Layout] [,] [Temp] [,] [False] [)] [)] [;] [Common] [(] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Line, Number, Filter] [(] [)] [,] [New] [Xml, Timestamp, Filter] [(] [)] [,] [New] [Xml, Line, Attribute, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/xml, Layout.2"] [)] [)] [;] [Test, Cdata] [Xml, Layout] [Xml, Layout] [=] [New] [Xml, Layout] [(] [)] [;] [Xml, Layout] [.] [Set, Location, Info] [(] [True] [)] [;] [Root] [.] [Add, Appender] [(] [New] [File, Appender] [(] [Xml, Layout] [,] [Temp] [,] [False] [)] [)] [;] [String] [Old, Thread, Name] [=] [Thread] [.] [Current, Thread] [(] [)] [.] [Get, Name] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] ["main"] [)] [;] [Logger] [.] [Trace] [(] [", Message with embedded <![, Cdata[<hello>hi</hello>]]>."] [)] [;] [Logger] [.] [Debug] [(] [", Message with embedded <![, Cdata[<hello>hi</hello>]]>."] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Old, Thread, Name] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Line, Number, Filter] [(] [)] [,] [New] [Xml, Timestamp, Filter] [(] [)] [,] [New] [Xml, Line, Attribute, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [}] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Line, Number, Filter] [(] [)] [,] [New] [Xml, Timestamp, Filter] [(] [)] [,] [New] [Xml, Line, Attribute, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/xml, Layout.3"] [)] [)] [;] [Test, Null] [Xml, Layout] [Xml, Layout] [=] [New] [Xml, Layout] [(] [)] [;] [Root] [.] [Add, Appender] [(] [New] [File, Appender] [(] [Xml, Layout] [,] [Temp] [,] [False] [)] [)] [;] [String] [Old, Thread, Name] [=] [Thread] [.] [Current, Thread] [(] [)] [.] [Get, Name] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] ["main"] [)] [;] [Logger] [.] [Debug] [(] ["hi"] [)] [;] [Logger] [.] [Debug] [(] [Null] [)] [;] [Exception] [E] [=] [New] [Exception] [(] [(] [String] [)] [Null] [)] [;] [Logger] [.] [Debug] [(] ["hi"] [,] [E] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Old, Thread, Name] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Line, Number, Filter] [(] [)] [,] [New] [Xml, Timestamp, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Sun, Reflect, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/xml, Layout.null"] [)] [)] [;] [Test, Mdc] [Xml, Layout] [Xml, Layout] [=] [New] [Xml, Layout] [(] [)] [;] [Xml, Layout] [.] [Set, Properties] [(] [True] [)] [;] [Root] [.] [Add, Appender] [(] [New] [File, Appender] [(] [Xml, Layout] [,] [Temp] [,] [False] [)] [)] [;] [Hashtable] [Context] [=] [Mdc] [.] [Get, Context] [(] [)] [;] [If] [(] [Context] [!=] [Null] [)] [{] [Context] [.] [Clear] [(] [)] [;] [}] [Context] [.] [Clear] [(] [)] [;] [Mdc] [.] [Put] [(] ["key1"] [,] ["val1"] [)] [;] [Mdc] [.] [Put] [(] ["key2"] [,] ["val2"] [)] [;] [Logger] [.] [Debug] [(] [", Hello"] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Xml, Timestamp, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/xml, Layout.mdc.1"] [)] [)] [;] [Test, Mdc, Escaped] [Xml, Layout] [Xml, Layout] [=] [New] [Xml, Layout] [(] [)] [;] [Xml, Layout] [.] [Set, Properties] [(] [True] [)] [;] [Root] [.] [Add, Appender] [(] [New] [File, Appender] [(] [Xml, Layout] [,] [Temp] [,] [False] [)] [)] [;] [Hashtable] [Context] [=] [Mdc] [.] [Get, Context] [(] [)] [;] [If] [(] [Context] [!=] [Null] [)] [{] [Context] [.] [Clear] [(] [)] [;] [}] [Context] [.] [Clear] [(] [)] [;] [Mdc] [.] [Put] [(] ["blah, Attribute"] [,] ["<blah value='blah'>"] [)] [;] [Mdc] [.] [Put] [(] ["<blah, Key value='blah'/>"] [,] ["blah, Value"] [)] [;] [Logger] [.] [Debug] [(] [", Hello"] [)] [;] [Transformer] [.] [Transform] [(] [Temp] [,] [Filtered] [,] [New] [Filter] [[] []] [{] [New] [Line, Number, Filter] [(] [)] [,] [New] [Junit, Test, Runner, Filter] [(] [)] [,] [New] [Xml, Timestamp, Filter] [(] [)] [}] [)] [;] [Assert, True] [(] [Compare] [.] [Compare] [(] [Filtered] [,] ["witness/xml, Layout.mdc.2"] [)] [)] [;] [Common] [String] [Old, Thread, Name] [=] [Thread] [.] [Current, Thread] [(] [)] [.] [Get, Name] [(] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] ["main"] [)] [;] [Int] [I] [=] [-] [1] [;] [New] [X] [(] [)] [;] [Logger] [.] [Trace] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Trace] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Debug] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Info] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Info] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Warn] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Warn] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Error] [(] [", Message "] [+] [I] [)] [;] [Logger] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [++] [I] [)] [;] [Root] [.] [Log] [(] [Level] [.] [Fatal] [,] [", Message "] [+] [I] [)] [;] [Exception] [E] [=] [New] [Exception] [(] [", Just testing"] [)] [;] [Logger] [.] [Debug] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Root] [.] [Debug] [(] [", Message "] [+] [I] [,] [E] [)] [;] [Logger] [.] [Error] [(] [", Message "] [+] [++] [I] [,] [E] [)] [;] [Root] [.] [Error] [(] [", Message "] [+] [I] [,] [E] [)] [;] [Thread] [.] [Current, Thread] [(] [)] [.] [Set, Name] [(] [Old, Thread, Name] [)] [;] [Suite] [Test, Suite] [Suite] [=] [New] [Test, Suite] [(] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Xml, Layout, Test, Case] [(] ["basic"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Xml, Layout, Test, Case] [(] ["location, Info"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Xml, Layout, Test, Case] [(] ["test, Cdata"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Xml, Layout, Test, Case] [(] ["test, Null"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Xml, Layout, Test, Case] [(] ["test, Mdc"] [)] [)] [;] [Suite] [.] [Add, Test] [(] [New] [Xml, Layout, Test, Case] [(] ["test, Mdc, Escaped"] [)] [)] [;] [Return] [Suite] [;]
Class X@@ [Logger] [Logger=, Logger.get, Logger(, X.class)] [;] [Logger] [.] [Info] [(] ["in , X() constructor"] [)] [;]